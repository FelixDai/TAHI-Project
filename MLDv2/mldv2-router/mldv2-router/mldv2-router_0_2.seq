#!/usr/bin/perl
# 
# Copyright (C) IPv6 Promotion Council, NTT Advanced Technology Corporation
# (NTT-AT), Yokogwa Electoric Corporation and YASKAWA INFORMATION SYSTEMS
# Corporation All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with
# or without modification, are permitted provided that the following
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which
# is related to this software (hereinafter referred to as "project") nor
# the names of the contributors may be used to endorse or promote products
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
# notification to the copyrighters. However, using this software for the
# purpose of testing or evaluating any products including merchantable
# products may be permitted without any notification to the copyrighters.
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
# 
###############################################################################
BEGIN {}
END   {}

#------------------------------------------------------------------------------
# Include
#------------------------------------------------------------------------------
# Include Module
use strict;
use warnings;
use V6evalTool;
use MLDv2R;

#------------------------------------------------------------------------------
vLog2("Setup");
#------------------------------------------------------------------------------
# Variable
my $stp = 0;
my $rtn;
my $wk;

# Requirement configuration
%T_REQ = ();

# Specification configuration
%T_CONF = ();

# Topology
@T_LINK = ("Link0", "Link1");
@T_NODE = ();

# Setup
$rtn = Setup();
if ($rtn != $RES_OK) {
	goto TERM;
}

#------------------------------------------------------------------------------
vLog2("Procedure");
#------------------------------------------------------------------------------
# Sequence
%T_SEQ = (
	$stp++ => {
		caption => [ "Step 0. Configure the variable on RUT as a config file." ],
		func    => "ConfProc",
		status  => 0,
	},
	$stp++ => {
		caption => [ "Step 1. Enable MLDv2 on the RUT." ],
		func    => "EnableProc",
		status  => 0,
	},
	$stp++ => {
		caption => [ "Step 2. Observe the packets on all networks." ],
		qg_int  => $CONF_DATA{SQI},
		func    => $CONF_DATA{FUNC_ENABLE_QUERY} ? "RecvProc" : "BaseProc",
		link    => "Link0",
		wtime   => [ $CONF_DATA{ENABLE_TIME}, $CONF_DATA{SQI} + $CONF_DATA{MARGIN_TIME} ],
		count   => $CONF_DATA{SQC},
		msgs    => [ "MLDv2Q_rut0l_allnodes_m0" ],
		status  => 0,
		stack   => "L0SQG",
	},
	$stp++ => {
		qg_int  => $CONF_DATA{SQI},
		func    => $CONF_DATA{FUNC_ENABLE_QUERY} ? "RecvProc" : "BaseProc",
		link    => "Link1",
		wtime   => [ $CONF_DATA{ENABLE_TIME}, $CONF_DATA{SQI} + $CONF_DATA{MARGIN_TIME} ],
		count   => $CONF_DATA{SQC},
		msgs    => [ "MLDv2Q_rut1l_allnodes_m0" ],
		status  => 0,
		stack   => "L1SQG",
	},
);

# Execute
for ($stp = 0; $T_SEQ{$stp}; $stp++) {
	no strict 'refs';
	$rtn = &{$T_SEQ{$stp}{func}}($stp);
	if ($rtn != $RES_OK) {
		last;
	}
}

#------------------------------------------------------------------------------
vLog2("Complement Judgement");
#------------------------------------------------------------------------------
$wk = JudgeCommon();
if (($wk != $RES_OK) && ($rtn == $RES_OK)) {
	$rtn = $wk;
}

TERM:
#------------------------------------------------------------------------------
vLog2("Termination");
#------------------------------------------------------------------------------
# 
Term($rtn);

###############################################################################
__END__


=head1 Test Label

=begin html
MLD.0.2 Trial. TN receives message

=end html

=head1 Purpose

=begin html
Trial.

=end html

=head1 References

=begin html
None

=cut
<PRE>
</PRE>

=pod

=end html

=head1 Discussion

=begin html
None

=end html

=head1 Test Requirement

=begin html
None

=end html

=head1 Test Setup

=begin html
<UL><LI><FONT SIZE="+1"><B>Common Topology</B></FONT></UL>
<PRE><FONT SIZE="+1">
   TN2     TR4     TR3
    |       |       |
   -+-------+-------+-------+---- Network 1
                            |
                (I/F: Link1)|
                            RUT
                              |(I/F: Link0)
                              |
                             -+-------+-------+-------+---- Network 0
                                      |       |       |
                                     TR1     TR2     TN1
</FONT></PRE>
<BLOCKQUOTE><TABLE BORDER>
<TR><TD><TT>ID</TT></TD>
    <TD><TT>attribute</TT></TD>
    <TD><TT>value</TT></TD>
    <TD><TT>memo</TT></TD></TR>
<TR><TD><TT>Network 0</TT></TD>
    <TD><TT>prefix</TT></TD>
    <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
    <TD><TT>I/F Link0 is connected.</TT></TD></TR>
<TR><TD ROWSPAN="3"><TT>TR1</TT></TD>
    <TD><TT>ether</TT></TD>
    <TD><TT>00:00:00:00:00:01</TT></TD>
    <TD ROWSPAN="3"><TT>Lower IP Address</TT></TD></TR>
<TR><TD><TT>link-local</TT></TD>
    <TD><TT>fe80::200:ff:fe00:1</TT></TD></TR>
<TR><TD><TT>global</TT></TD>
    <TD><TT>3ffe:501:ffff:100:200:ff:fe00:1</TT></TD></TR>
<TR><TD ROWSPAN="3"><TT>TR2</TT></TD>
    <TD><TT>ether</TT></TD>
    <TD><TT>fc:fc:fc:fc:fc:fc</TT></TD>
    <TD ROWSPAN="3"><TT>Higher IP Address</TT></TD></TR>
<TR><TD><TT>link-local</TT></TD>
    <TD><TT>fe80::fcfc:fcff:fefc:fcfc</TT></TD></TR>
<TR><TD><TT>global</TT></TD>
    <TD><TT>3ffe:501:ffff:100:fcfc:fcff:fefc:fcfc</TT></TD></TR>
<TR><TD ROWSPAN="3"><TT>TN1</TT></TD>
    <TD><TT>ether</TT></TD>
    <TD><TT>00:00:00:11:11:11</TT></TD>
    <TD ROWSPAN="3"><TT>&nbsp;</TT></TD></TR>
<TR><TD><TT>link-local</TT></TD>
    <TD><TT>fe80::200:ff:fe11:1111</TT></TD></TR>
<TR><TD><TT>global</TT></TD>
    <TD><TT>3ffe:501:ffff:100:200:ff:fe11:1111</TT></TD></TR>
<TR><TD><TT>Network 1</TT></TD>
    <TD><TT>prefix</TT></TD>
    <TD><TT>3ffe:501:ffff:101::/64</TT></TD>
    <TD><TT>I/F Link0 is connected.</TT></TD></TR>
<TR><TD ROWSPAN="3"><TT>TR3</TT></TD>
    <TD><TT>ether</TT></TD>
    <TD><TT>00:00:00:00:00:03</TT></TD>
    <TD ROWSPAN="3"><TT>Lower IP Address</TT></TD></TR>
<TR><TD><TT>link-local</TT></TD>
    <TD><TT>fe80::200:ff:fe00:3</TT></TD></TR>
<TR><TD><TT>global</TT></TD>
    <TD><TT>3ffe:501:ffff:101:200:ff:fe00:3</TT></TD></TR>
<TR><TD ROWSPAN="3"><TT>TR4</TT></TD>
    <TD><TT>ether</TT></TD>
    <TD><TT>fc:fc:fc:fc:fc:fd</TT></TD>
    <TD ROWSPAN="3"><TT>Higher IP Address</TT></TD></TR>
<TR><TD><TT>link-local</TT></TD>
    <TD><TT>fe80::fefc:fcff:fefc:fcfd</TT></TD></TR>
<TR><TD><TT>global</TT></TD>
    <TD><TT>3ffe:501:ffff:101:fefc:fcff:fefc:fcfd</TT></TD></TR>
<TR><TD ROWSPAN="3"><TT>TN2</TT></TD>
    <TD><TT>ether</TT></TD>
    <TD><TT>00:00:00:22:22:22</TT></TD>
    <TD ROWSPAN="3"><TT>&nbsp;</TT></TD></TR>
<TR><TD><TT>link-local</TT></TD>
    <TD><TT>fe80::200:ff:fe22:2222</TT></TD></TR>
<TR><TD><TT>global</TT></TD>
    <TD><TT>3ffe:501:ffff:101:200:ff:fe22:2222</TT></TD></TR>
</TABLE></BLOCKQUOTE>
<UL><LI><B><FONT SIZE="+1">Common Test Setup</FONT></B>
    <OL><LI>Configure RUT to have:
        <UL><LI>Robustness Variable of 2
            <LI>Query Interval of 125 (seconds)
            <LI>Query Response Interval of 10 (seconds)
            <LI>Last Listener Query Interval of 1 (second)</UL>
        <LI>Configure TR1, TR2, TR3 and TR4 to have:
        <UL><LI>Robustness Variable of 2
            <LI>Query Interval of 125 (seconds)
            <LI>Query Response Interval of 10 (seconds)
            <LI>Last Listener Query Interval of 1 (second)</UL></OL><BR>
    <LI><B><FONT SIZE="+1">Common Test Cleanup</FONT></B>
    <OL><LI>Disable MLD on all devices.
        <LI>Return all timers and variables to their defaults values.
        <LI>The Query Interval of RUT can be shortened to decrease time.</OL></UL>
    <LI>The Query Interval of RUT can be shortened to decrease time.</UL>

=end html

=head1 Procedure

=begin html
<PRE>
Step 1. Enable MLDv2 on the RUT.
Step 2. Observe the packets on all networks.
</PRE>

=end html

=head1 Observable Results

=begin html
<PRE>
Step 2: The RUT may transmit Report with Record TO_EX (FF02::16,{null}) for [RV] times at interval of [URI] second(s).
        The RUT must transmit Startup General Query with Max Response Code of [QRI] origin, QRV of [RV], and QQIC of [QI] origin.
<BR>
   TN2     TR4     TR3      RUT      TR1     TR2     TN1
    |       |       |       | |       |       |       |
    |       |       |       | |       |       |       | 1. Enable MLDv2 on the RUT.
    |       |       |       | |       |       |       | 2. Observe the packets on all networks.
    |< - - - - - - - - - - -| |- - - - - - - - - - - >|    RUT transmits TO_EX(FF02::2,{null}), [RV] times, [URI] second(s)
    |<----------------------| |---------------------->|    RUT transmits Q(G), [SQC] times, [SQI] second(s)
    |       |       |       | |       |       |       |
</PRE>

=end html

=head1 Possible Problems

=begin html
None

=end html
