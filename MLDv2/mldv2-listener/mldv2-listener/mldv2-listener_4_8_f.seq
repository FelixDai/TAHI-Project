#!/usr/bin/perl
# 
# Copyright (C) IPv6 Promotion Council, NTT Advanced Technology Corporation
# (NTT-AT), Yokogwa Electoric Corporation and YASKAWA INFORMATION SYSTEMS
# Corporation All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with
# or without modification, are permitted provided that the following
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which
# is related to this software (hereinafter referred to as "project") nor
# the names of the contributors may be used to endorse or promote products
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
# notification to the copyrighters. However, using this software for the
# purpose of testing or evaluating any products including merchantable
# products may be permitted without any notification to the copyrighters.
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
# 
###############################################################################
BEGIN {}
END   {}

#------------------------------------------------------------------------------
# Include
#------------------------------------------------------------------------------
# Include Module
use strict;
use warnings;
use V6evalTool;
use MLDv2L;

#------------------------------------------------------------------------------
vLog2("Setup");
#------------------------------------------------------------------------------
# Variable
my $stp = 0;
my $rtn;
my $wk;

# Requirement configuration
%T_REQ = ();

# Specification configuration
%T_CONF = ();

# Topology
@T_LINK = ("Link0");
@T_NODE = ("TR1");

# Setup
$rtn = Setup();
if ($rtn != $RES_OK) {
	goto TERM;
}

#------------------------------------------------------------------------------
vLog2("Procedure");
#------------------------------------------------------------------------------
# Sequence
%T_SEQ = (
	$stp++ => {
		caption => [ "Step 0. Configure on the HUT." ],
		func    => "ConfProc",
		status  => 0,
	},
	$stp++ => {
		caption => [ "Step 31. Enable MLDv2 on the HUT." ],
		func    => "EnableProc",
		status  => 0,
	},
	$stp++ => {
		func    => $CONF_DATA{FUNC_ENABLE_REPORT} ? "RecvProc" : "BaseProc",
		link    => "Link0",
		wtime   => [ $CONF_DATA{URI} + $CONF_DATA{MARGIN_TIME} ],
		count   => $CONF_DATA{RV},
		msgs    => [ "MLDv2R_hut0l_mld2r_r1_t4hut0sn0" ],
		status  => 0,
	},
	$stp++ => {
		caption => [ "Step 32. Call ListenerAPI (S1, I1, M1, EXCLUDE, {NULL}) on the HUT." ],
		func    => "ListenerProc",
		socket  => "S1",
		if      => "IF0",
		mcast   => "MCAST1",
		filter  => "EXCLUDE",
		srcnum  => 0,
		source  => "NULL",
		status  => 0,
	},
	$stp++ => {
		caption => [ "Step 33. Observe the packets on all networks." ],
		func    => "RecvProc",
		link    => "Link0",
		wtime   => [ $CONF_DATA{URI} + $CONF_DATA{MARGIN_TIME} ],
		count   => $CONF_DATA{RV},
		msgs    => [ "MLDv2R_hut0l_mld2r_r1_t4m1n0" ],
		status  => 0,
	},
	$stp++ => {
		caption => [ "Step 34. TR1 transmits MLDv2 Multicast Address and Source Specific Query message B for M1 (S1) with Maximum Response Code of 20000.",
		             "Step 35. TR1 transmits MLDv2 Multicast Address Specific Query message A for M1 with Maximum Response Code of 1000." ],
		func    => "SendProc",
		link    => "Link0",
		msgs    => [ "MLDv2Q_tr1l_mcast1_m1n1s1_mrc20000",
		             "MLDv2Q_tr1l_mcast1_m1n0_mrc1000" ],
		status  => 0,
		stack   => "L0S1",
	},
	$stp++ => {
		caption => [ "Step 36. Observe the packets on all networks." ],
		func    => "RecvProc",
		link    => "Link0",
		stime   => [ "L0S1", 1 ],
		wtime   => [ (1000 / 1000) + $CONF_DATA{MARGIN_TIME} ],
		count   => 1,
		msgs    => [ "MLDv2R_hut0l_mld2r_r1_t2m1n0" ],
		status  => 0,
	},
	$stp++ => {
		func    => "RecvProc",
		link    => "Link0",
		stime   => [ "L0S1", 0 ],
		wtime   => [ (20000 / 1000) + $CONF_DATA{MARGIN_TIME} ],
		count   => 1,
		# msgs    => [ "MLDv2R_hut0l_mld2r_r1_t3m1n0" ],
		msgs    => [ "MLDv2R_any_any" ],
		status  => 1,
	},
);

# local packet
$pktdesc{MLDv2Q_tr1l_mcast1_m1n1s1_mrc20000} = "Send: TR1 -> M1, MLDv2 Query (M1,{S1}) with Max Response Code of 20000.";
$pktdesc{MLDv2Q_tr1l_mcast1_m1n0_mrc1000} = "Send: TR1 -> M1, MLDv2 Query (M1,{null}) with Max Response Code of 1000.";

# RETRY
my $rcnt = 0;
RETRY:

# Execute
for ($stp = 0; $T_SEQ{$stp}; $stp++) {
	no strict 'refs';
	$rtn = &{$T_SEQ{$stp}{func}}($stp);
	if ($rtn != $RES_OK) {
		last;
	}
}

#------------------------------------------------------------------------------
vLog2("Complement Judgement");
#------------------------------------------------------------------------------
$wk = JudgeCommon();
if (($wk != $RES_OK) && ($rtn == $RES_OK)) {
	$rtn = $wk;
}

# RETRY
if (($rtn != $RES_OK) && ($rcnt < $CONF_DATA{RETRY_COUNT})) {
	vLog2("RETRY");
	vLog2("Procedure");
	$rcnt ++;
	goto RETRY;
}

TERM:
#------------------------------------------------------------------------------
vLog2("Termination");
#------------------------------------------------------------------------------
# 
Term($rtn);

###############################################################################
__END__


=head1 Test Label

=begin html
MLD.4.8: MLDv2 Multicast Address Specific Query Competition<BR>
Part F: Previous Multicast Address and Source Specific Query with longer Maximum Response Code

=end html

=head1 Purpose

=begin html
To verify that the MLDv2 Listener replies an optimized report when queries are received continuously.

=end html

=head1 References

=begin html
RFC3810 6.2.  Action on Reception of a Query<BR>

=cut
<PRE>
   4. If there is already a pending response to a previous Query
      scheduled for this multicast address, and either the new Query is
      a Multicast Address Specific Query or the recorded source list
      associated with the multicast address is empty, then the multicast
      address source list is cleared and a single response is scheduled,
      using the Multicast Address Timer.  The new response is scheduled
      to be sent at the earliest of the remaining time for the pending
      report and the selected delay.
</PRE>

=pod

=end html

=head1 Discussion

=begin html
None

=end html

=head1 Test Requirement

=begin html
None

=end html

=head1 Test Setup

=begin html
<UL><LI><B><FONT SIZE="+1">Common Topology</FONT></B></UL>
<PRE><FONT SIZE="+1">
   HUT
    |(I/F: Link0)
    |
   -+-------+-------+-------+-------+---- Network 0
            |       |       |       |
           TR1     TR2     TR3     TN1
</FONT></PRE>
<BLOCKQUOTE>
<TABLE BORDER>
<TR><TD><TT>ID</TT></TD>
    <TD><TT>attibute</TT></TD>
    <TD><TT>address, prefix</TT></TD>
    <TD><TT>memo</TT></TD></TR>
<TR><TD><TT>Network 0</TT></TD>
    <TD><TT>prefix</TT></TD>
    <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
    <TD><TT>I/F Link0 is connected.</TT></TD></TR>
<TR><TD ROWSPAN="3"><TT>TR1</TT></TD>
    <TD><TT>ether</TT></TD>
    <TD><TT>00:00:00:00:00:01</TT></TD>
    <TD ROWSPAN="3"><TT>Lower IP Address</TT></TD></TR>
<TR><TD><TT>link-local</TT></TD>
    <TD><TT>fe80::200:ff:fe00:1</TT></TD></TR>
<TR><TD><TT>global</TT></TD>
    <TD><TT>3ffe:501:ffff:100:200:ff:fe00:1</TT></TD></TR>
<TR><TD ROWSPAN="3"><TT>TR2</TT></TD>
    <TD><TT>ether</TT></TD>
    <TD><TT>00:00:00:00:00:02</TT></TD>
    <TD ROWSPAN="3"><TT>Middle IP Address</TT></TD></TR>
<TR><TD><TT>link-local</TT></TD>
    <TD><TT>fe80::200:ff:fe00:2</TT></TD></TR>
<TR><TD><TT>global</TT></TD>
    <TD><TT>3ffe:501:ffff:100:200:ff:fe00:2</TT></TD></TR>
<TR><TD ROWSPAN="3"><TT>TR3</TT></TD>
    <TD><TT>ether</TT></TD>
    <TD><TT>00:00:00:00:00:03</TT></TD>
    <TD ROWSPAN="3"><TT>Higher IP Address</TT></TD></TR>
<TR><TD><TT>link-local</TT></TD>
    <TD><TT>fe80::200:ff:fe00:3</TT></TD></TR>
<TR><TD><TT>global</TT></TD>
    <TD><TT>3ffe:501:ffff:100:200:ff:fe00:3</TT></TD></TR>
<TR><TD ROWSPAN="3"><TT>TN1</TT></TD>
    <TD><TT>ether</TT></TD>
    <TD><TT>00:00:00:00:00:11</TT></TD>
    <TD ROWSPAN="3"><TT>&nbsp;</TT></TD></TR>
<TR><TD><TT>link-local</TT></TD>
    <TD><TT>fe80::200:ff:fe00:11</TT></TD></TR>
<TR><TD><TT>global</TT></TD>
    <TD><TT>3ffe:501:ffff:100:200:ff:fe00:11</TT></TD></TR>
</TABLE></BLOCKQUOTE>
<UL><LI><B><FONT SIZE="+1">Common Test Setup</FONT></B>
    <OL><LI>Configure HUT to have:
        <UL><LI>Robustness Variable of 2
            <LI>Query Interval of 125
            <LI>Query Response Interval of 10 seconds
            <LI>Unsolicited Report Interval of 1 second</UL></OL><BR>
    <LI><B><FONT SIZE="+1">Common Test Cleanup</FONT></B>
    <OL><LI>Return all timers and variables to their defaults values.
        <LI>Stop any listening.  HUT does not listen to any multicast other than a solicited-node multicast address of an address assigned to the interface.</OL></UL>

=end html

=head1 Procedure

=begin html
<PRE>
Step 31. Enable MLDv2 on the HUT.
Step 32. Call ListenerAPI (S1, I1, M1, EXCLUDE, {NULL}) on the HUT.
Step 33. Observe the packets on all networks.
Step 34. TR1 transmits MLDv2 Multicast Address and Source Specific Query message B for M1 (S1) with Maximum Response Code of 20000.
    -----
    IPv6 Header
        IPv6 Hop Limit                  = 1
        IPv6 Source Address             = TR1 Link-local Address
        IPv6 Destination Address        = M1
    Hop-by-Hop Options Header
        Router Alert Option
    ICMPv6 Header (MLD Query)
        Maximum Response Code           = 20000
        Multicast Address               = M1
        S Flag                          = 0
        QRV                             = 2
        QQIC                            = 125
        Number of Sources               = 1
        Source Address                  = S1
    -----
Step 35. TR1 transmits MLDv2 Multicast Address Specific Query message A for M1 with Maximum Response Code of 1000.
    -----
    IPv6 Header
        IPv6 Hop Limit                  = 1
        IPv6 Source Address             = TR1 Link-local Address
        IPv6 Destination Address        = M1
    Hop-by-Hop Options Header
        Router Alert Option
    ICMPv6 Header (MLD Query)
        Maximum Response Code           = 1000
        Multicast Address               = M1
        S Flag                          = 0
        QRV                             = 2
        QQIC                            = 125
        Number of Sources               = 0
    -----
Step 36. Observe the packets on all networks.
</PRE>

=end html

=head1 Observable Results

=begin html
<PRE>
Step 33: The HUT must transmit 2 MLDv2 Report messages with Multicast Address Record TO_EX (NULL) for M1.
Step 36: The HUT must transmit MLDv2 Report message with Multicast Address Record IS_EX (NULL) for M1 within 1 second from Step 35.
         Then, the HUT must not transmit MLDv2 Report message with Multicast Address Record for M1 within 20 seconds from Step 34.
<BR>
   HUT     TR1     TR2     TR3     TN1
    |       |       |       |       |
    |       |       |       |       | 31. Enable MLDv2 on the HUT.
    |       |       |       |       | 32. Call ListenerAPI (S1, I1, M1, EXCLUDE, {NULL}) on the HUT.
    |       |       |       |       | 33. Observe the packets on all networks.
    |------------------------------>|     HUT transmits TO_EX (M1,{NULL}), [RV] times, [URI] second(s)
    |<------|       |       |       | 34. TR1 transmits MLDv2 Multicast Address and Source Specific Query message B for M1 (S1) with Maximum Response Code of 20000.
    |<------|       |       |       | 35. TR1 transmits MLDv2 Multicast Address Specific Query message A for M1 with Maximum Response Code of 1000.
    |       |       |       |       | 36. Observe the packets on all networks.
    |------------------------------>|     HUT transmits IS_EX (M1,{NULL})
    |       |       |       |       |
</PRE>

=end html

=head1 Possible Problems

=begin html
Since HUT decides on time to transmit each MLDv2 Report message at random, the expected result may not be obtained.  The expected result by several trials will be obtained.  Besides, probability may be raised by adjusting Maximum Response Code of MLDv2 Query message.

=end html
