#
# Copyright (C) IPv6 Promotion Council, NTT Advanced Technology Corporation
# (NTT-AT), Yokogwa Electoric Corporation and YASKAWA INFORMATION SYSTEMS
# Corporation All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with
# or without modification, are permitted provided that the following
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which
# is related to this software (hereinafter referred to as "project") nor
# the names of the contributors may be used to endorse or promote products
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
# notification to the copyrighters. However, using this software for the
# purpose of testing or evaluating any products including merchantable
# products may be permitted without any notification to the copyrighters.
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
#
###########################################################################

Requirement
===========

1. Application

   The application that operates the service interface
   "IPv6MulticastListen" shown in RFC 3810 is required.  Operation of the
   application is described by the following interface in the test
   documents.

   ListenerAPI (Socket, Interface, Multicast, Filter mode, {Source list})

   Socket:
      Socket keeps up the Interface and the Multicast, while being opened.
      On the other hand, the Filter mode and the Source list can be
      changed.  In the document, the identifiers of the socket specified as
      an argument of a function are described to be S1, S2, etc.

   Interface:
      In the document, the identifiers of the Interface specified as an
      argument of a function are described to be I1 and I2.  I2 appears,
      only when HUT has multiple interfaces.

   Multicast:
      In the document, the identifiers of the Multicast specified as an
      argument of a function are described to be M1, M2, etc.

   Filter mode:
      In the document, the identifiers of the Filter mode specified as an
      argument of a function are described to be INCLUDE and EXCLUDE.

   Source list:
      In the document, the identifiers of the Source list specified as an
      argument of a function are described to be S1, S2, etc.  A source
      list can be specified to 90 addresses. However, it may return in an
      error by insufficient resources.

2. Remote control from TN to NUT

   In the test, the operation on NUT is needed.  (A boot, the call of API,
   etc.)  In the test tool, the structure that operates NUT by remote
   control from TN is prepared.
   A default only displays directions on TN, when NUT should be operated.
   In this case, a user needs to operate NUT manually.  However, in the
   test that requires strict timing, it is not realistic.
   User has to prepare the automatic remote control file corresponding to
   implementation.



Configuration
=============

1. Physical Configurations

1.1. Network Under Test

   a) Basic (NUT has only one interface.)

                           TN                  NUT
        the Tester I/F: ed1 |                   | the I/F Under Test: fxp0
                            |                   |
                         ---+-------------------+--- Link0

   b) Basic + Advanced Function "2 interfaces"

                         ---+-------------------+--- Link1
                            |                   |
        the Tester I/F: ed2 |                   | the I/F Under Test: fxp1
                           TN                  NUT
        the Tester I/F: ed1 |                   | the I/F Under Test: fxp0
                            |                   |
                         ---+-------------------+--- Link0

1.2. Physical wiring image

   a) Only Basic (NUT has only one interface.)

                TN                                NUT
               +------------+                   +------------+
               |            | Ether cross cable |            |
               |       [ed1]+-------------------+[fxp0]      |
               |            |                   |            |
               +-----+------+                   +-----+------+
                     |                                |
                     +--------------------------------+
                             (Remote Control line)

   b) Basic + Advanced Function "2 interfaces"

                TN                                NUT
               +------------+                   +------------+
               |            | Ether cross cable |            |
               |       [ed2]+-------------------+[fxp1]      |
               |            |                   |            |
               |            | Ether cross cable |            |
               |       [ed1]+-------------------+[fxp0]      |
               |            |                   |            |
               +-----+------+                   +-----+------+
                     |                                |
                     +--------------------------------+
                             (Remote control line)



Remote control system
=====================

1. /usr/local/v6eval/etc/tn.def

   You can set up the TN's device for remote control.

2. /usr/local/v6eval/etc/nut.def and the directory for romote files.

   You can describe the remote control for NUT in remote files.  The
   description depends on the implementation.  Therefore, the directory
   that stores remote files is independently prepared by each system.

   Default Remote files is in below. 

      /use/local/v6eval/bin/manual/

   System entry in nut.def has meant this directory.

      ==========================================================
      System          manual
      ==========================================================

   You can create other system name and the corresponding directory.

      /use/local/v6eval/bin/XXX/

      ==========================================================
      System          XXX
      ==========================================================

Note)
   We do not support about the remote files of your system. Some similar
   samples may be able to be found with the package of remote files.



Remote files
============

   Remote files necessary to this test tool is the following.  You should
   describe the following operations.

   The start operation sequence of test item is either of the two types.
   It is whether it reboots. The call of remote files has a difference.
   A remote file is used for the call of LinsterAPI.

   (A) When rebooting, remote files are called in following order.

      1. mldv2DisableHUT.rmt

         It is an opportunity which stops MLDv2 function under behavior.
         If the disabling is impossible, for example by clearing information,
         cause an initial sequence at the opportunity of enabling.

      2. mldv2SetHUT.rmt

         It is an opportunity which sets up the variable to NUT. Variables
         are given to a remote file as arguments. Depending on implementation,
         command execution can be made or a configuration file can be described.

      3. reboot.rmt

         It is an opportunity which reboots NUT.

      4. mldv2EnableHUT.rmt

         It is an opportunity which enables MLDv2 function.

   (B) When not rebooting, remote files are called in following order.

      1. mldv2DisableHUT.rmt

      2. mldv2SetHUT.rmt

      3. mldv2EnableHUT.rmt

   (C) Listener API

      1. mldv2ListenerAPI.rmt

         This is an opportunity which calls Listener API. A socket, an interface,
         multicasting, etc. are received by an argument.



Results Backup
==============

   Note that running the tests clears the previous test results.
   If you do not want to lose them, you should make a new copy of ct-X
   package in a different directory.

   The method of simple backup of only result files.
   Note: Simple backup is not enough as corroborative data to IPv6 Ready Logo.

   To back up test results.
      $ cd $SOMEWHERE/ct-mldv2-listener-X.X.X/mldv2-listener
      $ result_bkup.sh XXX

      Test results are copied to new directory.
      ./RESULT/XXX_YYYYMMDDHHMMSS

   To make simple report.html through the XXX_* directories.
      $ result_index.sh XXX

      ./RESULT/XXX_report.html

# EOF
