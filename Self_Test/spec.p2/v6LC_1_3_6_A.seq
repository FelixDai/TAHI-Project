#!/usr/bin/perl
#
# $Name: V6LC_5_0_7 $
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $Id: F_Reassembly_Valid.seq,v 1.8 2010/03/30 01:19:01 akisada Exp $
#
######################################################################
BEGIN {
	$V6evalTool::TestVersion = '$Name: V6LC_5_0_7 $';
}

use V6evalTool;
use CommonSPEC;

$discard_te = $CommonSPEC::exceed_max;

$pktdesc{'echo_request_1st'}	= 'Send Echo Request with Destination Ext Hdr (1st fragment)';
$pktdesc{'echo_request_2nd'}	= 'Send Echo Request with ICMPv6 HDr(2nd fragment)';

$endStatus = $V6evalTool::exitPass;

#----- create Fragment ID
$id = time & 0x00000fff;
$fid = sprintf("0x0%07x", $id);
$rid = sprintf("0x0%03x", $id);
$sno = 0;

vCPP("-DFRAG_ID=$fid -DREQ_ID=$rid -DSEQ_NO=$sno");
################################################################
$IF = 'Link0';

vCapture($IF);

#======================================================================
if (setup11($IF) != $CommonSPEC::Success) {
	$ret = cleanup($IF);
	if ($ret == $CommonSPEC::Success) {
		exit($V6evalTool::exitFail);
	} else {
		exit($V6evalTool::exitFatal);
	}
}
#======================================================================

#----- test
vSend($IF, 'echo_request_1st');
vSend($IF, 'echo_request_2nd');

%ret = nd_vRecv_EN($IF,$CommonSPEC::wait_reply, 0, 0, 'icmperr'); 

if ($ret{'status'} == 0) {
	vLogHTML('OK<BR>');
} else {
	vLogHTML('Can not received Parameter Problem<BR>');
	vLogHTML('<FONT COLOR="#FF0000">NG</FONT><BR>');
	$endStatus = $V6evalTool::exitFail;
}


#-----end test

$ret = cleanup($IF);
vStop($IF);
if ($ret == $CommonSPEC::Success) {
	exit($endStatus);
} else {
	exit($V6evalTool::exitFatal);
}


######################################################################
__END__

=head1 NAME

  v6LC_1_3_6 - First Fragment Doesn't Contain All Headers
  Part A - Destination Options (Link-Local)  

=head1 TARGET

  Host and Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./v6LC_1_3_6_A.seq">v6LC_1_3_6_A.seq</A> [-tooloption ...] -pkt <A HREF="./v6LC_1_3_6_A.def">v6LC_1_3_6_A.def</A>
    -tooloption : v6eval tool option
</PRE>

=end html

=head1 INITIALIZATION

  None

=head1 TEST PROCEDURE

Verify that the node properly does not process IPv6 packets that don't include all the headers through the Upper-Layer header.

    TN                         NUT
    |                           |
    |-------------------------->|
    |   Echo Request (1st)      |
    |                           |
    |-------------------------->|
    |   Echo Request (2nd)      |
    |                           |
    |<--------------------------|
    |      Para Problem         |
    |                           |
    |                           |
    v                           v


  1. TN1 transmits Packet A.1 and A.2 to the NUT. 
  
  Echo Request Data (original) is:

        IPv6 Header
            Version            = 6
            Traffic Class      = 0
            FlowLabel          = 0
            PayloadLength      = 120
            NextHeader         = 58 (ICMPv6)
            SourceAddress      = TN Link Local Address
            DestinationAddress = NUT Link Local Address

	Destination Option Header
	    Next Header        = 58
	    Option             = PadN
	    
        ICMP Echo Request
            Type           = 128 (Echo Request)
            Code           = 0
            Checksum       = (auto)
            Identifier     = (auto)
            SequenceNumber = 0
            PayloadData    = data repeat{0x1, 40}
                             data repeat{0x2, 40}

  Echo Request Data (1st fragment) is:

        IPv6 Header
            Version            = 6
            Traffic Class      = 0
            FlowLabel          = 0
            PayloadLength      = 40
            NextHeader         = 44 (Fragment Header)
            SourceAddress      = TN Link Local Address
            DestinationAddress = NUT Link Local Address

        Fragment Header
            NextHeader         = 58 (ICMPv6)
            FragmentOffset     = 0
            MFlag              = 1
            Identification     = 32bit (Automatic generation)

        Payload
	    date               = 32 octets from the back of IPv6 Header

  Echo Request Data (2nd fragment) is:

        IPv6 Header
            Version            = 6
            Traffic Class      = 0
            FlowLabel          = 0
            PayloadLength      = 40
            NextHeader         = 44 (Fragment Header)
            SourceAddress      = TN Link Local Address
            DestinationAddress = NUT Link Local Address

        Fragment Header
            NextHeader         = 58 (ICMPv6)
            FragmentOffset     = 4
            MFlag              = 1
            Identification     = 32bit (Automatic generation)

        Payload
            data               = 88 octets from the back of Destination HDr


=head1 JUDGEMENT

  PASS: The NUT must discard the Echo Request and transmit Parameter Problem with a code 3 with the pointer field set to 0.

=head1 CLEANUP

Common Test Cleanup

=cut

# =head1 REFERENCE
# 
# RFC8200
# 
# 4.5  Fragment Header
# 
#   o If the first fragment does not include all headers through an
#     Upper-Layer header, then that fragment should be discarded and
#     an ICMP Parameter Problem, Code 3, message should be sent to
#     the source of the fragment, with the Pointer field set to zero. 

=pod

=head1 REFERENCE

=begin html
<BLOCKQUOTE>
<PRE>
RFC 8200 - IPv6 Specification
</PRE>
</BLOCKQUOTE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut

