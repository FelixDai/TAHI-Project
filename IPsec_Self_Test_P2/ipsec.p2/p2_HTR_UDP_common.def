//
// Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
// Yokogawa Electric Corporation.
// All rights reserved.
// 
// Redistribution and use of this software in source and binary
// forms, with or without modification, are permitted provided that
// the following conditions and disclaimer are agreed and accepted
// by the user:
// 
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in
//    the documentation and/or other materials provided with
//    the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project
//    which is related to this software (hereinafter referred to as
//    "project") nor the names of the contributors may be used to
//    endorse or promote products derived from this software without
//    specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written
//    notification to the copyrighters.
// 
// 5. The copyrighters, the project and the contributors may prohibit
//    the use of this software at any time.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
// $Name: V6PC_P2_IPsec_1_11_1 $
//
// $TAHI: ct/ipsec.p2/p2_HTR_UDP_common.def,v 1.8 2005/04/20 04:56:23 ozoe Exp $
//

#include "./p2_HTR_common.def"

#ifndef IPSEC_ECHO_DATA
#define IPSEC_ECHO_DATA echo_data8
#endif

//======================================================================
//
// Echo Request from Host1 (Net2) via SGW1 to NUT (Net0) on Net0
//

FEM_udp6(
	echo_request_from_host1_net2_to_host0_net0,
	hether_router2nut,
	{
		_SRC(v6(IPSEC_HOST1_NET2_ADDR));
		_DST(v6(IPSEC_NUT_NET0_ADDR));
	},
	{
		SourcePort	= 10000;
		DestinationPort	= DESTINATION_PORT;
	},
	{
		header = _HDR_UDP_NAME(echo_request_from_host1_net2_to_host0_net0);
		payload = IPSEC_ECHO_DATA;
	}
)

//======================================================================
//
// Echo Reply from Host1 (Net2) to Host2 (Net0) on Net0
//

FEM_udp6(
	echo_reply_from_host0_net0_to_host1_net2,
	hether_nut2router,
	{
		_SRC(v6(IPSEC_NUT_NET0_ADDR));
		_DST(v6(IPSEC_HOST1_NET2_ADDR));
	},
	{
		SourcePort	= DESTINATION_PORT;
		DestinationPort	= 10000;
	},
	{
		header = _HDR_UDP_NAME(echo_reply_from_host0_net0_to_host1_net2);
		payload = IPSEC_ECHO_DATA;
	}
)

//======================================================================
//
// Echo Request from Host2 (Net2) to NUT on Net0
//

FEM_udp6(
	echo_request_from_host2_net2_to_host0_net0,
	hether_router2nut,
	{
		_SRC(v6(IPSEC_HOST2_NET2_ADDR));
		_DST(v6(IPSEC_NUT_NET0_ADDR));
	},
	{
		SourcePort	= 10000;
		DestinationPort	= DESTINATION_PORT;
	},
	{
		header = _HDR_UDP_NAME(echo_request_from_host2_net2_to_host0_net0);
		payload = IPSEC_ECHO_DATA;
	}
)

//======================================================================
//
// Echo Reply from Host2 (Net2) to NUT on Net0
//

FEM_udp6(
	echo_reply_from_host0_net0_to_host2_net2,
	hether_nut2router,
	{
		_SRC(v6(IPSEC_NUT_NET0_ADDR));
		_DST(v6(IPSEC_HOST2_NET2_ADDR));
	},
	{
		SourcePort	= DESTINATION_PORT;
		DestinationPort	= 10000;
	},
	{
		header = _HDR_UDP_NAME(echo_reply_from_host0_net0_to_host2_net2);
		payload = IPSEC_ECHO_DATA;
	}
)

//======================================================================
//
// Echo Request from Host2 (Net1) to NUT on Net0
//

FEM_udp6(
	echo_request_from_host2_net1_to_host0_net0,
	hether_router2nut,
	{
		_SRC(v6(IPSEC_HOST2_NET1_ADDR));
		_DST(v6(IPSEC_NUT_NET0_ADDR));
	},
	{
		SourcePort	= 10000;
		DestinationPort	= DESTINATION_PORT;
	},
	{
		header = _HDR_UDP_NAME(echo_request_from_host2_net1_to_host0_net0);
		payload = IPSEC_ECHO_DATA;
	}
)

//======================================================================
//
// Echo Reply from Host2 (Net1) to NUT on Net0
//

FEM_udp6(
	echo_reply_from_host0_net0_to_host2_net1,
	hether_nut2router,
	{
		_SRC(v6(IPSEC_NUT_NET0_ADDR));
		_DST(v6(IPSEC_HOST2_NET1_ADDR));
	},
	{
		SourcePort	= DESTINATION_PORT;
		DestinationPort	= 10000;
	},
	{
		header = _HDR_UDP_NAME(echo_reply_from_host0_net0_to_host2_net1);
		payload = IPSEC_ECHO_DATA;
	}
)

//======================================================================
//
// Echo Request from Router
//

FEM_udp6(
	echo_request_from_router,
	hether_router2nut,
	{
		_SRC(v6(IPSEC_ROUTER_NET0_ADDR));
		_DST(v6merge(IPSEC_NET0_PREFIX, IPSEC_NET0_PREFIX_LEN, nutv6()));
	},
	{
		SourcePort	= 10000;
		DestinationPort	= DESTINATION_PORT;
	},
	{
		header = _HDR_UDP_NAME(echo_request_from_router);
		payload = IPSEC_ECHO_DATA;
	}
)

//======================================================================
//
// Echo Reply to Router
//

FEM_udp6(
	echo_reply_to_router,
	hether_nut2router,
	{
		_SRC(v6merge(IPSEC_NET0_PREFIX, IPSEC_NET0_PREFIX_LEN, nutv6()));
		_DST(v6(IPSEC_ROUTER_NET0_ADDR));
	},
	{
		SourcePort	= DESTINATION_PORT;
		DestinationPort	= 10000;
	},
	{
		header = _HDR_UDP_NAME(echo_reply_to_router);
		payload = IPSEC_ECHO_DATA;
	}
)

//======================================================================
//
// Echo Request from Host1
//

FEM_udp6(
	echo_request_from_host1,
	hether_router2nut,
	{
		_SRC(v6(IPSEC_HOST1_NET1_ADDR));
		_DST(v6(IPSEC_NUT_NET0_ADDR));
//		_DST(v6merge(IPSEC_NET0_PREFIX, IPSEC_NET0_PREFIX_LEN, nutv6()));
	},
	{
		SourcePort	= 10000;
		DestinationPort	= DESTINATION_PORT;
	},
	{
		header = _HDR_UDP_NAME(echo_request_from_host1);
		payload = IPSEC_ECHO_DATA;
	}
)

//======================================================================
//
// Echo Reply to Host1
//

FEM_udp6(
	echo_reply_to_host1,
	hether_nut2router,
	{
		_SRC(v6(IPSEC_NUT_NET0_ADDR));
//		_SRC(v6merge(IPSEC_NET0_PREFIX, IPSEC_NET0_PREFIX_LEN, nutv6()));
		_DST(v6(IPSEC_HOST1_NET1_ADDR));
	},
	{
		SourcePort	= DESTINATION_PORT;
		DestinationPort	= 10000;
	},
	{
		header = _HDR_UDP_NAME(echo_reply_to_host1);
		payload = IPSEC_ECHO_DATA;
	}
)

