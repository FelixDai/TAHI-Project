#!/usr/bin/perl
#
# Copyright (C) IPv6 Promotion Council,
# NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT),
# Yokogwa Electoric Corporation, YASKAWA INFORMATION SYSTEMS Corporation
# and NTT Advanced Technology Corporation(NTT-AT) All rights reserved.
# 
# Technology Corporation.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#

#--------------------------------------------------------------#
# ENTRANCE
#--------------------------------------------------------------#
# Set the test version used for the display.
BEGIN { $V6evalTool::TestVersion = '$Name: NEMO_1_0_2 $'; }

# Import the package.
use V6evalTool;
use mip6_mn_config;
use mip6_mn_common;
use mip6_mn_get;
use mip6_mn_send;
use mip6_mn_recv;
use mip6_mn_msg;

#--------------------------------------------------------------#
# INITIALIZATION
#--------------------------------------------------------------#
# Do the test satisfied the condition.
my @options = (
	'TEST_STATE_NORMAL',        'YES',                0,
	'TEST_FUNC_REAL_HOME_LINK', 'YES',                0,
	'TEST_FUNC_DHAAD',          'YES',                0,
#	'ENV_INITIALIZE',           'BOOT',               0,
);

# Set the special environment
$MN_CONF{ENV_HA1_SET} = 'YES';

# Initialize the state of TARGET.
Init_MN(@options);

#--------------------------------------------------------------#
# PREPARATION
#--------------------------------------------------------------#
# Prepare other local variables.
my @value;
my $sec;

#--------------------------------------------------------------#
# TEST PROCEDURE
#--------------------------------------------------------------#
#--------------------------------------------------------------#
# NUT starts at Link0.
#--------------------------------------------------------------#
# Receive Home Agent Address Discovery Request. (NUTX -> NUT0_ha_any)
vRecv_at_Link0_NonHA($IF0, $FIRST_RA_TIME);

# for IKE
#if ($packet{status} != 0) {
#	$initcount ++;
#}

@HA_BA_VALUE = ('BA_Status', 0, 'BA_Rflag', 0);

##while reg##
# check1 bu     -->send ba (status=0,r=0)last
# check2 haadreq-->send haadrep(r=0) continue

vLogHTML_Info("<B>waits for BU</B>");

$now_time = time;
$end_time = $now_time + $BU_TIME;

while ($now_time < $end_time) {
	$sec = $end_time - $now_time;

	%packet = vRecv_at_LinkX($IF0, $sec,
		'bu_nutxga_ha0ga_hoa_nuthga',
		'haadrequest_nutxga_link0haany',
	);
	$now_time = time;

	if($packet{recvFrame} eq 'bu_nutxga_ha0ga_hoa_nuthga'){
		vLogHTML_Info("<B>HA0 sends Binding Acknowledgement, Status 0 , (R) bit 0.</B>");
		vSend_ba($IF0, 'ba_ha0ga_nutxga_rh2_nuthga', \%packet);
		$bu_flag = 1;
		last;
	}
	elsif($packet{recvFrame} eq 'haadrequest_nutxga_link0haany'){
		@value = ('HAADRep_Rflag',0);
		vSend_haadreply($IF0, 'haadreply_ha2ga_nutxga_list_ha0ha1ha2', \%packet, @value);
		%value_haadreq = get_value_of_haadrequest(0, \%packet);
		
#		if ( $value_haadreq{'HAADReq_Rflag'} eq '0') {
		if ( $value_haadreq{'RFlag'} eq '0') {
			vLogHTML_Fail("INIT FAIL: HA2 does not receive Home Agent Address Discovery Request with R bit =1.");
			$initcount ++;
			goto TERM;
		}
	}
}

if($bu_flag != 1){
	vLogHTML_Fail("INIT FAIL: HA0 does not receive Binding Update.");
	$initcount ++;
	goto TERM;
}

##while de-reg##
# check1 haadreq  -->send haadrep (ha0 ha1 ha2 rbit=off)
# check2 bu to ha0-->lifetime==0 last
# check3 bu to ha1-->before de-regi fail
# check4 bu to ha1-->before de-regi fail

vLogHTML_Info("<B>waits for de-registration</B>");

$now_time = time;
$end_time = $now_time + $BU_TIME;

while ($now_time < $end_time) {
	$sec = $end_time - $now_time;
	
	%packet = vRecv_at_LinkX($IF0, $sec,
		'bu_nutxga_ha0ga_hoa_nuthga',
		'haadrequest_nutxga_link0haany',
		'bu_nutxga_ha0ga_hoa_nuthga_coa_any_del',
		'bu_nutxga_ha1ga_hoa_nuthga',
		'bu_nutxga_ha2ga_hoa_nuthga',
	);
	$now_time = time;
	
	if($packet{recvFrame} eq 'bu_nutxga_ha0ga_hoa_nuthga_coa_any_del'){
		vSend_ba($IF0, 'ba_ha0ga_nutxga_rh2_nuthga', \%packet);
		%value_bu= get_value_of_bu(0, \%packet);
			$HA0_HR_de_bu_flag = 1;
			last;
	}
	elsif($packet{recvFrame} eq 'bu_nutxga_ha0ga_hoa_nuthga'){
#		vSend_ba($IF0, 'ba_ha0ga_nutxga_rh2_nuthga', \%packet);
#		%value_bu= get_value_of_bu(0, \%packet);
#		if($value_bu{Lifetime} == 0){
#			$HA0_HR_de_bu_flag = 1;
#			last;
#		}
#		else{
			$HA_num ++;
			if($HA_num > 2){
				vLogHTML_Fail("INIT FAIL: HA0 receive re-registration.");
				$initcount ++;
				goto TERM;
			}
#		}
	}
	elsif($packet{recvFrame} eq 'haadrequest_nutxga_link0haany'){
		@value = ('HAADRep_Rflag',0);
		vSend_haadreply($IF0, 'haadreply_ha2ga_nutxga_list_ha0ha1ha2', \%packet, @value);
		%value_haadreq = get_value_of_haadrequest(0, \%packet);
		
#		if ( $value_haadreq{'HAADReq_Rflag'} eq '0') {
		if ( $value_haadreq{'RFlag'} eq '0') {
			vLogHTML_Fail("INIT FAIL: HA2 does not receive Home Agent Address Discovery Request with R bit =1.");
			$initcount ++;
			goto TERM;
		}
	}
	elsif($packet{recvFrame} eq 'bu_nutxga_ha1ga_hoa_nuthga'){
		vLogHTML_Fail("INIT FAIL: HA0 does not receive de-registration.");
		$initcount ++;
		goto TERM;
	}
	elsif($packet{recvFrame} eq 'bu_nutxga_ha2ga_hoa_nuthga'){
		vLogHTML_Fail("INIT FAIL: HA0 does not receive de-registration.");
		$initcount ++;
		goto TERM;
	}
}

if($HA0_HR_de_bu_flag != 1){
	vLogHTML_Fail("INIT FAIL: HA0 does not receive de-registration.");
	$initcount ++;
	goto TERM;
}


##while new reg##
# check1 haadreq  -->send haadrep (ha0 ha1 ha2 rbit=off)
# check2 bu to ha0-->err
# check3 bu to ha1-->send ba (status=0 rbit=1 nextstep) last
# check4 bu to ha2-->send ba (status=0 rbit=1 nextstep) last

vLogHTML_Info("<B>waits for re-registration</B>");

$now_time = time;
$end_time = $now_time + $BU_TIME;

while ($now_time < $end_time) {
	$sec = $end_time - $now_time;

	%packet = vRecv_at_LinkX($IF0, $sec,
		'bu_nutxga_ha1ga_hoa_nuthga',
		'haadrequest_nutxga_link0haany',
		'bu_nutxga_ha0ga_hoa_nuthga',
		'bu_nutxga_ha2ga_hoa_nuthga',
	);
	$now_time = time;
	
	if($packet{recvFrame} eq 'bu_nutxga_ha1ga_hoa_nuthga'){
		@HA_BA_VALUE = ('BA_Status', 0, 'BA_Rflag', 1);
		vSend_ba($IF0, 'ba_ha1ga_nutxga_rh2_nuthga', \%packet);
		$HA1_re_bu_flag = 1;
		last;
	}
	elsif($packet{recvFrame} eq 'haadrequest_nutxga_link0haany'){
		@value = ('HAADRep_Rflag',0);
		vSend_haadreply($IF0, 'haadreply_ha2ga_nutxga_list_ha0ha1ha2', \%packet, @value);
		%value_haadreq = get_value_of_haadrequest(0, \%packet);
		
#		if ( $value_haadreq{'HAADReq_Rflag'} eq '0') {
		if ( $value_haadreq{'RFlag'} eq '0') {
			vLogHTML_Fail("INIT FAIL: HA2 does not receive Home Agent Address Discovery Request with R bit =1.");
			$initcount ++;
			goto TERM;
		}
	}
	elsif($packet{recvFrame} eq 'bu_nutxga_ha0ga_hoa_nuthga'){
		vLogHTML_Fail("INIT FAIL: HA0 receives re-registration.");
		$initcount ++;
		goto TERM;
	}
	elsif($packet{recvFrame} eq 'bu_nutxga_ha2ga_hoa_nuthga'){
		vLogHTML_Fail("INIT FAIL: HA2 receives re-registration.");
		$initcount ++;
		goto TERM;
	}
}


JUDGE_1:
#--------------------------------------------------------------#
# JUDGEMENT
#--------------------------------------------------------------#
if ($HA0_HR_de_bu_flag != 1) {
	vLogHTML_Fail("(*1) FAIL: HA0 receives the Binding Update with R=1 before HA0 not de-registration.");
	$failcount ++;
	goto TERM;
}
else{
	vLogHTML_Pass("(*1) PASS: HA0 receives the Binding Update with lifetime=0 and R=0.");
}


#check 2
if($HA1_re_bu_flag != 1){
	vLogHTML_Fail("(*2) FAIL: HA1 does not receive Binding Update.");
	$failcount ++;
}
else{
	vLogHTML_Pass("(*2) PASS: HA1 receives Binding Update with R=1.");
}


TERM:
#--------------------------------------------------------------#
# TERMINATION
#--------------------------------------------------------------#
# Terminate the state of TARGET.
Term_MN($IF0, 1);

################################################################
__END__


=head1 NAME

=begin html
  NEMO-MR-5-1-2-1-031 - Receiving HAAD-Reply(R = OFF by NEMO not suppoted & 1st = HA0 & 2nd = HA1 & 3nd = HA2)

=end html

=head1 TARGET

=begin html
<PRE>
Router
</PRE>

=end html


=head1 REQUIREMENT of TEST

=begin html
<PRE>
    - Function of Real Home Link: YES
    - Function of Dynamic Home Agent Address Discovery: YES
                    
</PRE>

=end html

=head1 TOPOLOGY

=begin html
<PRE>
<UL>
<LI><B><FONT SIZE="+1">TOPOLOGY-4 Real Home Link</FONT></B>
  There are three home agents.
</UL>
                          |
                         HA3                  CN0           VMN1
                          |                    |             |
                ---+------+--------------------+-------------+------ LinkZ
                   |
                                              LFN0   LFN1  VMN11
                   :                           |      |      |
                                     ---+------+------+------+------ Link1
                   |                    |
                   R2                  NUTY
                   |                    |
                ---+------+-------------+--------------------------- LinkY
                          |
                                              LFN0   LFN1  VMN11
                          :                    |      |      |
                                     ---+------+------+------+------ Link1
                          |             |
                          R1   NODE1   NUTX
                          |      |      |
  ---+------+------+------+------+------+--------------------------- LinkX
     |      |      |
                                              LFN0   LFN1  VMN11
     :      :      :                           |      |      |
                                     ---+------+------+------+------ Link1
     |      |      |                    |
    HA2    HA1    HA0          NODE0   NUT0
     |      |      |             |      |
  ---+------+------+-------------+------+--------------------------- Link0
</PRE>
<BLOCKQUOTE>
<TABLE BORDER>
<TR>
<TD><TT>Link0</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
<TD><TT>home link</TT></TD>
</TR>
<TR>
<TD><TT>LinkX</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:200::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkY</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:300::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkZ</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:400::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>Link1</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104::/64</TT></TD>
<TD><TT>NEMO link</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HA0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a0a0</TT></TD>
<TD ROWSPAN="3"><TT>home agent</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a0a0</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a0:a0</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HA1 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a1a1</TT></TD>
<TD ROWSPAN="3"><TT>home agent</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a1a1</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a1:a1</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HA2 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a2a2</TT></TD>
<TD ROWSPAN="3"><TT>home agent</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a2a2</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a2:a2</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>NODE0</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a3a3</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a3a3</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a3:a3</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R1 (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:200:200:ff:fe00:a4a4</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a4a4</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a4:a4</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>NODE1</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:200:200:ff:fe00:a5a5</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a5a5</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a5:a5</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R2 (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:300:200:ff:fe00:a6a6</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a6a6</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a6:a6</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HA3 (LinkZ)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:400:200:ff:fe00:a8a8</TT></TD>
<TD ROWSPAN="3"><TT> home agent of VMN1</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a8a8</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a8:a8</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>CN0</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:400:200:ff:fe00:aaaa</TT></TD>
<TD ROWSPAN="3"><TT>correspondent node</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:aaaa</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:aa:aa</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>VMN1</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:400:200:ff:fe00:abab</TT></TD>
<TD ROWSPAN="3"><TT>visited mobile node</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:abab</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:ab:ab</TT></TD>
</TR>
<TR>
<TD><TT>VMN11 (Link1)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104:200:ff:fe00:abab</TT></TD>
<TD><TT> care-of address of VMN1</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>LFN0</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104:200:ff:fe00:b0b0</TT></TD>
<TD ROWSPAN="3"><TT>local fixed node</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:b0b0</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:b0:b0</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>LFN1</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104:200:ff:fe00:b1b1</TT></TD>
<TD ROWSPAN="3"><TT>local fixed node</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:b1b1</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:b1:b1</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>NUT0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD ROWSPAN="3"><TT>egress interface</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>NUTX (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:200::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
<TR>
<TD><TT>NUTY (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:300::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>NUT0 (Link1)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104::&lt;NutDef.Link1_addr&gt;</TT></TD>
<TD ROWSPAN="3"><TT>ingress interface</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::&lt;NutDef.Link1_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>&lt;NutDef.Link1_addr&gt;</TT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>

=end html

=head1 SETUP

=begin html
<PRE>
<LI><B><FONT SIZE="+1">Common Setup-1</FONT></B>
<UL>
<LI>Reboot NUT
<LI>Enable MR function
<UL>
<LI>Turn on MR functions
</UL>
<LI>Initialize IPsec configuration
<LI>Set IPsec configuration
<UL>
<LI>This test requires following configurations.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA1_SA2.html">MR-HA0 SA1/SA2, Transport mode, Binding Update/Binding Acknowledgement</A>
</UL>
<LI>This test requires following configurations, If a related message is used.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA3_SA4.html">MR-HA0 SA3/SA4, Tunnel mode, Return Routability Signaling</A>
<LI><A HREF="SETUP_IPsec_HA0_SA5_SA6.html">MR-HA0 SA5/SA6, Transport mode, Prefix Discovery</A>
</UL>
<LI>This test also allow to use following configurations.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA7_SA8.html">MR-HA0 SA7/SA8, Tunnel mode, Payload Packets</A>
<LI><A HREF="SETUP_IPsec_HA0_SA9_SA10.html">MR-HA0 SA9/SA10, Tunnel mode, Payload Packets that belong to mobile network prefix</A>
<LI><A HREF="SETUP_IPsec_CN0_SA.html">MR-CN0, Transport mode, ICMP</A>
</UL>
</UL>
</UL>
</PRE>

=end html

=head1 INITIALIZATION

=begin html
<PRE>
<UL>
<LI><B><FONT SIZE="+1">In the case of Real Home Link</FONT></B>
</UL>
                    
      LFN0    NUT0     HA0     HA1     HA2      R1      R2     CN0
        |       |       |       |       |       |       |       |
        |       | <---- |       |       |       |       |       | 1.Router Advertisement
        |       |       |       |       |       |       |       |
        |     NUTX      |       |       |       |       |       |
        |       |       |       |       |       |       |       |
        |       | <---------------------------- |       |       | 2.Router Advertisement
        |       |       |       |       |       |       |       |
        |       | ----> |       |       |       |       |       | 3.Neighbor Solicitation (NUD)
        |       |       |       |       |       |       |       | 4.(no reply)
        |       |       |       |       |       |       |       |
                    
        1. Send Router Advertisement. (HA0 -> HA0_allnode_multi)
            # The Home Agent (H) bit is clear.
        2. Send Router Advertisement. (R1 -> R1_allnode_multi)
        3. Receive Neighbor Solicitation (NUD). (NUT0 -> HA0)
        4. (no reply)
                    
<UL>
<LI><B><FONT SIZE="+1">In the case of Virtual Home Link</FONT></B>
</UL>
                    
      LFN0    NUTX     HA0     HA1     HA2      R1      R2     CN0
        |       |       |       |       |       |       |       |
        |       | <---------------------------- |       |       | 1.Router Advertisement
        |       |       |       |       |       |       |       |
                    
        1. Send Router Advertisement. (R1 -> R1_allnode_multi)
                    
</PRE>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
                    
      LFN0    NUTX     HA0     HA1     HA2      R1      R2     CN0
        |       |       |       |       |       |       |       |
        |       | <---------------------------- |       |       | 1.Router Advertisement
        |       |       |       |       |       |       |       |
        |       | --------------------> |       |       |       | 2.Home Agent Address Discovery Request
        |       | <-------------------- |       |       |       | 3.Home Agent Address Discovery Reply
        |       |       |       |       |       |       |       |
        |       | ----> |       |       |       |       |       | 4.Binding Update
        |       | <---- |       |       |       |       |       | 5.Binding Acknowledgement
        |       |       |       |       |       |       |       |
        |       | --------------------> |       |       |       | 6.Home Agent Address Discovery Request
        |       | <-------------------- |       |       |       | 7.Home Agent Address Discovery Reply
        |       |       |       |       |       |       |       |
        |       | ----> |       |       |       |       |       | 8.Binding Update (*1)
        |       | <---- |       |       |       |       |       | 9.Binding Acknowledgement
        |       |       |       |       |       |       |       |
        |       | ------------> |       |       |       |       | 10.Binding Update (*2)
        |       | <------------ |       |       |       |       | 11.Binding Acknowledgement
        |       |       |       |       |       |       |       |
                    
        1. Send Router Advertisement. (R1 -> R1_allnode_multi)
        2. Receive Home Agent Address Discovery Request. (NUTX -> NUT0_ha_any)
            # The Mobile Router Support Flag (R) is set to 1.
        3. Send Home Agent Address Discovery Reply. (HA2 -> NUTX)
            # The Home Agent Addresses field contains global IP address for HA0.
            # The Home Agent Addresses field contains global IP address for HA1.
            # The Home Agent Addresses field contains global IP address for HA2.
            # The Mobile Router Support Flag (R) is set to 0.
        4. Receive Binding Update. (NUTX -> HA0)
            # The Mobile Router Flag (R) is set to 1.
        5. Send Binding Acknowledgement. (HA0 -> NUTX)
            # The Mobile Router Flag (R) is set to 0.
        6. Receive Home Agent Address Discovery Request. (NUTX -> NUT0_ha_any)
            # The Mobile Router Support Flag (R) is set to 1.
        7. Send Home Agent Address Discovery Reply. (HA2 -> NUTX)
            # The Home Agent Addresses field contains global IP address for HA0.
            # The Home Agent Addresses field contains global IP address for HA1.
            # The Home Agent Addresses field contains global IP address for HA2.
            # The Mobile Router Support Flag (R) is set to 0.
        8. Receive Binding Update. (NUTX -> HA0)
            # The Mobile Router Flag (R) is set to 1.
            # The Lifetime field is set to 0.
        9. Send Binding Acknowledgement. (HA0 -> NUTX)
            # The Mobile Router Flag (R) is set to 0.
       10. Receive Binding Update. (NUTX -> HA1)
            # The Mobile Router Flag (R) is set to 1.
       11. Send Binding Acknowledgement. (HA1 -> NUTX)
            # The Mobile Router Flag (R) is set to 1.
                    
    Focus Packet Format:
        <A HREF="../images/NEMO_HAA_Discovery_request_message_format_from_MR_to_HA.gif">2. Home Agent Address Discovery Request</A>
       <A HREF="../images/NEMO_Binding_Update_message_format_ESP_Exp_from_MR_to_HA.gif">10. Binding Update</A>
       <A HREF="../images/NEMO_Binding_Update_message_format_ESP_Imp_from_MR_to_HA.gif">10. Binding Update</A>
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
 (*1) PASS: HA0 receives Binding Update.
            Then, check whether this packet fills all of the following.
             - The Mobile Router Flag (R) is set to 1.
             - The Lifetime field is set to 0. 
 (*2) PASS: HA1 receives Binding Update.
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
RFC3963 NEMO Basic Support Protocol
    See Section 5.3
                    
RFC3775 Mobility Support in IPv6
    See Section 11.4.1
</PRE>

=end html

