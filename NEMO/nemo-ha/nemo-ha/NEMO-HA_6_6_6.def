//
// Copyright (C) IPv6 Promotion Council,
// NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT),
// Yokogwa Electoric Corporation, YASKAWA INFORMATION SYSTEMS Corporation
// and NTT Advanced Technology Corporation(NTT-AT) All rights reserved.
// 
// Technology Corporation.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
////////////////////////////////////////////////////////////////////////

#include "./config.def"

//#if ROTATE_HOA
//#define MN_MAC  "00:00:00:00:00:aa"
//#endif

// BU_MODE == 1
#ifdef BU_MODE
#undef BU_MODE
#endif

#define BU_MODE	1
#define MN_ID   22

#include "./mipv6.def"


FEM_upp_no_next_header_exth(
	local_bu,
	_HETHER_rx2nut,
	{
		_SRC(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
		_DST(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
	},
	{
		header  = _HDR_IPV6_NAME(local_bu);
		exthdr  = ext_homeaddress;
#if HAVE_IPSEC && USE_SA1_SA2
		exthdr  = ext_esp_d2_bu;
#endif
		exthdr  = ext_local_bu;
		upper   = _UPP_NONEXT_NAME(local_bu);
	},
	{}
)


FEM_upp_no_next_header_exth(
	local_de_bu,
	_HETHER_rx2nut,
	{
		_SRC(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
		_DST(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
	},
	{
		header  = _HDR_IPV6_NAME(local_de_bu);
		exthdr  = ext_homeaddress;
#if HAVE_IPSEC && USE_SA1_SA2
		exthdr  = ext_esp_d2_bu;
#endif
		exthdr  = ext_de_bu;
		upper   = _UPP_NONEXT_NAME(local_de_bu);
	},
	{}
)


FEM_upp_no_next_header_exth(
	local_ba,
	_HETHER_nut2rx,
	{
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
		_DST(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
	},
	{
		header  = _HDR_IPV6_NAME(local_ba);
		exthdr  = ext_routing;
#if HAVE_IPSEC && USE_SA1_SA2
		exthdr  = ext_esp_d2_ba;
#endif
		exthdr  = ext_ba;
		upper   = _UPP_NONEXT_NAME(local_ba);
	},
	{}
)


Hdr_MH_BU ext_local_bu {
	SequenceNumber  = BU_SN;
	AFlag           = BU_A;
	HFlag           = BU_H;
	LFlag           = BU_L;
	KFlag           = BU_K;
	RFlag           = BU_R;
	Lifetime        = BU_LT;
	option          = opt_mh_pad2;
	option          = opt_mh_altcoa;
// BU_MODE == 1
	option          = opt_mh_pad4;
	option          = opt_mh_local_mnp;
	option          = opt_mh_pad4;
	option          = opt_mh_local_mnp2;
}


Opt_MH_MobNetworkPrefix opt_mh_local_mnp {
	PrefixLength    = NEMO_PREFIXLEN;
	Prefix          = v6(NEMO_PREFIX);
}


Opt_MH_MobNetworkPrefix opt_mh_local_mnp2 {
	PrefixLength    = NEMO_02_PREFIXLEN;
	Prefix          = v6(NEMO_02_PREFIX);
}


FEM_icmp6_echo_request_exth(
	local_ereq_hao,
	_HETHER_rx2nut,
	{
		_SRC(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
		_DST(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
	},
	{
		header  = _HDR_IPV6_NAME(local_ereq_hao);
		exthdr  = ext_homeaddress;
#if HAVE_IPSEC && UNIQ_TRANS_SA && USE_SA5_SA6 && (!GRAN_TRANS_SA_TYPE)
		exthdr  = ext_esp_d2_mps;
#elif HAVE_IPSEC && (!UNIQ_TRANS_SA) && USE_SA1_SA2 && (!GRAN_TRANS_SA_TYPE)
		exthdr  = ext_esp_d2_bu;
#endif
		upper   = _ICMPV6_NAME(local_ereq_hao);
	},
	{
		payload = payload8;
	}
)


FEM_icmp6_echo_reply_exth(
	local_erep_routing,
	_HETHER_nut2rx,
	{
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
		_DST(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
	},
	{
		header  = _HDR_IPV6_NAME(local_erep_routing);
		exthdr  = ext_routing;
#if HAVE_IPSEC && UNIQ_TRANS_SA && USE_SA5_SA6 && (!GRAN_TRANS_SA_TYPE)
		exthdr  = ext_esp_d2_mpa;
#elif HAVE_IPSEC && (!UNIQ_TRANS_SA) && USE_SA1_SA2 && (!GRAN_TRANS_SA_TYPE)
		exthdr  = ext_esp_d2_ba;
#endif
		upper   = _ICMPV6_NAME(local_erep_routing);
	},
	{
		payload = payload8;
	}
)


FEM_hdr_ipv6_exth(
	local_tunnel_ereq,
	_HETHER_rx2nut,
	{
		_SRC(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
		_DST(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
	},
	{
		header  = _HDR_IPV6_NAME(local_tunnel_ereq);
#if HAVE_IPSEC && USE_SA9_SA10
		exthdr  = ext_esp_d2_mnp2cn;
#endif
		upper   = _PACKET_IPV6_NAME(local_ereq);
	}
)


FEM_hdr_ipv6_exth(
	local_tunnel_ereq2,
	_HETHER_rx2nut,
	{
		_SRC(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
		_DST(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
	},
	{
		header  = _HDR_IPV6_NAME(local_tunnel_ereq2);
#if HAVE_IPSEC && USE_SA9_SA10
		exthdr  = ext_esp_d2_mnp22cn;
#endif
		upper   = _PACKET_IPV6_NAME(local_ereq2);
	}
)


FEM_icmp6_echo_request(
	local_ereq,
	_HETHER_nut2rx,
	{
		_SRC(v6merge(NEMO_PREFIX, NEMO_PREFIXLEN, v6ether(LFNA_MAC)));
		_DST(tn2v6(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, LINKX_LINK));
	},
	{
		payload = payload8;
	}
)


FEM_icmp6_echo_request(
	local_ereq2,
	_HETHER_nut2rx,
	{
		_SRC(v6merge(NEMO_02_PREFIX, NEMO_02_PREFIXLEN, v6ether(LFNA_MAC)));
		_DST(tn2v6(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, LINKX_LINK));
	},
	{
		payload = payload8;
	}
)
