//
// Copyright (C) IPv6 Promotion Council,
// NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT),
// Yokogwa Electoric Corporation, YASKAWA INFORMATION SYSTEMS Corporation
// and NTT Advanced Technology Corporation(NTT-AT) All rights reserved.
// 
// Technology Corporation.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
////////////////////////////////////////////////////////////////////////

#ifndef HAVE_BINDING_CONFIRMATION_DEF
#define HAVE_BINDING_CONFIRMATION_DEF


FEM_icmp6_echo_request_exth(
	coa_ereq_hao,
	_HETHER_rx2nut,
	{
		_SRC(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
		_DST(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
	},
	{
		header  = _HDR_IPV6_NAME(coa_ereq_hao);
		exthdr  = ext_homeaddress;
#if HAVE_IPSEC && UNIQ_TRANS_SA && USE_SA5_SA6 && (!GRAN_TRANS_SA_TYPE)
		exthdr  = ext_esp_mps;
#elif HAVE_IPSEC && (!UNIQ_TRANS_SA) && USE_SA1_SA2 && (!GRAN_TRANS_SA_TYPE)
		exthdr  = ext_esp_bu;
#endif
		upper   = _ICMPV6_NAME(coa_ereq_hao);
	},
	{
		payload = payload8;
	}
)


FEM_icmp6_echo_reply_exth(
	coa_erep_routing,
	_HETHER_nut2rx,
	{
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
		_DST(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
	},
	{
		header  = _HDR_IPV6_NAME(coa_erep_routing);
		exthdr  = ext_routing;
#if HAVE_IPSEC && UNIQ_TRANS_SA && USE_SA5_SA6 && (!GRAN_TRANS_SA_TYPE)
		exthdr  = ext_esp_mpa;
#elif HAVE_IPSEC && (!UNIQ_TRANS_SA) && USE_SA1_SA2 && (!GRAN_TRANS_SA_TYPE)
		exthdr  = ext_esp_ba;
#endif
		upper   = _ICMPV6_NAME(coa_erep_routing);
	},
	{
		payload = payload8;
	}
)


FEM_icmp6_echo_request_exth(
	coa_ereq_hao_not_home_subnet,
	_HETHER_rx2nut,
	{
		_SRC(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
		_DST(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
	},
	{
		header  = _HDR_IPV6_NAME(coa_ereq_hao_not_home_subnet);
		exthdr  = ext_homeaddress_not_home_subnet;
		upper   = _ICMPV6_NAME(coa_ereq_hao_not_home_subnet);
	},
	{
		payload = payload8;
	}
)


FEM_icmp6_echo_reply_exth(
	coa_erep_routing_not_home_subnet,
	_HETHER_nut2rx,
	{
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
		_DST(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
	},
	{
		header  = _HDR_IPV6_NAME(coa_erep_routing_not_home_subnet);
		exthdr  = ext_routing_not_home_subnet;
		upper   = _ICMPV6_NAME(coa_erep_routing_not_home_subnet);
	},
	{
		payload = payload8;
	}
)


FEM_upp_no_next_header_exth(
	be_common,
	_HETHER_nut2rx,
	{
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
		_DST(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
	},
	{
		header  = _HDR_IPV6_NAME(be_common);
		exthdr  = ext_be;
		upper   = _UPP_NONEXT_NAME(be_common);
	},
	{}
)


FEM_upp_no_next_header_exth(
	be_common_not_home_subnet,
	_HETHER_nut2rx,
	{
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
		_DST(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
	},
	{
		header  = _HDR_IPV6_NAME(be_common);
		exthdr  = ext_be_not_home_subnet;
		upper   = _UPP_NONEXT_NAME(be_common);
	},
	{}
)


Hdr_MH_BE ext_be {
	Status  = 1;
#if HOA_ADDRESS == 0
	Address = v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
#else
	Address = v6merge(NEMO_PREFIX, NEMO_PREFIXLEN, v6ether(MN_MAC));
#endif
}


Hdr_MH_BE ext_be_not_home_subnet {
	Status  = 1;
	Address = v6merge(LINKZ_PREFIX, LINKZ_PREFIXLEN, v6ether(MN_MAC));
}


#endif
