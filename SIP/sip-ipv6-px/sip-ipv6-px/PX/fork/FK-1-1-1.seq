#!/usr/bin/perl
#
# Copyright(C) IPv6 Promotion Council (2004,2005). All Rights Reserved.
# 
# This documentation is produced by SIP SWG members of Certification WG in 
# IPv6 Promotion Council.
# The SWG members currently include NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT), 
# Yokogawa Electric Corporation and NTT Advanced Technology Corporation (NTT-AT).
# 
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.


#--------------------------------------------------------------#
# ENTRANCE
#--------------------------------------------------------------#

# Set the test version used for the display.
BEGIN { $V6evalTool::TestVersion = '$Name:  $';}

require SIP;

#--------------------------------------------------------------#
# INITIALIZATION
#--------------------------------------------------------------#
SIPScenarioModel('Server','UA-UA');
SIPInitializeScenario('','SKIP');

#--------------------------------------------------------------#
# SCENARIO Definition
#--------------------------------------------------------------#

# 
sub SEQ_UserAgentCallee {
    my($node,$func,$ua13_state); 

    $count = 1;

    $node=NDDefStart('UA12');

    SIP_SetUp_Reg_Info('UA12', 'UA13');

    # NUT
    $func=sub {
	my($result,$frame)=@_;
	
	if($result eq '180SENDED'){
	    $ua13_state = $result;
	    return 'CONTINUE';
	}

	JudgeResult($result,"Receive INVITE","Can't receive INVITE");

        $UA12_recv180_pkt = $frame;
	
	# INVITE 
	SIP_Judgment('SS.REQUEST.INVITE_FORWARDED.ONEPX.TM','','','',['S.TO-URI_LOCAL-URI','S.TO-TAG_ORIGINAL-TO-TAG']);

        return 'WAIT';
	
    };
    NDReqAction($node,$func,"INVITE",'D.DIALOG-SETUP.CALLEE');

        $func = sub {
            my($result,$frame)=@_;

        # 180 ^[$BAw?.^[(B
        SD_Term_STATUS('180','INVITE','ES.STATUS.180.ONEPX.TM',$UA12_recv180_pkt);

        return 'WAIT';

        };

    NDReqAction($node,$func,"START");


    $func=sub {
	my($result,$frame)=@_;

	if($result eq '180SENDED'){
	    $ua13_state = $result;
	}

	# 200 
	if($ua13_state eq '180SENDED'){
	    SD_Term_STATUS('200','INVITE','ES.STATUS.200-SDP-ANS.ONEPX.TM',$UA12_recv180_pkt);
	    return 'NEXT';
	}

	return 'CONTINUE';
    };
    NDStatusAction($node,$func,"START");
    
    # ACK 
    $func=sub {
	my($result,$frame)=@_;
	
	JudgeResult($result,"Receive ACK","Can't receive ACK");
	
	# ACK 
	SIP_Judgment('SS.REQUEST.200-ACK_FORWARDED.ONEPX.TM');
	
	# BYE 
	SD_Term_BYE();
	
	# 
	SEQ_Start('UA11');
	
	# 
	return 'NEXT';
    };
    NDReqAction($node,$func,"ACK");

    $func=sub {
	my($result,$frame)=@_;
	
	JudgeResult($result,"Receive 200","Can't receive 200");
	
	# 200 
	SIP_Judgment('SS.STATUS.BYE-200_FORWARDED.TM');
	
	# 
	return 'END';
    };
    NDStatusAction($node,$func,"200");
    
    NDDefEnd($node);
}


sub SEQ_UserAgentCallee2 {
    my($node,$func);
    
    $node=NDDefStart('UA13');

    SIP_SetUp_Reg_Info('UA13', 'UA11');

    # NUT
    $func=sub {
	my($result,$frame)=@_;
	
	JudgeResult($result,"Receive INVITE","Can't receive INVITE");
	
        $UA13_recv180_pkt = $frame;

	# INVITE 
	SIP_Judgment('SS.REQUEST.INVITE_FORWARDED.ONEPX.TM','','','',['S.TO-URI_LOCAL-URI','S.TO-TAG_ORIGINAL-TO-TAG']);

        SEQ_Start('UA12');
	
	# 
	return 'WAIT';
	
    };
    NDReqAction($node,$func,"INVITE",'D.DIALOG-SETUP.CALLEE');

    $func = sub {
        my($result,$frame)=@_;

        # 180 ^[$BAw?.^[(B
        SD_Term_STATUS('180','INVITE','ES.STATUS.180.ONEPX.TM',$UA13_recv180_pkt);

        $count = 2;

#	SEQ_Start('UA12','180SENDED');

        return 'NEXT';

    };

    NDReqAction($node,$func,"START");

    # CANCEL 
    $func=sub {
	my($result,$frame)=@_;
	
	JudgeResult($result,"Receive CANCEL","Can't receive CANCEL");
	
	# CANCEL 
#        SIP_Judgment('SS.REQUEST.CANCEL.TM');
	SIP_Judgment('SS.REQUEST.CANCEL.TM','','',['S.TO-URI_LOCAL-URI-F'],['S.TO-URI_LOCAL-URI']);

	# BYE 
	SD_Term_STATUS('200','CANCEL','ES.STATUS.200.ONEPX.TM');
	SD_Term_STATUS('487');
	
	# 
	return 'NEXT';
    };
    NDReqAction($node,$func,"CANCEL");
    
    
    $func=sub {
	my($result,$frame)=@_;
	
	JudgeResult($result,"Receive ACK","Can't receive ACK");
	
	# 200 
	SIP_Judgment('SS.REQUEST.ACK-NO2XX.TM','','',['S.TO-URI_LOCAL-URI-F'],['S.TO-URI_LOCAL-URI']);
	
        SEQ_Start('UA11');

	# 
	return 'END';
    };
    NDReqAction($node,$func,"ACK");
    
    NDDefEnd($node);
}


# 
sub SEQ_UserAgentCaller {
    my($node,$func);
    
    # 
    $node=NDDefStart('UA11');

	SIP_SetUp_Reg_Info('UA11', 'UA12');

#    NINFW('RemotePeer','UA13',$node);
    
    # UA
    $func=sub {
	my($result,$frame)=@_;
	
	# INVITE 
	SD_Term_INVITE();
	
	if(NDCFG('use_authorization') ne 'yes') {
	    SEQ_Start('UA12');
	    SEQ_Start('UA13');
	}

	# 
	return 'NEXT';
    };
    NDReqAction($node,$func,"START");

    # 407 
    $func=sub {
	my($result,$frame)=@_;
	
	JudgeResult($result,"Receive 407","Can't receive 407");
	
	# 407 
	SIP_Judgment('SS.STATUS.INVITE-407.TM');
	
	# ACK 
	SD_Term_ACK_NO200();
	
	# INVITE 
	SD_Term_INVITEwithAuth();
	
	# 
	SEQ_Start('UA12');
	SEQ_Start('UA13');
	
	return 'NEXT';
    };
    # 
    if(NDCFG('use_authorization') eq 'yes') {
	NDStatusAction($node,$func,"407",['D.Proxy-Authenticate.NONCE','D.TO-TAG','D.Proxy-Authenticate.OPAQUE']);
    }

    # 
    $func=sub {
	my($result,$frame)=@_;
	my($status);

	JudgeResult($result,"Receive 100 or 200","Can't receive 100 or 200");

	# 
	$status=FV('RQ.Status-Line.code', '', $frame);

	# 100
	if($status eq 100){
	    # 100 
	    SIP_Judgment('SS.STATUS.INVITE-100.TM');

#            SEQ_Start('UA12');

	    # 
	    return 'CONTINUE';
	}

#----------------------------------------------
	# 180
#	if($status eq 180){
	    # 180 
#    SIP_Judgment('SS.STATUS.INVITE-180.TM');

#            if($count eq 1) {
#                 SEQ_Start('UA13');
#            }else{ 
#                 SEQ_Start('UA12','180SENDED');
#           }

	    # 
#	    return 'CONTINUE';
#	}
#------------------------------------------------

        # 180^[$B$N>l9g^[(B 
        if($status eq 180){
           # 180 ^[$B$NH=Dj^[(B
            if($count eq 1){
                 SIP_Judgment('SS.STATUS.INVITE-180.TM');
                 SEQ_Start('UA13');
            }else{
                 
#                 SIP_Judgment('SS.STATUS.INVITE-180.TM');
                 SIP_Judgment('SS.STATUS.INVITE-180.TM','','',['S.TO-TAG_ORIGINAL-TO-TAG-F'],['S.TO-TAG_ORIGINAL-TO-TAG']);
                 SEQ_Start('UA12','180SENDED');
            }

            # ^[$B<B9T7QB3;X<(^[(B
            return 'CONTINUE';
        }




	# 200
	if($status eq 200){
	    # 200 
	    SIP_Judgment('SS.STATUS.INVITE-200.TM');

	    # ACK 
#	    SD_Term_ACK();

	    # 
	    return 'WAIT';
	}
	return 'CONTINUE';
    };
    NDStatusAction($node,$func,"^[12]",'D.DIALOG-SETUP.CALLER');

#Inoue_add------------------------------
    $func = sub {
        my($result,$frame)=@_;
    
        # ACK ^[$BAw?.^[(B
        SD_Term_ACK();
        return 'WAIT';
    };

    NDReqAction($node,$func,'START');

#---------------------------------------

    # BYE 
    $func=sub {
	my($result,$frame)=@_;

	JudgeResult($result,"Receive BYE","Can't receive BYE");

	# BYE 
	SIP_Judgment('SS.REQUEST.BYE_FORWARDED.ONEPX.TM');

	# 200 
	SD_Term_STATUS('200','BYE','ES.STATUS.200.ONEPX.TM');

	# 
	return 'END';
    };
    NDReqAction($node,$func,"BYE");

    NDDefEnd($node);
}

SEQ_UserAgentCallee();
SEQ_UserAgentCaller();
SEQ_UserAgentCallee2();
SEQ_Start('UA11');

#--------------------------------------------------------------#
# SCENARIO Start
#--------------------------------------------------------------#

# Echo from Proxy
#SQ_Proxy_Echo();

SEQ_Run();

#--------------------------------------------------------------#
# Finish
#--------------------------------------------------------------#

SIPFinishScenario();

#######################################################################

=head1 NAME

=begin html
 <A HREF="http://www.ipv6ready.org/">Please see SIP Conformance Test Profile (http://www.ipv6ready.org/)</A>

=end html

=head1 TARGET

=begin html
<pre>
 SIP PX (NUT)
</pre>

=end html

=head1 PARAMETER

=begin html
<blockquote>
<table border>
<tbody>

</tbody>
</table>
</blockquote>

=end html

=head1 ADDRESS

=begin html
<blockquote>
<table border>
<tbody>

</tbody>
</table>
</blockquote>

=end html

=head1 TOPOLOGY

=begin html
<pre>
 
</pre>

=end html

=head1 CONFIGURATION for NUT

=begin html
<blockquote>
<table border>
<tbody>

</tbody>
</table>
</blockquote>

=end html

=head1 INITIALIZATION

=begin html
<pre>
 
</pre>

=end html

=head1 TEST PROCEDURE

=begin html
<pre>
 
</pre>

=end html

=head1 JUDGEMENT

=begin html
<pre>
 
</pre>

=end html

=head1 REFERENCE

=begin html
<pre>
 
</pre>

=end html

=cut

