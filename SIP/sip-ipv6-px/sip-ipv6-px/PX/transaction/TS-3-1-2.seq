#!/usr/bin/perl
#
# Copyright(C) IPv6 Promotion Council (2004,2005). All Rights Reserved.
# 
# This documentation is produced by SIP SWG members of Certification WG in 
# IPv6 Promotion Council.
# The SWG members currently include NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT), 
# Yokogawa Electric Corporation and NTT Advanced Technology Corporation (NTT-AT).
# 
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.


#--------------------------------------------------------------#
# ENTRANCE
#--------------------------------------------------------------#

# Set the test version used for the display.
BEGIN { $V6evalTool::TestVersion = '$Name:  $';}

require SIP;

#--------------------------------------------------------------#
# INITIALIZATION
#--------------------------------------------------------------#
SIPScenarioModel('Server','UA-UA');
SIPInitializeScenario('','SKIP');

#--------------------------------------------------------------#
# SCENARIO Definition
#--------------------------------------------------------------#

# 
sub SEQ_UserAgentCallee {
    my($node,$func,$recv4xxcount);
    $recv4xxcount = 1;
    $node=NDDefStart('UA11');

	SIP_SetUp_Reg_Info('UA11','UA12');

    # NUT
    $func=sub {
	my($result,$frame)=@_;
	
       	# INVITE 
	SD_Term_INVITE();
#	SEQ_Start('UA11');
#	printf("kokomadekiteru 1");

        if(NDCFG('use_authorization') ne 'yes') {SEQ_Start('UA12');}

        # ^[$B<B9T7QB3;X<(^[(B
	return 'NEXT';
    };
    NDReqAction($node,$func,"START");

    # 407 ^[$B<u?.^[(B
    $func=sub {
        my($result,$frame)=@_;

        JudgeResult($result,"Receive 407","Can't receive 407");

        # 407 ^[$B$NH=Dj^[(B
        SIP_Judgment('SS.STATUS.INVITE-407.TM');

        # ACK ^[$BAw?.^[(B
        SD_Term_ACK_NO200('','','','',CNNCreate());
        if(!CheckNo100('ACK')){
            LOG_Err("No send 100 Trying");
        }

        # INVITE ^[$BAw?.^[(B
        SD_Term_INVITEwithAuth();

        # ^[$BAj<j%7%J%j%*:F3+^[(B
	SEQ_Start('UA12');
#        SEQ_Start('UA11');

        return 'NEXT';
    };
    if(NDCFG('use_authorization') eq 'yes') {
        NDStatusAction($node,$func,"407",['D.Proxy-Authenticate.NONCE','D.TO-TAG','D.Proxy-Authenticate.OPAQUE']);
    }


    # Receive 4xx-6xx 
    $func=sub {
	my($result,$frame)=@_;
	my($status);
#	printf("kokomadekiteru 2");

	if($result eq 'recv'){
	    $status=FVal('RQ.Status-Line.code',$frame);
#	    printf("status=%s",$status);
	    if($status =~ /^[456]/){
		if($recv4xxcount eq 1){
		    StoreTIMERInfo($CNT_CONF{'TIMER-T1'}*64,"Fire H Timer",$frame);
		    $recv4xxcount++;
#		    print("status=%s",$status);
		    return 'CONTINUE';
		}
		else{
#		    printf("%s ",$status);
		    return 'CONTINUE';
		}
	    }
	}
	elsif($result eq 'timeout'){
	    SIP_Judgment('ST.RETRANS-486.INVITE');
	    return 'END';
	}
	return 'CONTINUE';
    };
    NDStatusAction($node,$func,"^[456]",'','',$CNT_CONF{'TIMER-T1'}*64+5);
    NDDefEnd($node);
}


# 
sub SEQ_UserAgentCaller {
    my($node,$func,$send4xx_count);
    $send4xx_count = 1;
    # 
    $node=NDDefStart('UA12');

	SIP_SetUp_Reg_Info('UA12', 'UA11');

    # Receive INVITE
    $func=sub {
	my($result,$frame)=@_;
	my($status);

	JudgeResult($result,"Receive INVITE","Can't receive INVITE");
	SIP_Judgment('SS.REQUEST.INVITE_FORWARDED.TWOPX.TM');
	return 'NEXT';
    };
    NDReqAction($node,$func,"INVITE");

    # Send 4xx-6xx
    $func=sub {
	my($result,$frame)=@_;
	my($status);

       	if($send4xx_count < 8){
	    SD_Term_STATUS('486');
	    printf("send4xx_count=%s\n",$send4xx_count);
	    if($send4xx_count < 7){
		printf("4 ika ($result)\n");
		SEQ_SetRecvTimer($node,$CNT_CONF{'TIMER-T1'}*(3*$send4xx_count));
		$send4xx_count++;
		return 'CONTINUE';
	    }
	    elsif($send4xx_count >= 4 && $send4xx_count < 7){
		printf("4 ijou TIMER = %s ($result)\n",$CNT_CONF{'TIMER-T1'}*(2**6));
		SEQ_SetRecvTimer($node,11);
		$send4xx_count++;
		return 'CONTINUE';
	    }
 	    elsif($send4xx_count eq 7){
		if($status eq 'timeout'){
		    return 'END';
		}
 	    }
	    return 'END';
	}
    };
    NDReqAction($node,$func,"UNINVITE",'','',$CNT_CONF{'TIMER-T1'});

    NDDefEnd($node);
}

SEQ_UserAgentCallee();
SEQ_UserAgentCaller();
SEQ_Start('UA11');

#--------------------------------------------------------------#
# SCENARIO Start
#--------------------------------------------------------------#

# Echo from Proxy
#SQ_Proxy_Echo();

SEQ_Run();

#--------------------------------------------------------------#
# Finish
#--------------------------------------------------------------#

SIPFinishScenario();

#######################################################################

=head1 NAME

=begin html
 <A HREF="http://www.ipv6ready.org/">Please see SIP Conformance Test Profile (http://www.ipv6ready.org/)</A>

=end html

=head1 TARGET

=begin html
<pre>
 SIP PX (NUT)
</pre>

=end html

=head1 PARAMETER

=begin html
<blockquote>
<table border>
<tbody>

</tbody>
</table>
</blockquote>

=end html

=head1 ADDRESS

=begin html
<blockquote>
<table border>
<tbody>

</tbody>
</table>
</blockquote>

=end html

=head1 TOPOLOGY

=begin html
<pre>
 
</pre>

=end html

=head1 CONFIGURATION for NUT

=begin html
<blockquote>
<table border>
<tbody>

</tbody>
</table>
</blockquote>

=end html

=head1 INITIALIZATION

=begin html
<pre>
 
</pre>

=end html

=head1 TEST PROCEDURE

=begin html
<pre>
 
</pre>

=end html

=head1 JUDGEMENT

=begin html
<pre>
 
</pre>

=end html

=head1 REFERENCE

=begin html
<pre>
 
</pre>

=end html

=cut

