#!/usr/bin/perl
#
# Copyright(C) IPv6 Promotion Council (2004,2005). All Rights Reserved.
# 
# This documentation is produced by SIP SWG members of Certification WG in 
# IPv6 Promotion Council.
# The SWG members currently include NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT), 
# Yokogawa Electric Corporation and NTT Advanced Technology Corporation (NTT-AT).
# 
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.


#--------------------------------------------------------------#
# ENTRANCE
#--------------------------------------------------------------#

# Set the test version used for the display.
BEGIN { $V6evalTool::TestVersion = '$Name:  $';}

require SIP;

#--------------------------------------------------------------#
# INITIALIZATION
#--------------------------------------------------------------#
SIPScenarioModel('Server','UA-PX');
SIPInitializeScenario('','SKIP');

#--------------------------------------------------------------#
# SCENARIO Definition
#--------------------------------------------------------------#

# 
sub SEQ_Proxy {
    my($node,$func);
    
    $node=NDDefStart('PX2');
    
    # NUT
    $func=sub {
	my($result,$frame)=@_;

	JudgeResult($result,"Receive REGISTER","Can't receive REGISTER");

	# REGISTER 
	SIP_Judgment('SS.REQUEST.REGISTER_FORWARDED.PX');

	# 401 
	SD_Proxy_STATUS('401','REGISTER');

	# 
	return 'NEXT';

    };
    NDReqAction($node,$func,"REGISTER");

    # REGISTER 
    $func=sub {
	my($result,$frame)=@_;

	JudgeResult($result,"Receive REGISTER","Can't receive REGISTER");

	# REGISTER 
	SIP_Judgment('SS.REQUEST.REGISTER_FORWARDED.PX');

	$rules = [
                  # FORWARDED REGISTER-200 RG-3-1-2
		  {'TY:'=>'RULESET', 'ID:'=>'ES.STATUS.REGISTER-200.PX.local', 'MD:'=>'SEQ', 
		   'RR:'=>[
			   'E.STATUS-200',
			   'E.VIA_RETURN_RECEIVED',
			   'EESet.BASIC-FTCC-RETURN-TOTAG',
			   'E.CONTACT-RETURN-EX',
			   'E.DATE_VALID',
			   'E.CONTENT-LENGTH_0'],
		       'EX:'=>\q{MargeSipMsg(@_)}},
		 ];
	RegistRuleSet($rules);

	SD_Proxy_STATUS('200','REGISTER','ES.STATUS.REGISTER-200.PX.local');

	# 
	return 'END';
    };
    NDReqAction($node,$func,"REGISTER");

    NDDefEnd($node);
}

# 
sub SEQ_UserAgent {
    my($node,$func);
    
    # 
    $node=NDDefStart("UA11");
    
    # UA
    $func=sub {
	my($result,$frame)=@_;

	# UA
	SD_Term_REGISTER('ES.REQUEST.REGISTER.FORWARDING.TM');

	SEQ_Start('PX2');

	# 
	return 'NEXT';
    };
    NDReqAction($node,$func,"START");

    # 100 or 401 
    $func=sub {
	my($result,$frame)=@_;
	$status=FV('RQ.Status-Line.code', '', $frame);
	
	if($status eq 100){
	    # 100 
	    SIP_Judgment('SS.STATUS.REGISTER-100.FORWARDED.TM');
	    
	    # 
	    return 'CONTINUE';
	}
	if($status eq 401){
	    my($result,$frame)=@_;
	    JudgeResult($result,"Receive 401","Can't receive 401");
	    
	    # 
	    $rules = [
		{ 'TY:' => 'SYNTAX', 'ID:' => 'S.VIA_NOPX_SEND_EQUAL_FORWARDING', 'CA:' => 'Via',
		  'OK:' => \\'The Via header(%s) MUST equal that(%s) in the request(except received parameter of 1st Via).', 
		  'NG:' => \\'The Via header(%s) MUST equal that(%s) in the request(except received parameter of 1st Via).', 
		  'EX:' => \q{OpViaMachLines(\@CNT_NOPX_SEND_VIAS_FORWARDING,1,@_)} }, 
		];
	    RegistRuleSet($rules);
	    
	    # 401 
	    SIP_Judgment('SS.STATUS.FORWARDING.REGISTER-401.TM','','',['S.VIA_NOPX_SEND_EQUAL_FORWARDING'],['S.VIA_NOPX_SEND_EQUAL']);
	    
	    # AUTH
	    SD_Term_REGISTER('ES.REQUEST.REGISTER-AUTH.FORWARDING.TM');
	}
	return 'NEXT';	
    };
    NDStatusAction($node,$func,"^[14]");
    
    # 
    $func=sub {
	my($result,$frame)=@_;
	my($status);

	JudgeResult($result,"Receive 100 or 200","Can't receive 100 or 200");

	# 
	$status=FV('RQ.Status-Line.code', '', $frame);

	if($status eq 100){
	    # 100 
	    SIP_Judgment('SS.STATUS.REGISTER-100.FORWARDED.TM');
	    
	    # 
	    return 'CONTINUE';
	}

	# 200
	if($status eq 200){
	    # 200 
	    SIP_Judgment('SS.STATUS.FORWARDED.REGISTER-200.TM');
	}
	return 'END';
    };
    NDStatusAction($node,$func,"^[12]");

    NDDefEnd($node);
}

SEQ_Proxy();
SEQ_UserAgent();
SEQ_Start('UA11');

#--------------------------------------------------------------#
# SCENARIO Start
#--------------------------------------------------------------#

SEQ_Run();

#--------------------------------------------------------------#
# Finish
#--------------------------------------------------------------#
SIPFinishScenario();





#######################################################################

=head1 NAME

=begin html
 <A HREF="http://www.ipv6ready.org/">Please see SIP Conformance Test Profile (http://www.ipv6ready.org/)</A>

=end html

=head1 TARGET

=begin html
<pre>
 SIP PX (NUT)
</pre>

=end html

=head1 PARAMETER

=begin html
<blockquote>
<table border>
<tbody>

</tbody>
</table>
</blockquote>

=end html

=head1 ADDRESS

=begin html
<blockquote>
<table border>
<tbody>

</tbody>
</table>
</blockquote>

=end html

=head1 TOPOLOGY

=begin html
<pre>
 
</pre>

=end html

=head1 CONFIGURATION for NUT

=begin html
<blockquote>
<table border>
<tbody>

</tbody>
</table>
</blockquote>

=end html

=head1 INITIALIZATION

=begin html
<pre>
 
</pre>

=end html

=head1 TEST PROCEDURE

=begin html
<pre>
 
</pre>

=end html

=head1 JUDGEMENT

=begin html
<pre>
 
</pre>

=end html

=head1 REFERENCE

=begin html
<pre>
 
</pre>

=end html

=cut

