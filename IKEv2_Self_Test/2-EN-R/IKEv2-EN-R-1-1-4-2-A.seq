#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct-ikev2/2-EN-R/IKEv2-EN-R-1-1-4-2-A.seq,v 1.6 2010/07/22 13:32:58 doo Exp $
#
################################################################

BEGIN
{
	push(@INC, '..');
}

END { }

use IKEv2;
use strict;


my $remote	= 'common_remote_index';


my $session = undef;
my $ret = undef;
my $str = undef;

my $ike_sa_init_req_param = undef;
my $ike_sa_init_resp_param = undef;
my $ike_auth_req_param = undef;
my $ike_auth_resp_param = undef;
my $informational_req_param = undef;
my $informational_resp_param = undef;
my $material = undef;

my @local_informational_req = undef;
my @local_informational_resp = undef;

kLogHTML('<FONT COLOR="#FF0000" SIZE="+1"><U><B>TEST SETUP</B></U></FONT>');

#------------------------------#
# register IKEv2.pm            #
#------------------------------#
unless (IKEv2initialize('EN', 'EN')) {
	IKEv2exitFatal('<FONT COLOR="#ff0000">IKEv2 module initializing failure</FONT>');
}


#------------------------------#
# configure TN                 #
#------------------------------#
unless (IKEv2setupTN()) {
	IKEv2exitFatal('<FONT COLOR="#ff0000">TN setup failure</FONT>');
}


#------------------------------#
# configure NUT                #
#------------------------------#
unless (IKEv2setupNUT()) {
	IKEv2exitFatal('<FONT COLOR="#ff0000">NUT setup failure</FONT>');
}

kLogHTML('<FONT COLOR="#FF0000" SIZE="+1"><U><B>TEST PROCEDURE</B></U></FONT>');


#------------------------------#
# prepare session handler      #
#------------------------------#
$session = IKEv2create_session('common_remote_index');
unless (defined($session)) {
	IKEv2exitFatal('<FONT COLOR="#ff0000">IKEv2 session creation failure</FONT>');
}



#--------------------------------------#
# send IKE_SA_INIT request to NUT      #
#--------------------------------------#
{
	$str  = '<PRE>';
	$str .= "    (R)             (I)\n";
	$str .= "    NUT             TN1\n";
	$str .= "     |               |\n";
	$str .= "     |<--------------| IKE_SA_INIT request (HDR, SAi1, KEi, Ni)\n";
	$str .= "     |               |\n";
	$str .= "     V               V";
	$str .= '</PRE>';

	kLogHTML($str);

	my $ike_sa_init_req = IKEv2load_packet($gen_ike_sa_init_req, 'common_remote_index');
	# change MAJOR No
	for (my $i = 0; $i < scalar(@{$ike_sa_init_req}); $i++) {
		if ($ike_sa_init_req->[$i]->{'self'} eq 'HDR') {
			$ike_sa_init_req->[$i]->{'major'} = '3';
			last;
		}
	}
	my $index = 'EN-R-1-1-4-2.1';

	$gen_ike_sa_init_req->{$index} = $ike_sa_init_req;
	$ike_sa_init_req_param = devel_IKEv2send_IKE_SA_INIT_request($session, $index);
	unless (defined($ike_sa_init_req_param)) {
		kLogHTML(kDump_Common_Error());
		IKEv2exitFatal('<FONT COLOR="#ff0000">Can\'t send IKE_SA_INIT request.</FONT>');
	}
}


#--------------------------------------#
# receive IKE_SA_INIT response by NUT  #
#--------------------------------------#
{
	$str  = '<PRE>';
	$str .= "    (R)             (I)\n";
	$str .= "    NUT             TN1\n";
	$str .= "     |               |\n";
	$str .= "     |-------------->| IKE_SA_INIT response (HDR, SAr1, KEr, Nr)\n";
	$str .= "     |               |\n";
	$str .= "     V               V";
	$str .= '</PRE>';

	kLogHTML($str);

	my $notify_payload =
	{	# Notify Payload
		'self'		=> 'N',
		'nexttype'	=> '0',		# Next Payload
		'critical'	=> '0',		# Critical
		'reserved'	=> '0',		# RESERVED
		'length'	=> '8',		# Payload Length
		'id'		=> '0',		# Protocol ID
		'spiSize'	=> '0',		# SPI Size
		'type'		=> 'INVALID_MAJOR_VERSION',# Notify Type
		'spi'		=> undef,	# SPI
		'data'		=> undef,	# Notification Data
	};
	my $ike_sa_init_resp = IKEv2load_packet($exp_ike_sa_init_resp, 'common_remote_index');
	my @local_ike_sa_init_resp = @{$ike_sa_init_resp};
	# remove payload without HDR
	@local_ike_sa_init_resp = grep {
	                my $ret = 0;
	                if ($_->{'self'} eq 'HDR') { $ret = 1; }
	                $ret;
	        } @local_ike_sa_init_resp;
	# add Notify payload 
	push(@local_ike_sa_init_resp, $notify_payload);
	foreach my $payload (@local_ike_sa_init_resp) {
		if ($payload->{'self'} eq 'HDR') {
			$payload->{'nexttype'} = $notify_payload->{'self'};
			$payload->{'respSPI_comparator'} = 'eq';
			last;
		}
	}

	my $index = 'EN-R-1-1-4-2.2';
	$exp_ike_sa_init_resp->{$index} = \@local_ike_sa_init_resp;

	$ike_sa_init_resp_param = devel_IKEv2receive_IKE_SA_INIT_response($session,
									  $index,
									  $ike_sa_init_req_param);
	unless (defined($ike_sa_init_resp_param)) {
		kLogHTML(kDump_Common_Error());
		kLogHTML('<FONT COLOR="#ff0000">Can\'t observe IKE_SA_INIT response.</FONT>');
		IKEv2exitFail();
	}
}



#--------------------------------------#
# exit with cleanup                    #
#--------------------------------------#
IKEv2exitPass();

#
# perldoc
#
########################################################################
__END__

=head1 Title

  Test IKEv2.EN.R.1.1.4.2: Receipt of a higher major version number
  Part A: (BASIC)

=head1 Purpose

  To verify an IKEv2 device drops a request with a higher major version number and send a
  notification message.

=head1 References
    
  * [RFC 4306] - Sections 2.5

=head1 Test Setup

  * Network Topology
      Connect the devices according to the Common Topology.
  * Configuration
      In each part, configure the devices according to the Common Configuration.
  * Pre-Sequence and Cleanup Sequence
      IKEv2 on the NUT is disabled after each part.

=head1 Procedure

=begin html

<BLOCKQUOTE>
<PRE>

   NUT                  TN1
(End-Node)           (End-Node)
    |                    |
    |<-------------------| IKE_SA_INIT request (HDR, SAi1, KEi, Ni)
    |                    | (Packet #1)
    |------------------->| IKE_SA_INIT response (HDR, N(INVALID_MAJOR_VERSION))
    |                    | (Judgement #1)
    |                    |
    V                    V<br>
<br>
 N: USE_TRANSPORT_MODE
<br>
</BLOCKQUOTE>

<BLOCKQUOTE>
<TABLE BORDER>
<TR>
<TD><TT>Packet #1</TT></TD>
<TD><TT>See below</TT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<br>
<BLOCKQUOTE>
Packet #1: IKE_SA_INIT request packet
<TABLE BORDER>
<TR>
<TD>IPv6 Header</TD>
<TD colspan="2">Same as the common packet #1</TD>
</TR>
<TR>
<TD>UDP Header</TD>
<TD colspan="2">Same as the common packet #1</TD>
</TR>
<TR>
<TD rowspan="3">IKEv2 Header</TD>
<TD colspan="2">Other fields are same as the common packet #1</TD>
</TR>
<TR>
<TD>Major Version</TD>
<TD>3</TD>
</TR>
<TR>
<TD>Minor Version</TD>
<TD>0</TD>
</TR>
</TABLE>
</BLOCKQUOTE>

=end html

  Part A: (BASIC)
       1. TN1 starts to negotiate with NUT by sending IKE_SA_INIT request.
       2. Observe the messages transmitted on Link A.

=head1 Observable Result

  Part A
    Step 2: Judgment #1
      The NUT transmits an IKE_SA_INIT response with a Notify payload
      of type INVALID_MAJOR_VERSION containing following values:

=begin html

<BLOCKQUOTE>
<PRE>
                           1                   2                   3
       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      ! Next Payload  !C!  RESERVED   !         Payload Length        !
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      !  Protocol ID  !   SPI Size    !      Notify Message Type      !
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      !                                                               !
      ~                Security Parameter Index (SPI)                 ~
      !                                                               !
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      !                                                               !
      ~                       Notification Data                       ~
      !                                                               !
      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<br>
                      Figure 71 Notify Payload format<br>
<br>
      * A Next Payload field is set to zero.
      * A Critical field is set to zero.
      * A RESERVED field is set to zero.
      * A Payload Length field is set to length of the current payload.
      * A SPI Size field is set to zero.
      * A Notify Message Type field is set to INVALID_MAJOR_VERSION (5).
      * A Notification Data field is set to the highest version number it supports (2).
</PRE>
</BLOCKQUOTE>

=end html

=head1 Possible Problems

  * None.

=cut


