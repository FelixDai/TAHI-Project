//
// Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
// Yokogawa Electric Corporation.
// All rights reserved.
// 
// Redistribution and use of this software in source and binary
// forms, with or without modification, are permitted provided that
// the following conditions and disclaimer are agreed and accepted
// by the user:
// 
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in
//    the documentation and/or other materials provided with
//    the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project
//    which is related to this software (hereinafter referred to as
//    "project") nor the names of the contributors may be used to
//    endorse or promote products derived from this software without
//    specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written
//    notification to the copyrighters.
// 
// 5. The copyrighters, the project and the contributors may prohibit
//    the use of this software at any time.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
// $TAHI: ct-ikev2/packets/EN-EN.def,v 1.1 2010/03/08 05:10:58 doo Exp $
//
////////////////////////////////////////////////////////////////////////

#ifndef __PACKET_EN_EN_DEF__
#define __PACKET_EN_EN_DEF__

#include "./CPP.def"



//
// IPsec { ICMPv6 Echo Request }
//

FEM_icmp6_echo_request_exth(
	ipsec_ereq,
	_HETHER_tn2nut,
	{
		_SRC(v6(CPP_IP_TN1_LINKX));
		_DST(v6(CPP_IP_NUT_LINKA));
	},
	{
		header	= _HDR_IPV6_NAME(ipsec_ereq);
		exthdr	= esp_outbound;
		upper	= _ICMPV6_NAME(ipsec_ereq);
	},
	{
		Identifier	= CPP_ECHO_ID;
		SequenceNumber	= CPP_ECHO_SEQ;
		payload	= echo_data;
	}
)



//
// IPsec { ICMPv6 Echo Reply }
//

FEM_icmp6_echo_reply_exth(
	ipsec_erep,
	_HETHER_nut2tn,
	{
		_SRC(v6(CPP_IP_NUT_LINKA));
		_DST(v6(CPP_IP_TN1_LINKX));
	},
	{
		header	= _HDR_IPV6_NAME(ipsec_erep);
		exthdr	= esp_inbound;
		upper	= _ICMPV6_NAME(ipsec_erep);
	},
	{
		Identifier	= CPP_ECHO_ID;
		SequenceNumber	= CPP_ECHO_SEQ;
		payload	= echo_data;
	}
)



//
// IPsec { TCP(SYN) }
//

FEM_tcp6_exth(
	ipsec_tcp_syn,
	_HETHER_tn2nut,
	{
		_SRC(v6(CPP_IP_TN1_LINKX));
		_DST(v6(CPP_IP_NUT_LINKA));
	},
	{
		header	= _HDR_IPV6_NAME(ipsec_tcp_syn);
		exthdr	= esp_outbound;
		upper	= _UPP_TCP_NAME(ipsec_tcp_syn);
	},
	{
		_SPORT(0x1000);
		_DPORT(0x1000);
		SYNFlag	= 1;
		Window	= 0xffff;
	},
	{
		header	= _HDR_TCP_NAME(ipsec_tcp_syn);
		payload	= tcp_data;
	}
)



//
// IPsec { TCP(SYN, ACK) }
//

FEM_tcp6_exth(
	ipsec_tcp_syn_ack,
	_HETHER_nut2tn,
	{
		_SRC(v6(CPP_IP_NUT_LINKA));
		_DST(v6(CPP_IP_TN1_LINKX));
	},
	{
		header	= _HDR_IPV6_NAME(ipsec_tcp_syn_ack);
		exthdr	= esp_inbound;
		upper	= _UPP_TCP_NAME(ipsec_tcp_syn_ack);
	},
	{
		_SPORT(0x1000);
		_DPORT(0x1000);
		SequenceNumber	= any;
		AcknowledgmentNumber	= 1;
		ACKFlag	= 1;
		SYNFlag	= 1;
		Window	= any;
		UrgentPointer	= stop;
	},
	{
		header	= _HDR_TCP_NAME(ipsec_tcp_syn_ack);
		payload	= tcp_data;
	}
)



//
// IPsec { TCP(RST, ACK) }
//

FEM_tcp6_exth(
	ipsec_tcp_rst_ack,
	_HETHER_nut2tn,
	{
		_SRC(v6(CPP_IP_NUT_LINKA));
		_DST(v6(CPP_IP_TN1_LINKX));
	},
	{
		header	= _HDR_IPV6_NAME(ipsec_tcp_rst_ack);
		exthdr	= esp_inbound;
		upper	= _UPP_TCP_NAME(ipsec_tcp_rst_ack);
	},
	{
		_SPORT(0x1000);
		_DPORT(0x1000);
		SequenceNumber	= any;
		AcknowledgmentNumber	= 1;
		ACKFlag	= 1;
		RSTFlag	= 1;
		Window	= any;
		UrgentPointer	= stop;
	},
	{
		header	= _HDR_TCP_NAME(ipsec_tcp_rst_ack);
		payload	= tcp_data;
	}
)



//
// TCP Data
//

Payload tcp_data {
	data	= {};
}



#include "./EN.def"
#include "./IPsec.def"
#include "./ICMPv6.def"

#endif	// __PACKET_EN_EN_DEF__
