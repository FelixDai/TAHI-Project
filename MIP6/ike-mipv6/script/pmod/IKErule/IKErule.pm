#!/usr/bin/perl 

# use strict;
# 
%IKERuleCategory = 
( 'Phase1'=>       {'OD:'=>10},
  'Phase2'=>       {'OD:'=>10},
  'Common'=>       {'OD:'=>12},
  'Transport'=>    {'OD:'=>16},
  'IP'=>           {'OD:'=>18},
  'ISAKMP Header'=>{'OD:'=>22},
  'SA'=>           {'OD:'=>30},
  'Proposal'=>     {'OD:'=>32},
  'Transform'=>    {'OD:'=>36},
  'SA Attributes'=>{'OD:'=>38},
  'ID'=>           {'OD:'=>40},
  'KE'=>           {'OD:'=>50},
  'Nonce'=>        {'OD:'=>60},
  'HASH'=>         {'OD:'=>70},
  'VendorID'=>     {'OD:'=>80},
);

# 
@IKECommonRules =
(
##################################################
#
#  
#
##################################################

 # 
 {'TY'=>'PROGN',
  'ID'=>'PHASE1-RESPONDER-MSG1',
  'CA'=>'Phase1',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>['COMMON-RULE','PHASE1-COMMON-RULE','PHASE1-MSG12-RULE',
	 'HDR_RESCKY_ZERO',                      ## (ph1-1_ok)ISAKMP
	 'TRANSFORM_EXIST_MORE',                 ## (ph1-1_ok,ph2-1)Transform
	 'TRANSFORM_NUM_INC',                    ## (ph1-1_ok,ph2-1)Transform
	 'SAATTR-PH1-GRPDSC_SAME-AMONG-MULTR',   ## (ph1-1_ok)Transform
	 'SAATTR-PH1-AUTHMTD_VALUE_1',           ## (ph1-1_ok
	 'SAATTR-PH1-ENCALG_EXISTS',             ## (ph1-1_ok
	 'SAATTR-PH1-HASHALG_EXISTS',            ## (ph1-1_ok
	 'SAATTR-PH1-AUTHMTD_EXISTS',            ## (ph1-1_ok
	 'SAATTR-PH1-GRPDSC_EXISTS',             ## (ph1-1_ok
	 'SAATTR-PH1_EXISTS_ONE_CLASS',          ## (ph1-1_ok
	 'SAATTR-PH1_NOKEYLEN_FOR_FIXEDLEN',     ## (ph1-1_ok
	 ],
  'AD'=>'',
  'DL'=>'',},

 # 
 {'TY'=>'PROGN',
  'ID'=>'PHASE1-INITIATOR-MSG2',
  'CA'=>'Phase1',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>['COMMON-RULE','PHASE1-COMMON-RULE','PHASE1-MSG12-RULE','PHASE1-MSG23-RULE',
	 'TRANSFORM_EXISTS_ONE',                 ## (ph1-2_ok,ph2-2)Transform
	 'PROPOSAL_NUM_SEL',                     ## (ph1-2_ok, ph2-2)Proposal
	 'TRANSFORM_NUM-SEL',                    ## (ph1-2_ok, ph2-2)Transform
	 'TRANSFORM_PH1_ATTR_SEL',               ## (ph1-2_ok,ph2-2)Transform
	 ],
  'AD'=>'',
  'DL'=>'',},

 # 
 {'TY'=>'PROGN',
  'ID'=>'PHASE1-RESPONDER-MSG3',
  'CA'=>'Phase1',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>['COMMON-RULE','PHASE1-COMMON-RULE','PHASE1-MSG23-RULE',
	 'HDR_RESCKY_RECEIVED'                  ## (ph1-3_ok)ISAKMP
	 ],
  'AD'=>'',
  'DL'=>'',},

 # 
 {'TY'=>'PROGN',
  'ID'=>'PHASE2-RESPONDER-MSG1',
  'CA'=>'Phase2',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>['COMMON-RULE','PHASE2-COMMON-RULE','PHASE2-MSG12-RULE',
	 'PROPOSAL_EXIST_MORE',                ## (ph2-1_ok)Proposal
	 'TRANSFORM_EXIST_MORE',               ## (ph1-1_ok,ph2-1_ok)Transform
	 'PROPOSAL_NUM_INC',                   ## (ph2-1_ok)Proposal
	 'TRANSFORM_NUM_INC',                  ## (ph1-1_ok,ph2-1_ok)Transform
	 'SAATTR-PH2_EXISTS_ONE_CLASS',        ## (ph2-1_ok
	 'SAATTR-PH2_LIFETYPE-AND-LIFETIME',   ## (ph2-1_ok
	 'SAATTR-PH2-ENCMODE_EXISTS',          ## (ph2-1_ok
	 'SAATTR-PH2_NOKEYLEN_FOR_FIXEDLEN',   ## (ph2-1_ok
	 'HDR_MSGID_UNKNOWN',
	 'HDR_CKYS_ESTABLISHED',
	 ],
  'AD'=>'',
  'DL'=>'',},

 # 
 {'TY'=>'PROGN',
  'ID'=>'PHASE2-INITIATOR-MSG2',
  'CA'=>'Phase2',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>['COMMON-RULE','PHASE2-COMMON-RULE','PHASE2-MSG12-RULE','PHASE2-MSG23-RULE',
	 'PROPOSAL_EXISTS_ONE',               ## (ph1-1,ph1-2,ph2-2_ok)Proposal
	 'TRANSFORM_EXISTS_ONE',              ## (ph1-2_ok,ph2-2_ok)Transform
	 'PROPOSAL_NUM_SEL',                  ## (ph1-2_ok, ph2-2_ok)Proposal
	 'TRANSFORM_NUM-SEL',                 ## (ph1-2_ok, ph2-2_ok)Transform
	 'TRANSFORM_PH2_ATTR_SEL',            ## (ph1-2_ok,ph2-2_ok)Transform
	 'PROPOSAL_PROTOCOL-ID_VALUE',        ## (ph2-2_ok)Proposal
	 'TRANSFORM_TRANSFORM-ID_VALUE',      ## (ph2-2_ok)Transform
	 'HDR_MSGID_RECEIVED',
	 'HDR_CKYS_RECEIVED',
	 'ID_PH2_INI_PORT0_VALUE',
	 ],
  'AD'=>'',
  'DL'=>'',},

 # 
 {'TY'=>'PROGN',
  'ID'=>'PHASE2-RESPONDER-MSG3',
  'CA'=>'Phase2',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>['COMMON-RULE','PHASE2-COMMON-RULE','PHASE2-MSG23-RULE','HDR_MSGID_RECEIVED','HDR_CKYS_RECEIVED'],
  'AD'=>'',
  'DL'=>'',},


 # 
 {'TY'=>'PROGN',
  'ID'=>'COMMON-RULE',
  'CA'=>'Common',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>[
	 'USE_UDP',                    ## (all_ok)UDP
	 'UDP_SOURCEPORT_500',         ## (all_ok)UDP Source 
	 'UDP_DESTINATIONPORT_500',    ## (all_ok)UDP Dest 
	 'HDR_MJVER_1',                ## (all_ok)IKE
	 'HDR_MNVER_1',                ## (all_ok)IKE
	 'HDR_FLAGS_ZERO',             ## (all_ok)ISAKMP
	 'HDR_AUTHBIT_ZERO',           ## (all_ok)ISAKMP
	 ],
  'AD'=>'',
  'DL'=>'',},


 # 
 {'TY'=>'PROGN',
  'ID'=>'PHASE1-COMMON-RULE',
  'CA'=>'Common',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>[
	 'HDR_ETYPE_VALUE',           ## (ph1-all_ok)ISAKMP
	 'HDR_MSGID_VALUE',           ## (ph1-all_ok)ISAKMP
	 ],
  'AD'=>'',
  'DL'=>'',},

 # 
 {'TY'=>'PROGN',
  'ID'=>'PHASE1-MSG12-RULE',
  'CA'=>'Common',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>[
	 'HDR_ENCBIT_ZERO',                     ## (ph1-1_ok,ph1-2_ok)ISAKMP
	 'SA_EXISTS_ONE',                       ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2)SA
	 'PROPOSAL_EXISTS_ONE',                 ## (ph1-1_ok,ph1-2_ok,ph2-2_ok)Proposal
	 'NONCE_EXISTS_ONE',                    ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2)NONCE
	 'KE_EXISTS_ONE',                       ## (ph1-1_ok,ph1-2_ok)KE
	 'ID_EXISTS_ONE',                       ## (ph1-1_ok,ph1-2_ok)ID
	 'SA_POS',                              ## (ph1-1_ok,ph1-2_ok)SA
	 'SA_PHDR_RESERVED_ZERO',               ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2...
	 'SA_PHDR_NEXTPAYLOAD_VALUE_NOT23',     ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2...
	 'SA_PHDR_PAYLOADLENGTH_INCLUDING_PT',  ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2...
	 'PROP_PHDR_RESERVED_ZERO',             ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2...
	 'PROPOSAL_PHDR_NEXTPAYLOAD_VALUE_20',  ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2...
	 'TRNS_PHDR_RESERVED_ZERO',             ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2...
	 'TRANSFORM_PHDR_NEXTPAYLOAD_VALUE_30', ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2...
	 'NONCE_PHDR_RESERVED_ZERO',            ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2...
	 'NONCE_PHDR_PAYLOADLENGTH_RANGE',      ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2...
	 'KE_PHDR_RESERVED_ZERO',               ## (ph1-1_ok,ph1-2_ok...
	 'ID_PHDR_RESERVED_ZERO',               ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2...
	 'SA_DOI_IPSEC',                        ## (ph1-1_ok,ph1-2_ok,ph2-1,ph2-2...
	 'PROPOSAL_PROTOCOL-ID_ISAKMP',         ## (ph1-1_ok,ph1-2_ok...
	 'TRANSFORM_TRANSFORM-ID_IKE',          ## (ph1-1_ok,ph1-2_ok...
	 'SAATTR-PH1-ENCALG_AF_TV',             ## (ph1-1_ok,ph1-2_ok...
	 'SAATTR-PH1-HASHALG_AF_TVP',           ## (ph1-1_ok,ph1-2_ok...
	 'SAATTR-PH1-AUTHMTD_AF_TV',            ## (ph1-1_ok,ph1-2_ok...
	 'SAATTR-PH1-GRPDSC_AF_TV',             ## (ph1-1_ok,ph1-2_ok...
	 'SAATTR-PH1-GRPTYPE_AF_TV',            ## (ph1-1_ok,ph1-2_ok...
	 'SAATTR-PH1-LIFETYPE_AF_TV',           ## (ph1-1_ok,ph1-2_ok...
	 'SAATTR-PH1-PRF_AF_TV',                ## (ph1-1_ok,ph1-2_ok...
	 'SAATTR-PH1-KEYLEN_AF_TV',             ## (ph1-1_ok,ph1-2_ok...
	 'SAATTR-PH1-FLDSIZE_AF_TV',            ## (ph1-1_ok,ph1-2_ok...
	 'KE_PHDR_PAYLOADLENGTH_DHGRP',         ## (Ph1-1_ok
	 'ID_PROTO_ZERO-OR-17',                 ## (ph1-1_ok,ph1-2_ok)ID
	 'ID_PORT_500',                         ## (ph1-1_ok,ph1-2_ok)ID
	 ],
  'AD'=>'',
  'DL'=>'',},

 # 
 {'TY'=>'PROGN',
  'ID'=>'PHASE1-MSG23-RULE',
  'CA'=>'Common',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>[
	 'HDR_INICKY_RECEIVED',                ## (ph1-2_ok,ph1-3_ok)ISAKMP
	 'HASH_EXISTS_ONE',                    ## (ph1-2_ok,ph1-3_ok,ph2-1,ph2-2,ph2-3)HASH
	 'HASH_PHDR_RESERVED_ZERO',            ## (ph1-2_ok,ph1-3_ok,ph2-1,ph2-2,ph2-3...
	 ],
  'AD'=>'',
  'DL'=>'',},


 # 
 {'TY'=>'PROGN',
  'ID'=>'PHASE2-COMMON-RULE',
  'CA'=>'Common',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>[
	 'HDR_ENCBIT_ONE',    ## (ph2-1_ok,ph2-2_ok,ph2-3_ok)ISAKMP
	 'HDR_ETYPE_VALUE_QUICK',  ## (ph2-all_ok)ISAKMP
	 'HASH_EXISTS_ONE',   ## (ph1-2_ok,ph1-3_ok,ph2-1_ok,ph2-2_ok,ph2-3_ok)HASH
	 'PH2_HASH_POS',      ## (ph2-1_ok,ph2-2_ok,ph2-3_ok)HASH
	 'HASH_PHDR_RESERVED_ZERO',            ## (ph1-2_ok,ph1-3_ok,ph2-1_ok,ph2-2_ok,ph2-3_ok...
	 'VENDER_EXISTS_NONE',     ## (ph2-1_ok,ph2-2_ok,ph2-3_ok)VENDER
	 ],
  'AD'=>'',
  'DL'=>'',},

 # 
 {'TY'=>'PROGN',
  'ID'=>'PHASE2-MSG12-RULE',
  'CA'=>'Common',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>[
	 'SA_EXISTS_ONE',                         ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok)SA
	 'NONCE_EXISTS_ONE',                      ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok)NONCE
	 'ID_EXISTS_TWO',                         ## (ph2-1_ok,ph2-2_ok)ID
	 'PH2_SA_POS',                            ## (ph2-1_ok,ph2-2_ok)SA
	 'SA_PHDR_RESERVED_ZERO',                 ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok...
	 'SA_PHDR_NEXTPAYLOAD_VALUE_NOT23',       ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok...
	 'SA_PHDR_PAYLOADLENGTH_INCLUDING_PT',    ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok...
	 'PROP_PHDR_RESERVED_ZERO',               ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok...
	 'PROPOSAL_PHDR_NEXTPAYLOAD_VALUE_20',    ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok...
	 'TRNS_PHDR_RESERVED_ZERO',               ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok...
	 'TRANSFORM_PHDR_NEXTPAYLOAD_VALUE_30',   ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok...
	 'NONCE_PHDR_RESERVED_ZERO',              ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok...
	 'NONCE_PHDR_PAYLOADLENGTH_RANGE',        ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok...
	 'ID_PHDR_RESERVED_ZERO',                 ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok...
	 'SA_DOI_IPSEC',                          ## (ph1-1_ok,ph1-2_ok,ph2-1_ok,ph2-2_ok...
	 'PROPOSAL_SPI-SIZE_4',                   ## (ph2-1_ok,ph2-2_ok)Proposal
	 'SAATTR-PH2-LIFETYPE_AF_TV',             ## (ph2-1_ok,ph2-2_ok...
	 'SAATTR-PH2-GRPDSC_AF_TV',               ## (ph2-1_ok,ph2-2_ok...
	 'SAATTR-PH2-CAPMODE_AF_TV',              ## (ph2-1_ok,ph2-2_ok...
	 'SAATTR-PH2-AUTHALG_AF_TV',              ## (ph2-1_ok,ph2-2_ok...
	 'SAATTR-PH2-KEYLEN_AF_TV',               ## (ph2-1_ok,ph2-2_ok...
	 'SAATTR-PH2-KEYROU_AF_TV',               ## (ph2-1_ok,ph2-2_ok...
	 'SAATTR-PH2-COMPDICT_AF_TV',             ## (ph2-1_ok,ph2-2_ok...
	 ],
  'AD'=>'',
  'DL'=>'',},

 {'TY'=>'PROGN',
  'ID'=>'PHASE2-MSG23-RULE',
  'CA'=>'Common',
  'SP'=>'RFC',
  'OD'=>'',
  'PR'=>'',
  'MD'=>'',
  'EX'=>[
	 ],
  'AD'=>'',
  'DL'=>'',},



##################################################
#
#  
#
##################################################

## (all)UDP
 {'TY'=>'PROGN',
  'ID'=>'USE_UDP',
  'CA'=>'Transport',
  'SP'=>'RFC',
  'OK'=>'UDP is used for the ISAKMP message (2408 2.5.1 Transport Protocol)',
  'NG'=>\\'UDP is not used for the ISAKMP message (%s is used) (2408 2.5.1 Transport Protocol)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(PFv('IP6,NextHeader',@_),17,@_)},
  'AD'=>'',
  'DL'=>'',},

## (all)Source Address
 {'TY'=>'PROGN',
  'ID'=>'UDP_PH1_SOURCEADDR',
  'CA'=>'IP',
  'SP'=>'RFC',
  'OK'=>\\'Source address is set to %s ',
  'NG'=>\\'Source address is not set to %s (%s)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Cp2('IP6',PFv('IP6,SourceAddress',@_),IFv('NutIPAddr',@_),@_)},
  'AD'=>'',
  'DL'=>'',},

## (all)Destination Address
 {'TY'=>'PROGN',
  'ID'=>'UDP_PH1_DESTINATIONADDR',
  'CA'=>'IP',
  'SP'=>'RFC',
  'OK'=>\\'Destination address is set to %s ',
  'NG'=>\\'Destination address is not set to %s (%s)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Cp2('IP6',PFv('IP6,DestinationAddress',@_),IFv('TnIPAddr',@_),@_)},
  'AD'=>'',
  'DL'=>'',},

## (all)Source Address
 {'TY'=>'PROGN',
  'ID'=>'UDP_PH2_SOURCEADDR',
  'CA'=>'IP',
  'SP'=>'RFC',
  'OK'=>\\'Source address is set to %s ',
  'NG'=>\\'Source address is not set to %s (%s)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Cp2('IP6',PFv('IP6,SourceAddress',@_),IFv('NutIPAddr','',IFv('Phase1ID',@_)),@_)},
  'AD'=>'',
  'DL'=>'',},

## (all)Destination Address
 {'TY'=>'PROGN',
  'ID'=>'UDP_PH2_DESTINATIONADDR',
  'CA'=>'IP',
  'SP'=>'RFC',
  'OK'=>\\'Destination address is set to %s ',
  'NG'=>\\'Destination address is not set to %s (%s)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Cp2('IP6',PFv('IP6,DestinationAddress',@_),IFv('TnIPAddr','',IFv('Phase1ID',@_)),@_)},
  'AD'=>'',
  'DL'=>'',},

## (all)UDP Source 
 {'TY'=>'PROGN',
  'ID'=>'UDP_SOURCEPORT_500',
  'CA'=>'Transport',
  'SP'=>'RFC',
  'OK'=>'Source port is set to 500 (2408 2.5.1 Transport Protocol)',
  'NG'=>\\'Source port is not set to 500 (%s) (2408 2.5.1 Transport Protocol)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(PFv('UDP6,SourcePort',@_),500,@_)},
  'AD'=>'',
  'DL'=>'',},

## (all)UDP Dest 
 {'TY'=>'PROGN',
  'ID'=>'UDP_DESTINATIONPORT_500',
  'CA'=>'Transport',
  'SP'=>'RFC',
  'OK'=>'Destination port is set to 500 (2408 2.5.1 Transport Protocol)',
  'NG'=>\\'Destination port is not set to 500 (%s) (2408 2.5.1 Transport Protocol)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(PFv('UDP6,DestinationPort',@_),500,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph1-2,ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'SA_PHDR_RESERVED_ZERO',
  'CA'=>'SA',
  'SP'=>'RFC',
  'OK'=>'RESERVED field in Generic Payload Header is set to 0 (2408 2.5.2 RESERVED Fields)',
  'NG'=>\\'RESERVED field(%s) in Generic Payload Header is not set to 0 (2408 2.5.2 RESERVED Fields)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,SA,Reserved1',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-1,ph1-2,ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'PROP_PHDR_RESERVED_ZERO',
  'CA'=>'Proposal',
  'SP'=>'RFC',
  'OK'=>'RESERVED field in Generic Payload Header is set to 0 (2408 2.5.2 RESERVED Fields)',
  'NG'=>'RESERVED field in Generic Payload Header is not set to 0 (2408 2.5.2 RESERVED Fields)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,Reserved1',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-1,ph1-2,ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'TRNS_PHDR_RESERVED_ZERO',
  'CA'=>'Transform',
  'SP'=>'RFC',
  'OK'=>'RESERVED field in Generic Payload Header is set to 0 (2408 2.5.2 RESERVED Fields)',
  'NG'=>'RESERVED field in Generic Payload Header is not set to 0 (2408 2.5.2 RESERVED Fields)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,Reserved1',@_),0,@_) && IsMember(GFv('IK,SA,PR,TR,Reserved2',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-1,ph1-2...
 {'TY'=>'PROGN',
  'ID'=>'KE_PHDR_RESERVED_ZERO',
  'CA'=>'KE',
  'SP'=>'RFC',
  'OK'=>'RESERVED field in Generic Payload Header is set to 0 (2408 2.5.2 RESERVED Fields)',
  'NG'=>'RESERVED field in Generic Payload Header is not set to 0 (2408 2.5.2 RESERVED Fields)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,KE,Reserved1',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-1,ph1-2,ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'NONCE_PHDR_RESERVED_ZERO',
  'CA'=>'Nonce',
  'SP'=>'RFC',
  'OK'=>'RESERVED field in Generic Payload Header is set to 0 (2408 2.5.2 RESERVED Fields)',
  'NG'=>'RESERVED field in Generic Payload Header is not set to 0 (2408 2.5.2 RESERVED Fields)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,NC,Reserved1',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},
  

## (ph1-1,ph1-2,ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'ID_PHDR_RESERVED_ZERO',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>'RESERVED field in Generic Payload Header is set to 0 (2408 2.5.2 RESERVED Fields)',
  'NG'=>'RESERVED field in Generic Payload Header is not set to 0 (2408 2.5.2 RESERVED Fields)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,ID,Reserved1',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},
  
## (ph1-2,ph1-3,ph2-1,ph2-2,ph2-3...
 {'TY'=>'PROGN',
  'ID'=>'HASH_PHDR_RESERVED_ZERO',
  'CA'=>'HASH',
  'SP'=>'RFC',
  'OK'=>'RESERVED field in Generic Payload Header is set to 0 (2408 2.5.2 RESERVED Fields)',
  'NG'=>'RESERVED field in Generic Payload Header is not set to 0 (2408 2.5.2 RESERVED Fields)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HA,Reserved1',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},
  
## (all)IKE
 {'TY'=>'PROGN',
  'ID'=>'HDR_MJVER_1',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>'The major version of the ISAKMP protocol is set to 1(2408 3.1 ISAKMP Header Format)',
  'NG'=>\\'The major version of the ISAKMP protocol is not set to 1 (%s) (2408 3.1 ISAKMP Header Format)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,MjVer',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (all)IKE
 {'TY'=>'PROGN',
  'ID'=>'HDR_MNVER_1',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>'The minor version of the ISAKMP protocol is set to 0 (2408 3.1 ISAKMP Header Format)',
  'NG'=>\\'The minor version of the ISAKMP protocol is not set to 0 (%s) (2408 3.1 ISAKMP Header Format)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,MnVer',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},

## (all)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_FLAGS_ZERO',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>\\'The remaining bits of the Flags are set to 0 (2408 3.1 ISAKMP Header Format)',
  'NG'=>\\'The remaining bits of the Flags are not set to 0 (%s) (2408 3.1 ISAKMP Header Format)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,Reserved',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph1-2,ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'SA_PHDR_NEXTPAYLOAD_VALUE_NOT23',
  'CA'=>'SA',
  'SP'=>'RFC',
  'OK'=>'Next Payload does not contain the values for the Proposal or Transform payloads (2408 3.4 Security Association Payload)',
  'NG'=>\\'Next Payload contains the values for the Proposal(2) or Transform(3) payloads (%s) (2408 3.4 Security Association Payload)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsNonMember(GFv('IK,SA,NextPayload',@_),[$IKEDoi{'NX_PAYLOAD_P'},$IKEDoi{'NX_PAYLOAD_T'}],@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-1,ph1-2,ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'SA_PHDR_PAYLOADLENGTH_INCLUDING_PT',
  'CA'=>'SA',
  'SP'=>'RFC',
  'OK'=>\\'Payload Length (%s) includes the SA payload, all Proposal payloads, and all Transform payloads (2408 3.4 Security Association Payload)',
  'NG'=>\\'Payload Length (%s) is not set to %s (including the SA payload, all Proposal payloads, and all Transform payloads) (2408 3.4 Security Association Payload)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Ele(GFv('IK,SA,PayloadLength',@_),[12,GFv('IK,SA,PR#N',@_)*8,GFv('IK,SA,PR,SPIsize',@_),GFv('IK,SA,PR,TR,PayloadLength',@_)],@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-1,ph1-2,ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'PROPOSAL_PHDR_NEXTPAYLOAD_VALUE_20',
  'CA'=>'Proposal',
  'SP'=>'RFC',
  'OK'=>'Next Payload contains the value 2 or 0 (2408 3.5 Proposal Payload)',
  'NG'=>\\'Next Payload contains the value other than 2 or 0 (%s) (2408 3.5 Proposal Payload)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,NextPayload',@_),[0,$IKEDoi{'NX_PAYLOAD_P'}],@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-1,ph1-2,ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'TRANSFORM_PHDR_NEXTPAYLOAD_VALUE_30',
  'CA'=>'Transform',
  'SP'=>'RFC',
  'OK'=>'Next Payload contains the value 3 or 0 (2408 3.6 Transform Payload)',
  'NG'=>\\'Next Payload contains the value other than 3 or 0 (%s) (2408 3.6 Transform Payload)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,NextPayload',@_),[0,$IKEDoi{'NX_PAYLOAD_T'}],@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-1,ph1-2,ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'NONCE_PHDR_PAYLOADLENGTH_RANGE',
  'CA'=>'Nonce',
  'SP'=>'RFC',
  'OK'=>\\'The length of nonce payload is between 8 and 256 bytes inclusive (Payload Length %s) (2409 5. Exchanges)',
  'NG'=>\\'The length of nonce payload is not between 8 and 256 bytes inclusive (Payload Length %s) (2409 5. Exchanges)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Cp1('<=>',GFv('IK,NC,PayloadLength',@_),[8,256],@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-all)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_ETYPE_VALUE',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>\\'Exchange Type is set to %s (Aggressive) (ha-ipsec 4.4 Dynamic Keying)',
  'NG'=>\\'Exchange Type is set to %s (Non Aggressive) (ha-ipsec 4.4 Dynamic Keying)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,ExchangeType',@_),$IKEDoi{'TI_ETYPE_AGG'},@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-all)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_ETYPE_VALUE_QUICK',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>\\'Exchange Type is set to %s (Quick) (2409 4. Introduction, Appendix A)',
  'NG'=>\\'Exchange Type is set to %s (non Quick) (2409 4. Introduction, Appendix A)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,ExchangeType',@_),$IKEDoi{'TI_ETYPE_QUICK'},@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-all)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_MSGID_VALUE',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>'Message ID is set to 0 (2408 2.4 Identifying Security Associations, 3.1 ISAKMP Header Format)',
  'NG'=>\\'Message ID is not set to 0 (%s) (2408 2.4 Identifying Security Associations, 3.1 ISAKMP Header Format)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,MessageID',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_MSGID_UNKNOWN',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>\\'Message ID (%s) is not used before (2408 2.4 Identifying Security Associations, 3.1 ISAKMP Header Format, 2409 5.5 Phase 2 - Quick Mode)',
  'NG'=>\\'Message ID (%s) is used before (2408 2.4 Identifying Security Associations, 3.1 ISAKMP Header Format, 2409 5.5 Phase 2 - Quick Mode)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{!IsMember(GFv('IK,HD,MessageID',@_),GFv('IK,HD,MessageID',['','','in']),@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-2, ph2-3)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_MSGID_RECEIVED',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>\\'Message ID (%s) is equal to that set by Initiator (2408 2.4 Identifying Security Associations, 3.1 ISAKMP Header Format)',
  'NG'=>\\'Message ID (%s) is not equal to that set by Initiator (%s) (2408 2.4 Identifying Security Associations, 3.1 ISAKMP Header Format)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,MessageID',@_),GFv('IK,HD,MessageID',IFv('PH2Msg1',@_)),@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph1-2,ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'SA_DOI_IPSEC',
  'CA'=>'SA',
  'SP'=>'RFC',
  'OK'=>'DOI is set to 1 (IPsec DOI) (3775 5.1. Binding Updates to Home Agents, 2408 3.4 Security Association Payload)',
  'NG'=>\\'DOI is not set to 1 (IPsec DOI) (%s) (3775 5.1. Binding Updates to Home Agents, 2408 3.4 Security Association Payload)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,SA,DOI',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-1,ph1-2...
 {'TY'=>'PROGN',
  'ID'=>'PROPOSAL_PROTOCOL-ID_ISAKMP',
  'CA'=>'Proposal',
  'SP'=>'RFC',
  'OK'=>'Protocol ID is set to 1 (PROTO_ISAKMP) (2407 4.4.1 IPSEC Security Protocol Identifier)',
  'NG'=>\\'Protocol ID is not set to 1 (PROTO_ISAKMP) (%s) (2407 4.4.1 IPSEC Security Protocol Identifier)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,ProtocolID',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph2-2_ok)Proposal
 {'TY'=>'PROGN',
  'ID'=>'PROPOSAL_PROTOCOL-ID_VALUE',
  'CA'=>'Proposal',
  'SP'=>'RFC',
  'OK'=>\\'Protocol ID is set to %s (%s) (2407 4.4.1 IPSEC Security Protocol Identifier)',
  'NG'=>\\'Protocol ID is not set to %s (%s) (2407 4.4.1 IPSEC Security Protocol Identifier)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,ProtocolID',@_),GFv('IK,SA,PR,ProtocolID',$inst->{'SendPktInfo'}),@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-1,ph1-2...
 {'TY'=>'PROGN',
  'ID'=>'TRANSFORM_TRANSFORM-ID_IKE',
  'CA'=>'Transform',
  'SP'=>'RFC',
  'OK'=>'Transform-Id is set to 1 (KEY_IKE) (2407 4.4.2 IPSEC ISAKMP Transform Identifiers)',
  'NG'=>\\'Transform-Id is not set to 1 (KEY_IKE) (%s) (2407 4.4.2 IPSEC ISAKMP Transform Identifiers)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,TransformID',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},
 
 ## (ph2-2_ok)Transform
 {'TY'=>'PROGN',
  'ID'=>'TRANSFORM_TRANSFORM-ID_VALUE',
  'CA'=>'Transform',
  'SP'=>'RFC',
  'OK'=>\\'Transform-Id is set to %s (2407 4.4.2 IPSEC ISAKMP Transform Identifiers)',
  'NG'=>\\'Transform-Id is not set to %s (%s) (2407 4.4.2 IPSEC ISAKMP Transform Identifiers)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,TransformID',@_),GFv('IK,SA,PR,TR,TransformID',$inst->{'SendPktInfo'}),@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-1,ph1-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-ENCALG_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Encryption Algorithm Attributes is set to 1 (T/V format) (2409 Appendix A)',
  'NG'=>'AF bit of Encryption Algorithm Attributes is not set to 1 (T/V format) (2409 Appendix A)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_ISAKMP_ENC_ALG}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph1-1,ph1-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-HASHALG_AF_TVP',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Hash Algorithm Attributes is set to 1 (T/V format) (2409 Appendix A)',
  'NG'=>'AF bit of Hash Algorithm Attributes is not set to 1 (T/V format) (2409 Appendix A)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_ISAKMP_HASH_ALG}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 
  
## (ph1-1,ph1-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-AUTHMTD_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Authentication Method Attributes is set to 1 (T/V format) (2409 Appendix A)',
  'NG'=>'AF bit of Authentication Method Attributes is not set to 1 (T/V format) (2409 Appendix A)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_ISAKMP_AUTH_METHOD}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 
  
## (ph1-1,ph1-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-GRPDSC_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Group Description Attributes is set to 1 (T/V format) (2409 Appendix A)',
  'NG'=>'AF bit of Group Description Attributes is not set to 1 (T/V format) (2409 Appendix A)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_ISAKMP_GRP_DESC}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 
  
## (ph1-1,ph1-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-GRPTYPE_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Group Type Attributes is set to 1 (T/V format) (2409 Appendix A)',
  'NG'=>'AF bit of Group Type Attributes is not set to 1 (T/V format) (2409 Appendix A)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_ISAKMP_GRP_TYPE}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 
  
## (ph1-1,ph1-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-LIFETYPE_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Life Type Attributes is set to 1 (T/V format) (2409 Appendix A)',
  'NG'=>'AF bit of Life Type Attributes is not set to 1 (T/V format) (2409 Appendix A)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_ISAKMP_SA_LD_TYPE}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 
  
## (ph1-1,ph1-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-PRF_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of PRF Attributes is set to 1 (T/V format) (2409 Appendix A)',
  'NG'=>'AF bit of PRF Attributes is not set to 1 (T/V format) (2409 Appendix A)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_ISAKMP_PRF}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph1-1,ph1-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-KEYLEN_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Key Length Attributes is set to 1 (T/V format) (2409 Appendix A)',
  'NG'=>'AF bit of Key Length Attributes is not set to 1 (T/V format) (2409 Appendix A)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_ISAKMP_KEY_LEN}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph1-1,ph1-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-FLDSIZE_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Field Size Attributes is set to 1 (T/V format) (2409 Appendix A)',
  'NG'=>'AF bit of Field Size Attributes is not set to 1 (T/V format) (2409 Appendix A)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_ISAKMP_FIELD_SIZE}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph1-1)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_RESCKY_ZERO',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>'Responder Cookie is set to 0 (2408 2.4 Identifying Security Associations)',
  'NG'=>\\'Responder Cookie is not set to 0 (%s) (2408 2.4 Identifying Security Associations)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,ResponderCookie',@_),'0000000000000000',@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-2,ph1-3)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_INICKY_RECEIVED',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>'Initiator Cookie is equal to that set by Initiator (2408 2.4 Identifying Security Associations)',
  'NG'=>'Initiator Cookies is not equal to that set by Initiator (2408 2.4 Identifying Security Associations)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsRegistedCookie(GFv('IK,HD,InitiatorCookie',@_),'I',@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-3)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_RESCKY_RECEIVED',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>'Responder Cookie is equal to that set by Responder (2408 2.4 Identifying Security Associations)',
  'NG'=>'Responder Cookie is not equal to that set by Responder (2408 2.4 Identifying Security Associations)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsRegistedCookie(GFv('IK,HD,ResponderCookie',@_),'R',@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_CKYS_ESTABLISHED',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>'Initiator and Responder Cookies are equal to those used in Phase1',
  'NG'=>'Initiator and Responder Cookies are not equal to those used in Phase1',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,InitiatorCookie',@_),IFv('InitiatorCookie','',IFv('Phase1ID',@_)),@_) && 
	   Eq(GFv('IK,HD,ResponderCookie',@_),IFv('ResponderCookie','',IFv('Phase1ID',@_)),@_) && 
	   Eq(IFv('ISAKMPStatus','',IFv('Phase1ID',@_)),'VALID',@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-2, ph2-3)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_CKYS_RECEIVED',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>'Initiator and Responder Cookies are equal to those set by Initiator',
  'NG'=>'Initiator and Responder Cookies are not equal to those set by Initiator',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,InitiatorCookie',@_),GFv('IK,HD,InitiatorCookie',IFv('PH2Msg1',@_)),@_) && 
	   Eq(GFv('IK,HD,ResponderCookie',@_),GFv('IK,HD,ResponderCookie',IFv('PH2Msg1',@_)),@_) },
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph1-2)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_ENCBIT_ZERO',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>'E(ncryption Bit) is set to 0 (2408 3.1 ISAKMP Header Format)',
  'NG'=>'E(ncryption Bit) is not set to 0 (2408 3.1 ISAKMP Header Format)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,EFlag',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},


## (all)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_AUTHBIT_ZERO',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>'A(uthentication Only Bit) is set to 0 (2408 3.1 ISAKMP Header Format)',
  'NG'=>'A(uthentication Only Bit) is not set to 0 (2408 3.1 ISAKMP Header Format)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,AFlag',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph1-2)SA
 {'TY'=>'PROGN',
  'ID'=>'SA_POS',
  'CA'=>'SA',
  'SP'=>'RFC',
  'OK'=>'precedes all other payloads (2409 5 3par)',
  'NG'=>\\'does not precede all other payloads. first is[%s] (2409 5 3par)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,NextPayload',@_),$IKEDoi{'NX_PAYLOAD_SA'},@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1,ph2-2,ph2-3)HASH
 {'TY'=>'PROGN',
  'ID'=>'PH2_HASH_POS',
  'CA'=>'HASH',
  'SP'=>'RFC',
  'OK'=>'immediately follows the ISAKMP header (2409 5.5 Phase 2 - Quick Mode)',
  'NG'=>'does not immediately follow the ISAKMP header (2409 5.5 Phase 2 - Quick Mode)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,NextPayload',@_),$IKEDoi{'NX_PAYLOAD_HASH'},@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1,ph2-2)SA
 {'TY'=>'PROGN',
  'ID'=>'PH2_SA_POS',
  'CA'=>'SA',
  'SP'=>'RFC',
  'OK'=>'immediately follows the HASH (2409 5.5 Phase 2 - Quick Mode)',
  'NG'=>'does not immediately follow the HASH (2409 5.5 Phase 2 - Quick Mode)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HA,NextPayload',@_),$IKEDoi{'NX_PAYLOAD_SA'},@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph1-2,ph2-1,ph2-2)SA
 {'TY'=>'PROGN',
  'ID'=>'SA_EXISTS_ONE',
  'CA'=>'SA',
  'SP'=>'RFC',
  'OK'=>'a single SA Payload exists',
  'NG'=>'multiple SA Payload exist',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,SA#N',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph1-2,ph2-2)Proposal
 {'TY'=>'PROGN',
  'ID'=>'PROPOSAL_EXISTS_ONE',
  'CA'=>'Proposal',
  'SP'=>'RFC',
  'OK'=>'a single Proposal Payload in a single SA payload (2409 5. Exchanges)',
  'NG'=>\\'multiple(%s) Proposal Payload in a single SA payload (2409 5. Exchanges)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,SA,PR#N',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1)Proposal
 {'TY'=>'PROGN',
  'ID'=>'PROPOSAL_EXIST_MORE',
  'CA'=>'Proposal',
  'SP'=>'RFC',
  'OK'=>'a single Proposal Payload in a single SA payload (2409 5. Exchanges)',
  'NG'=>\\'multiple(%s) Proposal Payload in a single SA payload (2409 5. Exchanges)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Ele(GFv('IK,SA,PR#N',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-2,ph2-2)Transform
 {'TY'=>'PROGN',
  'ID'=>'TRANSFORM_EXISTS_ONE',
  'CA'=>'Transform',
  'SP'=>'RFC',
  'OK'=>'a single Transform Payload in a single Proposal payload (2409 5. Exchanges)',
  'NG'=>\\'multiple(%s) Transform Payload in a single Proposal payload (2409 5. Exchanges)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,SA,PR,TR#N',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph2-1)Transform
 {'TY'=>'PROGN',
  'ID'=>'TRANSFORM_EXIST_MORE',
  'CA'=>'Transform',
  'SP'=>'RFC',
  'OK'=>\\'Transform Payload(%s) exist',
  'NG'=>'No Transform Payload exists',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Ele(GFv('IK,SA,PR,TR#N',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph1-2)KE
 {'TY'=>'PROGN',
  'ID'=>'KE_EXISTS_ONE',
  'CA'=>'KE',
  'SP'=>'RFC',
  'OK'=>'a single KE Payload exists',
  'NG'=>\\'multiple(%s) KE Payloads exist',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,KE#N',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph1-2,ph2-1,ph2-2)NONCE
 {'TY'=>'PROGN',
  'ID'=>'NONCE_EXISTS_ONE',
  'CA'=>'Nonce',
  'SP'=>'RFC',
  'OK'=>'a single NONCE Payload exists',
  'NG'=>\\'multiple(%s) NONCE Payloads exist',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,NC#N',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph1-2)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_EXISTS_ONE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>'a single ID Payload exists',
  'NG'=>\\'multiple(%s) ID Payloads exist',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,ID#N',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},


## (ph2-1,ph2-2)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_EXISTS_TWO',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>'two ID Payloads exist',
  'NG'=>\\'over three ID Payloads(%s) exist',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,ID#N',@_),2,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-2,ph1-3,ph2-1,ph2-2,ph2-3)HASH
 {'TY'=>'PROGN',
  'ID'=>'HASH_EXISTS_ONE',
  'CA'=>'HASH',
  'SP'=>'RFC',
  'OK'=>'a single HASH Payload exists',
  'NG'=>\\'multiple(%s) HASH Payloads exist',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HA#N',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1,ph2-2,ph2-3)VENDER
 {'TY'=>'PROGN',
  'ID'=>'VENDER_EXISTS_NONE',
  'CA'=>'VendorID',
  'SP'=>'RFC',
  'OK'=>'Vendor ID Payload does not exist (2408 3.16 Vendor ID Payload)',
  'NG'=>'Vendor ID Payload exists (2408 3.16 Vendor ID Payload)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,VI#N',@_),'',@_)},
  'AD'=>'',
  'DL'=>'',},


## (ph1-2, ph2-2)Proposal
 {'TY'=>'PROGN',
  'ID'=>'PROPOSAL_NUM_SEL',
  'CA'=>'Proposal',
  'SP'=>'RFC',
  'OK'=>\\'Proposal Number (%s) is equal to one of them received from Initiator (2408 4.2 Security Association Establishment)',
  'NG'=>\\'Proposal Number (%s) is not equal to one of them(%s) received from Initiator (2408 4.2 Security Association Establishment)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,ProposalNumber',@_),GFv('IK,SA,PR,ProposalNumber',$inst->{'SendPktInfo'}),@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph2-1)Proposal
 {'TY'=>'PROGN',
  'ID'=>'PROPOSAL_NUM_INC',
  'CA'=>'Proposal',
  'SP'=>'RFC',
  'OK'=>'Proposal Numbers are monotonically increasing (2408 4.2 Security Association Establishment)',
  'NG'=>'Proposal Numbers are not monotonically increasing (2408 4.2 Security Association Establishment)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Cp1('<<<',GFv('IK,SA,PR,ProposalNumber',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1,ph2-2)Proposal
 {'TY'=>'PROGN',
  'ID'=>'PROPOSAL_SPI-SIZE_4',
  'CA'=>'Proposal',
  'SP'=>'RFC',
  'OK'=>'SPI Size is equal to 4 (2408 2.4 Identifying Security Associations, 2409 7.2 Phase 2 using Quick Mode)',
  'NG'=>'SPI Size is not equal to 4 (2408 2.4 Identifying Security Associations, 2409 7.2 Phase 2 using Quick Mode)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,SA,PR,SPIsize',@_),4,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-2, ph2-2)Transform
 {'TY'=>'PROGN',
  'ID'=>'TRANSFORM_NUM-SEL',
  'CA'=>'Transform',
  'SP'=>'RFC',
  'OK'=>\\'Transform Number (%s) is equal to one of them received from Initiator (2408 4.2 Security Association Establishment)',
  'NG'=>\\'Transform Number (%s) is not equal to one of them(%s) received from Initiator (2408 4.2 Security Association Establishment)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,TransformNumber',@_),GFv('IK,SA,PR,TR,TransformNumber',$inst->{'SendPktInfo'}),@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-2,ph2-2)Transform
 {'TY'=>'PROGN',
  'ID'=>'TRANSFORM_PH1_ATTR_SEL',
  'CA'=>'Transform',
  'SP'=>'RFC',
  'OK'=>'All SA Attributes are equal to those received from Initiator (2408 4.2 Security Association Establishment)',
  'NG'=>'There is no Transform whose SA Attributes are equal to those received from Initiator (2408 4.2 Security Association Establishment)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IKERIsEqualAttr(1,GFv('IK,SA,PR,TR',@_),GFv('IK,SA,PR,TR',$inst->{'SendPktInfo'}),@_)},
  'AD'=>'',
  'DL'=>'',},

 {'TY'=>'PROGN',
  'ID'=>'TRANSFORM_PH2_ATTR_SEL',
  'CA'=>'Transform',
  'SP'=>'RFC',
  'OK'=>'All SA Attributes are equal to those received from Initiator (2408 4.2 Security Association Establishment)',
  'NG'=>'There is no Transform whose SA Attributes are equal to those received from Initiator (2408 4.2 Security Association Establishment)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IKERIsEqualAttr(2,GFv('IK,SA,PR,TR',@_),GFv('IK,SA,PR,TR',$inst->{'SendPktInfo'}),@_)},
  'AD'=>'',
  'DL'=>'',},
 
## (ph1-1,ph2-1)Transform
 {'TY'=>'PROGN',
  'ID'=>'TRANSFORM_NUM_INC',
  'CA'=>'Transform',
  'SP'=>'RFC',
  'OK'=>'Transform Numbers are monotonically increasing (2408 4.2 Security Association Establishment)',
  'NG'=>'Transform Numbers are not monotonically increasing (2408 4.2 Security Association Establishment)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Cp1('<<<',GFv('IK,SA,PR,TR,TransformNumber',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1)Transform
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-GRPDSC_SAME-AMONG-MULTR',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'All Group Description Attr. values are the same.',
  'NG'=>'All Group Description Attr. values are not the same.',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Cp1('===',GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_ISAKMP_GRP_DESC}`,Value',@_),'',@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-AUTHMTD_VALUE_1',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'Authentication Method is set to 1 (pre-shared key)',
  'NG'=>\\'Authentication Method (%s) is not set to 1 (pre-shared key)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_ISAKMP_AUTH_METHOD}`,Value',@_),[$IKEDoi{'TI_ATTR_AUTH_METHOD_PSKEY'}],@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph1-1
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-ENCALG_EXISTS',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'Encryption Algorithm Attribute exists',
  'NG'=>'Encryption Algorithm Attribute does not exist',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFe('IK,SA,PR,TR,ATT`grep{$_->{Type} eq $IKEDoi{TI_ISAKMP_ENC_ALG}}@$v`',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph1-1
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-HASHALG_EXISTS',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'Hash Algorithm Attribute exists',
  'NG'=>'Hash Algorithm Attribute does not exist',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFe('IK,SA,PR,TR,ATT`grep{$_->{Type} eq $IKEDoi{TI_ISAKMP_HASH_ALG}}@$v`',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph1-1
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-AUTHMTD_EXISTS',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'Authentication Method Attribute exists',
  'NG'=>'Authentication Method Attribute does not exist',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFe('IK,SA,PR,TR,ATT`grep{$_->{Type} eq $IKEDoi{TI_ISAKMP_AUTH_METHOD}}@$v`',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph1-1
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1-GRPDSC_EXISTS',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'Group Description Attribute exists',
  'NG'=>'Group Description Attribute does not exist',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFe('IK,SA,PR,TR,ATT`grep{$_->{Type} eq $IKEDoi{TI_ISAKMP_GRP_DESC}}@$v`',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph1-1
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1_EXISTS_ONE_CLASS',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'Multiple instances of the same attribute class are not contained in a Transform',
  'NG'=>'Multiple instances of the same attribute class are contained in a Transform',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,SA,PR,{TR,ATT`!IsElementUnique(GFv(Type,$v),[$IKEDoi{TI_ISAKMP_SA_LD_TYPE},$IKEDoi{TI_ISAKMP_SA_LD}])`},TR#N',@_),'',@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph1-1
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH1_NOKEYLEN_FOR_FIXEDLEN',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'Key Length attribute is not used when the specified Encryption Algorithm (%s) uses a fixed length key (2409 Appendix A)',
  'NG'=>'Key Length attribute is used when the specified Encryption Algorithm (%s) uses a fixed length key (2409 Appendix A)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFe('IK,SA,PR,TR,{ATT,Type`$v eq $IKEDoi{TI_ISAKMP_ENC_ALG}`,Value`grep{$_ eq $v}(1,2,5,6)`},ATT,Type`$v eq $IKEDoi{TI_ISAKMP_KEY_LEN}`',@_),[''],@_)},
  'AD'=>'',
  'DL'=>'',}, 

 # (Ph1-1
 {'TY'=>'PROGN',
  'ID'=>'KE_PHDR_PAYLOADLENGTH_DHGRP',
  'CA'=>'KE',
  'SP'=>'RFC',
  'OK'=>'Payload Length (%s) is of the negotiated Diffie-Hellman group (%s) enforced (2409 5. Exchanges)',
  'NG'=>'Payload Length (%s)  is not of the negotiated Diffie-Hellman group (%s) enforced (2409 5. Exchanges)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>'',
  'AD'=>'',
  'DL'=>'',}, 

## (ph1-1,ph1-2)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_PROTO_ZERO-OR-17',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>'Protocol ID is set to 0 or 17 (2407 4.6.2 Identification Payload Content)',
  'NG'=>\\'Protocol ID(%s) is not set to 0 or 17 (2407 4.6.2 Identification Payload Content)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,ID,ProtocolID',@_),[0,17],@_)},
  'AD'=>'',
  'DL'=>'',},


## (ph1-1,ph1-2)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_PORT_500',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>'Port is set to 0 or 500 (2407 4.6.2 Identification Payload Content)',
  'NG'=>\\'Port (%s) is not set to 0 or 500 (2407 4.6.2 Identification Payload Content)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,ID,Port',@_),[0,500],@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph1-2)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_PH1_TYPE_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Identification Type (%s) is set to %s',
  'NG'=>\\'Identification Type (%s)  is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GPf('NUT_ID_TYPE','',@_),GFv('IK,ID#0,IDtype',@_),@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-1,ph1-2)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_PH1_DATA_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Identification Data (%s) is set to %s',
  'NG'=>\\'Identification Data (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IKEIsMatchIDAd(GPf('NUT_ID','',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-2)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_INI_DATA0_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Initiator Identification Data (%s) is set to %s',
  'NG'=>\\'Initiator Identification Data (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IKEIsMatchIDAd(GPf('TN_ID_ADDR','',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},

 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_INI_DATA1_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Responder Identification Data (%s) is set to %s',
  'NG'=>\\'Responder Identification Data (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IKEIsMatchIDAd(GPf('NUT_ID_ADDR','',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-2)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_INI_TYPE0_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Initiator Identification Type (%s) is set to %s',
  'NG'=>\\'Initiator Identification Type (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq($IKEDoi{IKEPh2IDtoType(GPf('TN_ID_ADDR','',@_))},GFv('IK,ID#0,IDtype',@_),@_)},
  'AD'=>'',
  'DL'=>'',},

 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_INI_TYPE1_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Responder Identification Type (%s) is set to %s',
  'NG'=>\\'Responder Identification Type (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq($IKEDoi{IKEPh2IDtoType(GPf('NUT_ID_ADDR','',@_))},GFv('IK,ID#1,IDtype',@_),@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-2)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_INI_PORT0_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Initiator Identification Port (%s) is set to %s',
  'NG'=>\\'Initiator Identification Port (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GPf('TN_ID_PORT','',@_),GFv('IK,ID#0,Port',@_),@_)},
  'AD'=>'',
  'DL'=>'',},

 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_INI_PORT1_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Responder Identification Port (%s) is set to %s',
  'NG'=>\\'Responder Identification Port (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GPf('NUT_ID_PORT','',@_),GFv('IK,ID#1,Port',@_),@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_RES_DATA0_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Initiator Identification Data (%s) is set to %s',
  'NG'=>\\'Initiator Identification Data (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IKEIsMatchIDAd(GPf('NUT_ID_ADDR','',@_),0,@_)},
  'AD'=>'',
  'DL'=>'',},

 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_RES_DATA1_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Responder Identification Data (%s) is set to %s',
  'NG'=>\\'Responder Identification Data (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IKEIsMatchIDAd(GPf('TN_ID_ADDR','',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_RES_TYPE0_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Initiator Identification Type (%s) is set to %s',
  'NG'=>\\'Initiator Identification Type (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq($IKEDoi{IKEPh2IDtoType(GPf('NUT_ID_ADDR','',@_))},GFv('IK,ID#0,IDtype',@_),@_)},
  'AD'=>'',
  'DL'=>'',},

 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_RES_TYPE1_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Responder Identification Type (%s) is set to %s',
  'NG'=>\\'Responder Identification Type (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq($IKEDoi{IKEPh2IDtoType(GPf('TN_ID_ADDR','',@_))},GFv('IK,ID#1,IDtype',@_),@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_PROTO0_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Initiator Identification Protocol (%s) is set to %s',
  'NG'=>\\'Initiator Identification Protocol (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GPf('ID_PROTO','',@_),GFv('IK,ID#0,ProtocolID',@_),@_)},
  'AD'=>'',
  'DL'=>'',},

 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_PROTO1_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Responder Identification Protocol (%s) is set to %s',
  'NG'=>\\'Responder Identification Protocol (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GPf('ID_PROTO','',@_),GFv('IK,ID#1,ProtocolID',@_),@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1)ID
 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_RES_PORT0_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Initiator Identification Port (%s) is set to %s',
  'NG'=>\\'Initiator Identification Port (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GPf('NUT_ID_PORT','',@_),GFv('IK,ID#0,Port',@_),@_)},
  'DL'=>'',},

 {'TY'=>'PROGN',
  'ID'=>'ID_PH2_RES_PORT1_VALUE',
  'CA'=>'ID',
  'SP'=>'RFC',
  'OK'=>\\'Responder Identification Port (%s) is set to %s',
  'NG'=>\\'Responder Identification Port (%s) is not set to %s',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GPf('TN_ID_PORT','',@_),GFv('IK,ID#1,Port',@_),@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1,ph2-2,ph2-3)ISAKMP
 {'TY'=>'PROGN',
  'ID'=>'HDR_ENCBIT_ONE',
  'CA'=>'ISAKMP Header',
  'SP'=>'RFC',
  'OK'=>'E(ncryption Bit) is set to 1 (2408 3.1 ISAKMP Header Format)',
  'NG'=>'E(ncryption Bit) is not set to 1 (2408 3.1 ISAKMP Header Format)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HD,EFlag',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph1-2,ph1-3,ph2-1,ph2-2,ph2-3)HASH
 {'TY'=>'PROGN',
  'ID'=>'HASH-DATA_VALUE',
  'CA'=>'HASH',
  'SP'=>'RFC',
  'OK'=>\\'Hash Data (%s) is calcurated correctly',
  'NG'=>\\'Hash Data (%s) is not calcurated(%s) correctly',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,HA,HashData',@_),$inst->{CalculateHASH},@_)},
  'AD'=>'',
  'DL'=>'',},

## (ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH2-LIFETYPE_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of SA Life Type Attributes is set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'NG'=>'AF bit of SA Life Type Attributes is not set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_IPSEC_SA_LD_TYPE}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH2-GRPDSC_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Group Description Attributes is set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'NG'=>'AF bit of Group Description Attributes is not set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_IPSEC_GRP_DESC}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 
  
## (ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH2-CAPMODE_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Encapsulation Mode Attributes is set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'NG'=>'AF bit of Encapsulation Mode Attributes is not set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_IPSEC_ENC_MODE}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 
  
## (ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH2-AUTHALG_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Authentication Algorithm Attributes is set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'NG'=>'AF bit of Authentication Algorithm Attributes is not set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_IPSEC_AUTH}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 
  
## (ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH2-KEYLEN_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'[SA Attributes] AF bit of Key Length Attributes is set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'NG'=>'[SA Attributes] AF bit of Key Length Attributes is not set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_IPSEC_KEY_LENGTH}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 
  
## (ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH2-KEYROU_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Key Rounds Attributes is set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'NG'=>'AF bit of Key Rounds Attributes is not set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_IPSEC_KEY_ROUNDS}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 
  
## (ph2-1,ph2-2...
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH2-COMPDICT_AF_TV',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'AF bit of Compress Dictionary Size Attributes is set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'NG'=>'AF bit of Compress Dictionary Size Attributes is not set to 1 (T/V format) (2407 4.5 IPSEC Security Association Attributes)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IsMember(GFv('IK,SA,PR,TR,ATT,Type`$v eq $IKEDoi{TI_IPSEC_COMP_DICT_SIZE}`,AF',@_),1,@_)},
  'AD'=>'',
  'DL'=>'',}, 
  
## (ph2-1
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH2-ENCMODE_EXISTS',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'Encapsulation Mode Attribute exists',
  'NG'=>'Encapsulation(%s)(%s) Mode Attribute does not exist',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(SumElement(GFv('IK,SA,PR,ProtocolID`$v eq $IKEDoi{TI_PROTO_IPSEC_ESP}`,TR#N',@_)),
	      TotalElement(GFv('IK,SA,PR,ProtocolID`$v eq $IKEDoi{TI_PROTO_IPSEC_ESP}`,TR,ATT,Type`$v eq $IKEDoi{TI_IPSEC_ENC_MODE}`,AF',
			       @_)),@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph2-1
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH2_NOKEYLEN_FOR_FIXEDLEN',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>\\'Key(%s) Length attribute is not used when the specified Encryption Algorithm uses a fixed length key (2407 4.5 IPSEC Security Association Attributes)',
  'NG'=>\\'Key(%s) Length attribute is used when the specified Encryption Algorithm uses a fixed length key (2407 4.5 IPSEC Security Association Attributes)',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
#  'EX'=>\q{Eq(GFv('IK,SA,PR,{ProtocolID`$v eq $IKEDoi{TI_PROTO_IPSEC_ESP}`},TR,TransformID`grep{$v eq $_}(1,2,3,5,6,8,9)`,ATT,Type`$v eq $IKEDoi{TI_IPSEC_KEY_LENGTH}`,AF',@_),'',@_)},
  'EX'=>\q{Eq(GFv('IK,SA,PR,ProtocolID`$v eq $IKEDoi{TI_PROTO_IPSEC_ESP}`,TR,TransformID`grep{$v eq $_}(1,2,3,5,6,8,9)`,ATT,Type`$v eq $IKEDoi{TI_IPSEC_KEY_LENGTH}`,AF',@_),'',@_)},
  'AD'=>'',
  'DL'=>'',}, 

## (ph2-1
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH2_LIFETYPE-AND-LIFETIME',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'When SA Life Duration Attr. exists, previous SA Life Type Attr. exists (2407 4.5.2 Attribute Parsing Requirement (Lifetime))',
  'NG'=>'When SA Life Duration Attr. exists, previous SA Life Type Attr. does not exist (2407 4.5.2 Attribute Parsing Requirement (Lifetime))',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{IKERLTandLDorder(2,GFv('IK,SA,PR,TR',@_))},
  'AD'=>'',
  'DL'=>'',}, 

## (ph2-1
 {'TY'=>'PROGN',
  'ID'=>'SAATTR-PH2_EXISTS_ONE_CLASS',
  'CA'=>'SA Attributes',
  'SP'=>'RFC',
  'OK'=>'Multiple instances of the same attribute class are not contained in a Transform',
  'NG'=>'Multiple instances of the same attribute class are contained in a Transform',
  'OD'=>'',
  'ET'=>'error',
  'PR'=>'',
  'MD'=>'',
  'EX'=>\q{Eq(GFv('IK,SA,PR,{TR,ATT`!IsElementUnique(GFv(Type,$v),[$IKEDoi{TI_IPSEC_SA_LD_TYPE},$IKEDoi{TI_IPSEC_SA_LD}])`},TR#N',@_),'',@_)},
  'AD'=>'',
  'DL'=>'',}, 

);

# sub RRdebug {
#     my($frame,$inst,$context)=@_;
#     PrintVal($inst);
#     exit;
# }
