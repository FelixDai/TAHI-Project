//
// Copyright (C) IPv6 Promotion Council,
// NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT),
// Yokogwa Electoric Corporation, YASKAWA INFORMATION SYSTEMS Corporation
// and NTT Advanced Technology Corporation(NTT-AT) All rights reserved.
// 
// Technology Corporation.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
////////////////////////////////////////////////////////////////////////

#ifndef HAVE_TUNNEL_DEF
#define HAVE_TUNNEL_DEF


FEM_hdr_ipv6_exth(
	ereq_mn2cn_tunnel_common,
	_HETHER_rx2nut,
	{
		_SRC(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
		_DST(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
	},
	{
		header	= _HDR_IPV6_NAME(ereq_mn2cn_tunnel_common);
#if HAVE_IPSEC && UNIQ_TUNNEL_SA && USE_SA7_SA8
		exthdr	= ext_esp_mn2cn;
#elif HAVE_IPSEC && !UNIQ_TUNNEL_SA && USE_SA3_SA4
		exthdr	= ext_esp_hoti;
#endif	// HAVE_IPSEC, UNIQ_TUNNEL_SA, USE_SA3_SA4, USE_SA7_SA8
		upper	= _PACKET_IPV6_NAME(ereq_mn2cn_common);
	}
)


FEM_hdr_ipv6_exth(
	ereq_cn2mn_tunnel_common,
	_HETHER_nut2rx,
	{
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
		_DST(v6merge(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, v6ether(MN_MAC)));
	},
	{
		header	= _HDR_IPV6_NAME(ereq_cn2mn_tunnel_common);
#if HAVE_IPSEC && UNIQ_TUNNEL_SA && USE_SA7_SA8
		exthdr	= ext_esp_cn2mn;
#elif HAVE_IPSEC && !UNIQ_TUNNEL_SA && USE_SA3_SA4
		exthdr	= ext_esp_hot;
#endif	// HAVE_IPSEC, UNIQ_TUNNEL_SA, USE_SA3_SA4, USE_SA7_SA8
		upper	= _PACKET_IPV6_NAME(ereq_cn2mn_common);
	}
)


FEM_icmp6_echo_request(
	ereq_mn2cn_common,
	_HETHER_nut2rx,
	{
		_SRC(v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC)));
		_DST(tn2v6(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, LINKX_LINK));
	},
	{
		payload	= payload8;
	}
)


FEM_icmp6_echo_request(
	ereq_cn2mn_common,
	_HETHER_rx2nut,
	{
		_SRC(tn2v6(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, LINKX_LINK));
		_DST(v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC)));
	},
	{
		payload	= payload8;
	}
)


FEM_icmp6_echo_request(
	linklocal_ereq_from_cn0_to_mn0,
	_HETHER_tn2nut,
	{
		HopLimit	= 64;
		_SRC(tnv6());
		_DST(v6ether(MN_MAC));
	},
	{
		payload	= payload8;
	}
)


FEM_icmp6_echo_request(
	linklocal_ereq_from_cn0_to_mn0_hl_m1,
	_HETHER_tn2nut,
	{
		HopLimit	= 63;
		_SRC(tnv6());
		_DST(v6ether(MN_MAC));
	},
	{
		payload	= payload8;
	}
)


FEM_icmp6_destination_unreachable(
	dstunreach_ha0_cn0,
	_HETHER_nut2tn,
	{
		_SRC(nutv6());
		_DST(tnv6());
	},
	{
		Code	= 3;
		payload	= data_linklocal_ereq_from_cn0_to_mn0;
	}
)


FEM_icmp6_destination_unreachable(
	dstunreach_ha0_cn0_hl_m1,
	_HETHER_nut2tn,
	{
		_SRC(nutv6());
		_DST(tnv6());
	},
	{
		Code	= 3;
		payload	= data_linklocal_ereq_from_cn0_to_mn0_hl_m1;
	}
)


FEM_icmp6_time_exceeded(
	timeexceeded_rx_rut,
	_HETHER_rx2nut,
	{
		_SRC(v6merge(ICMP_ERROR_R_LINK_PREFIX, ICMP_ERROR_R_LINK_PREFIXLEN, v6(RX_LINK_LOCAL)));
		_DST(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
	},
	{
		payload	= data_ereq_cn2mn_tunnel_common;
	}
)


FEM_icmp6_destination_unreachable(
	dst_unreach_rut_cn,
	_HETHER_nut2rx,
	{
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, HA_HOME_LINK));
		_DST(tn2v6(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, LINKX_LINK));
	},
	{
		Code	= 3;
		payload	= data_ereq_cn2mn_common;
	}
)


#ifdef USE_LINK1Y

FEM_icmp6_destination_unreachable(
	dst_unreach_rut1_cn,
	_HETHER_nut2rx,
	{
		_SRC(nut2v6(LINK1_PREFIX, LINK1_PREFIXLEN, LINK1_LINK));
		_DST(tn2v6(CARE_OF_PREFIX, CARE_OF_PREFIXLEN, LINKX_LINK));
	},
	{
		Code	= 3;
		payload	= data_ereq_cn2mn_common;
	}
)

#endif


Payload data_linklocal_ereq_from_cn0_to_mn0 {
	data	= left(_PACKET_IPV6_NAME(linklocal_ereq_from_cn0_to_mn0), 56);
}


Payload data_linklocal_ereq_from_cn0_to_mn0_hl_m1 {
	data	= left(_PACKET_IPV6_NAME(linklocal_ereq_from_cn0_to_mn0_hl_m1), 56);
}


Payload data_ereq_cn2mn_tunnel_common {
	data	= left(_PACKET_IPV6_NAME(ereq_cn2mn_tunnel_common), 96);
}


Payload data_ereq_cn2mn_common {
	data	= left(_PACKET_IPV6_NAME(ereq_cn2mn_common), 56);
}


#endif	// HAVE_TUNNEL_DEF
