//
// Copyright (C) IPv6 Promotion Council,
// NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT),
// Yokogwa Electoric Corporation, YASKAWA INFORMATION SYSTEMS Corporation
// and NTT Advanced Technology Corporation(NTT-AT) All rights reserved.
// 
// Technology Corporation.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
////////////////////////////////////////////////////////////////////////

#ifndef HAVE_PROXY_ND_DEF
#define HAVE_PROXY_ND_DEF


////////////////////////////////////////
// NS: CN0 -> MN0 (target: global)    //
////////////////////////////////////////
FEM_icmp6_ns(
	proxy_mcast_ns_global_sll,
	_HETHER_tn2mnsolnode,
	{
		HopLimit	= 255;
		_SRC(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
		_DST(_IPV6_SOLNODE_MCAST(v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC))));
	},
	{
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= _SLLOPT_tn;
	}
)


FEM_icmp6_ns(
	proxy_ucast_ns_global,
	_HETHER_tn2nut,
	{
		HopLimit	= 255;
		_SRC(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
		_DST(v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC)));
	},
	{
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
	}
)


FEM_icmp6_ns(
	proxy_ucast_ns_global_sll,
	_HETHER_tn2nut,
	{
		HopLimit	= 255;
		_SRC(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
		_DST(v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC)));
	},
	{
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= _SLLOPT_tn;
	}
)


FEM_icmp6_ns(
	proxy_dad_ns_global_from_cn0,
	_HETHER_tn2mnsolnode,
	{
		HopLimit	= 255;
		_SRC(v6(_UNSPEC_ADDR));
		_DST(_IPV6_SOLNODE_MCAST(v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC))));
	},
	{
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
	}
)


////////////////////////////////////////////////
// NS: CN0 -> MN0 (target: link-local)        //
////////////////////////////////////////////////
FEM_icmp6_ns(
	proxy_mcast_ns_linklocal_sll,
	_HETHER_tn2mnsolnode,
	{
		HopLimit	= 255;
		_SRC(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
		_DST(_IPV6_SOLNODE_MCAST(v6ether(MN_MAC)));
	},
	{
		TargetAddress	= v6ether(MN_MAC);
		option		= _SLLOPT_tn;
	}
)


FEM_icmp6_ns(
	proxy_ucast_ns_linklocal,
	_HETHER_tn2nut,
	{
		HopLimit	= 255;
		_SRC(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
		_DST(v6ether(MN_MAC));
	},
	{
		TargetAddress	= v6ether(MN_MAC);
	}
)


FEM_icmp6_ns(
	proxy_ucast_ns_linklocal_sll,
	_HETHER_tn2nut,
	{
		HopLimit	= 255;
		_SRC(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
		_DST(v6ether(MN_MAC));
	},
	{
		TargetAddress	= v6ether(MN_MAC);
		option		= _SLLOPT_tn;
	}
)


FEM_icmp6_ns(
	proxy_dad_ns_linklocal_from_cn0,
	_HETHER_tn2mnsolnode,
	{
		HopLimit	= 255;
		_SRC(v6(_UNSPEC_ADDR));
		_DST(_IPV6_SOLNODE_MCAST(v6ether(MN_MAC)));
	},
	{
		TargetAddress	= v6ether(MN_MAC);
	}
)


////////////////////////////////////////
// NA: HA -> CN0 (target: global)     //
////////////////////////////////////////
#ifdef PROXY_ND

FEM_icmp6_na(
	proxy_na_global_tll_from_global,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= _TLLOPT_nut;
	}
)


FEM_icmp6_na(
	proxy_na_global_from_global,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
	}
)


FEM_icmp6_na(
	proxy_na_global_tll_from_linklocal,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= _TLLOPT_nut;
	}
)


FEM_icmp6_na(
	proxy_na_global_from_linklocal,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
	}
)


FEM_icmp6_na(
	proxy_dad_na_global_from_cn0_global,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= _TLLOPT_nut;
	}
)


FEM_icmp6_na(
	proxy_dad_na_global_from_cn0_linklocal,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= _TLLOPT_nut;
	}
)


FEM_icmp6_na(
	unsolicited_mcast_na_global_from_global,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= _TLLOPT_nut;
	}
)


FEM_icmp6_na(
	unsolicited_mcast_na_global_from_linklocal,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= _TLLOPT_nut;
	}
)

#else	// PROXY_ND

FEM_icmp6_na(
	proxy_na_global_tll_from_global,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= stop;
	}
)


FEM_icmp6_na(
	proxy_na_global_from_global,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
	}
)


FEM_icmp6_na(
	proxy_na_global_tll_from_linklocal,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= stop;
	}
)


FEM_icmp6_na(
	proxy_na_global_from_linklocal,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
	}
)


FEM_icmp6_na(
	proxy_dad_na_global_from_cn0_global,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= stop;
	}
)


FEM_icmp6_na(
	proxy_dad_na_global_from_cn0_linklocal,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= stop;
	}
)


FEM_icmp6_na(
	unsolicited_mcast_na_global_from_global,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= stop;
	}
)


FEM_icmp6_na(
	unsolicited_mcast_na_global_from_linklocal,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6merge(HOME_PREFIX, HOME_PREFIXLEN, v6ether(MN_MAC));
		option		= stop;
	}
)

#endif	// PROXY_ND


////////////////////////////////////////
// NA: HA -> CN0 (target: link-local) //
////////////////////////////////////////
#ifdef PROXY_ND

FEM_icmp6_na(
	proxy_na_linklocal_tll_from_linklocal,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= v6ether(MN_MAC);
		option		= _TLLOPT_nut;
	}
)


FEM_icmp6_na(
	proxy_na_linklocal_from_linklocal,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= v6ether(MN_MAC);
	}
)


FEM_icmp6_na(
	proxy_na_linklocal_tll_from_global,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= v6ether(MN_MAC);
		option		= _TLLOPT_nut;
	}
)


FEM_icmp6_na(
	proxy_na_linklocal_from_global,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 0;
		TargetAddress	= v6ether(MN_MAC);
	}
)


FEM_icmp6_na(
	proxy_dad_na_linklocal_from_cn0_global,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= v6ether(MN_MAC);
		option		= _TLLOPT_nut;
	}
)


FEM_icmp6_na(
	proxy_dad_na_linklocal_from_cn0_linklocal,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 0;
		TargetAddress	= v6ether(MN_MAC);
		option		= _TLLOPT_nut;
	}
)


FEM_icmp6_na(
	unsolicited_mcast_na_linklocal_from_global,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= v6ether(MN_MAC);
		option		= _TLLOPT_nut;
	}
)


FEM_icmp6_na(
	unsolicited_mcast_na_linklocal_from_linklocal,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= 0;
		SFlag		= 0;
		OFlag		= 1;
		TargetAddress	= v6ether(MN_MAC);
		option		= _TLLOPT_nut;
	}
)

#else	// PROXY_ND

FEM_icmp6_na(
	proxy_na_linklocal_tll_from_linklocal,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6ether(MN_MAC);
		option		= stop;
	}
)


FEM_icmp6_na(
	proxy_na_linklocal_from_linklocal,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6ether(MN_MAC);
	}
)


FEM_icmp6_na(
	proxy_na_linklocal_tll_from_global,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6ether(MN_MAC);
		option		= stop;
	}
)


FEM_icmp6_na(
	proxy_na_linklocal_from_global,
	_HETHER_nut2tn,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6ether(MN_MAC);
	}
)


FEM_icmp6_na(
	proxy_dad_na_linklocal_from_cn0_global,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6ether(MN_MAC);
		option		= stop;
	}
)


FEM_icmp6_na(
	proxy_dad_na_linklocal_from_cn0_linklocal,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6ether(MN_MAC);
		option		= stop;
	}
)


FEM_icmp6_na(
	unsolicited_mcast_na_linklocal_from_global,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nut2v6(HOME_PREFIX, HOME_PREFIXLEN, LINKX_LINK));
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6ether(MN_MAC);
		option		= stop;
	}
)


FEM_icmp6_na(
	unsolicited_mcast_na_linklocal_from_linklocal,
	_HETHER_nut2allnodes,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(v6(_ALLNODES_MCAST_ADDR));
	},
	{
		RFlag		= any;
		SFlag		= any;
		OFlag		= any;
		TargetAddress	= v6ether(MN_MAC);
		option		= stop;
	}
)

#endif	// PROXY_ND


////////////////////////////////
// NS: HA -> CN0              //
////////////////////////////////
FEM_icmp6_ns(
	cn0_mcast_ns_linklocal_sll,
	_HETHER_nut2tnsolnode,
	{
		HopLimit	= 255;
		_SRC(nutv6());
		_DST(_IPV6_SOLNODE_MCAST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK)));
	},
	{
		TargetAddress	= tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK);
		option		= _SLLOPT_nut;
	}
)


FEM_icmp6_ns(
	cn0_mcast_ns_global_sll,
	_HETHER_nut2tnsolnode,
	{
		HopLimit	= 255;
		_SRC(nut2v6(LINKX_PREFIX, LINKX_PREFIXLEN, LINKX_LINK));
		_DST(_IPV6_SOLNODE_MCAST(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK)));
	},
	{
		TargetAddress	= tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK);
		option		= _SLLOPT_nut;
	}
)


////////////////////////////////
// NA: CN0 -> HA              //
////////////////////////////////
FEM_icmp6_na(
	cn0_na_linklocal,
	_HETHER_tn2nut,
	{
		HopLimit	= 255;
		_SRC(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
		_DST(nutv6());
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK);
		option		= _TLLOPT_tn;
	}
)


FEM_icmp6_na(
	cn0_na_global,
	_HETHER_tn2nut,
	{
		HopLimit	= 255;
		_SRC(tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK));
		_DST(nut2v6(LINKX_PREFIX, LINKX_PREFIXLEN, LINKX_LINK));
	},
	{
		RFlag		= 0;
		SFlag		= 1;
		OFlag		= 1;
		TargetAddress	= tn2v6(CN0_PREFIX, CN0_PREFIXLEN, LINKX_LINK);
		option		= _TLLOPT_tn;
	}
)


#endif	// HAVE_PROXY_ND_DEF
