#!/usr/bin/perl
#
# Copyright (C) IPv6 Promotion Council,
# NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT),
# Yokogwa Electoric Corporation, YASKAWA INFORMATION SYSTEMS Corporation
# and NTT Advanced Technology Corporation(NTT-AT) All rights reserved.
# 
# Technology Corporation.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
#
########################################################################

BEGIN {}
END   {}

use mipv6;

my $movement	= 'USE_LINK0Y';

my $bu_sequence	= 15;
my $bu_a_bit	= 1;
my $bu_h_bit	= 1;
my $bu_l_bit	= 0;
my $bu_k_bit	= 0;
my $bu_lifetime	= 0x0069;

my $ba_status	= 0;
my $ba_k_bit	= 0;
my $ba_sequence	= $bu_sequence;
my $ba_lifetime	= $bu_lifetime;



unless(mipv6init($movement)) {
	exitInitFail();
}



vLogHTML('<FONT COLOR="#FF0000" SIZE="5"><U><B>TEST PROCEDURE'.
	'</B></U></FONT><BR>');

unless(
	mipv6registration(
		$movement,
		$bu_sequence,
		$bu_a_bit,
		$bu_h_bit,
		$bu_l_bit,
		$bu_k_bit,
		$bu_lifetime,
		$ba_status,
		$ba_k_bit,
		$ba_sequence,
		$ba_lifetime
	)
) {
	exitFail();
}

unless(relay_icmp_error($movement)) {
	exitFail();
}

exitPass();



#
# perldoc
#
########################################################################
__END__

=head1 NAME

=begin html
<BLOCKQUOTE><TT>
HA_5_1_3 - Relay ICMP error while using bi-directional tunnel

=end html

=begin html
</TT></BLOCKQUOTE>

=end html

=head1 TARGET

=begin html
<BLOCKQUOTE>
<PRE>
Router
</PRE>
</BLOCKQUOTE>

=end html

=head1 REQUIREMENT of TEST

=begin html
<BLOCKQUOTE>
<UL>
    <LI>Real Home Link
</UL>
</BLOCKQUOTE>

=end html

=head1 TOPOLOGY

=begin html
<BLOCKQUOTE>
o <U><B><FONT SIZE="+1">TOPOLOGY-3 Real Home Link</FONT></B></U> (If RUT supports <I><B>Real Home Link</B></I>.)
<BLOCKQUOTE>
<BLOCKQUOTE>
<PRE>
       RUT
        |
--------+-------+---------------+--------------- Link0
                |               |
                R0             MN0
                |
        --------+-------+-------+-------+------- Link0X
                        |       |       |
                       R0X     MN0X    CN0X
                        |
                --------+-------+-------+------- Link0Y
                                |       |
                               MN0Y    CN0Y
</PRE>
</BLOCKQUOTE>
<P>
<TABLE BORDER>
    <TR>
        <TD><TT>Link0</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
        <TD><TT>home link</TT></TD>
    </TR>
    <TR>
        <TD><TT>Link0X</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:1100::/64</TT></TD>
        <TD><TT>foreign link</TT></TD>
    </TR>
    <TR>
        <TD><TT>Link0Y</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:2100::/64</TT></TD>
        <TD><TT>foreign link</TT></TD>
    </TR>
    <TR>
        <TD ROWSPAN="4"><TT>RUT (Link0)</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:100:&lt;NutDef.Link0_addr&gt;</TT></TD>
        <TD><TT>&nbsp;</TT></TD>
    </TR>
    <TR>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:100:fdff:ffff:ffff:fffe</TT></TD>
        <TD><TT>anycast</TT></TD>
    </TR>
    <TR>
        <TD><TT>link-local</TT></TD>
        <TD><TT>fe80::&lt;NutDef.Link0_addr&gt;</TT></TD>
        <TD ROWSPAN="2"><TT>&nbsp;</TT></TD>
    </TR>
    <TR>
        <TD><TT>ether</TT></TD>
        <TD><TT>&lt;NutDef.Link0_addr&gt;</TT></TD>
    </TR>
    <TR>
        <TD ROWSPAN="3"><TT>R0 (Link0)</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:100:200:ff:fe00:a0a0</TT></TD>
        <TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
    </TR>
    <TR>
        <TD><TT>link-local</TT></TD>
        <TD><TT>fe80::200:ff:fe00:a0a0</TT></TD>
    </TR>
    <TR>
        <TD><TT>ether</TT></TD>
        <TD><TT>00:00:00:00:a0:a0</TT></TD>
    </TR>
    <TR>
        <TD><TT>R0X</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:1100:200:ff:fe00:a0a0</TT></TD>
        <TD><TT>&nbsp;</TT></TD>
    </TR>
    <TR>
        <TD ROWSPAN="3"><TT>MN0</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:100:200:ff:fe00:1</TT></TD>
        <TD ROWSPAN="3"><TT>home address</TT></TD>
    </TR>
    <TR>
        <TD><TT>link-local</TT></TD>
        <TD><TT>fe80::200:ff:fe00:1</TT></TD>
    </TR>
    <TR>
        <TD><TT>ether</TT></TD>
        <TD><TT>00:00:00:00:00:01</TT></TD>
    </TR>
    <TR>
        <TD><TT>MN0X</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:1100:200:ff:fe00:1</TT></TD>
        <TD><TT>care-of address</TT></TD>
    </TR>
    <TR>
        <TD><TT>MN0Y</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:2100:200:ff:fe00:1</TT></TD>
        <TD><TT>care-of address</TT></TD>
    </TR>
    <TR>
        <TD><TT>CN0X</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:1100:&lt;TnDef.Link0_addr&gt;</TT></TD>
        <TD><TT>correspondent node</TT></TD>
    </TR>
    <TR>
        <TD><TT>CN0Y</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:2100:&lt;TnDef.Link0_addr&gt;</TT></TD>
        <TD><TT>correspondent node</TT></TD>
    </TR>
</TABLE>
</BLOCKQUOTE>
<P>
o <U><B><FONT SIZE="+1">TOPOLOGY-3 Virtual Home Link</FONT></B></U> (If RUT supports <I><B>Virtual Home Link</B></I>.)
<BLOCKQUOTE>
<BLOCKQUOTE>
<PRE>
                               MN1Y    CN1Y
                                |       |
                --------+-------+-------+------- Link1Y
                        |
                       R1X     MN1X    CN1X
                        |       |       |
        --------+-------+-------+-------+------- Link1X
                |
                R1
                |
--------+-------+------------------------------- Link1
        |
       RUT
        |
- - - - + - - - - - - - - - - - + - - - - - - -  Link0
                                |
                               MN0
</PRE>
</BLOCKQUOTE>
<P>
<TABLE BORDER>
    <TR>
        <TD><TT>Link0</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
        <TD><TT>home link</TT></TD>
    </TR>
    <TR>
        <TD><TT>Link1</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:101::/64</TT></TD>
        <TD><TT>foreign link</TT></TD>
    </TR>
    <TR>
        <TD><TT>Link1X</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:1101::/64</TT></TD>
        <TD><TT>foreign link</TT></TD>
    </TR>
    <TR>
        <TD><TT>Link1Y</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:2101::/64</TT></TD>
        <TD><TT>foreign link</TT></TD>
    </TR>
    <TR>
        <TD ROWSPAN="4"><TT>RUT (Link0)</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:100:&lt;NutDef.Link0_addr&gt;</TT></TD>
        <TD><TT>&nbsp;</TT></TD>
    </TR>
    <TR>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:100:fdff:ffff:ffff:fffe</TT></TD>
        <TD><TT>anycast</TT></TD>
    </TR>
    <TR>
        <TD><TT>link-local</TT></TD>
        <TD><TT>fe80::&lt;NutDef.Link0_addr&gt;</TT></TD>
        <TD ROWSPAN="2"><TT>&nbsp;</TT></TD>
    </TR>
    <TR>
        <TD><TT>ether</TT></TD>
        <TD><TT>&lt;NutDef.Link0_addr&gt;</TT></TD>
    </TR>
    <TR>
        <TD ROWSPAN="3"><TT>RUT (Link1)</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:101:&lt;NutDef.Link1_addr&gt;</TT></TD>
        <TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
    </TR>
    <TR>
        <TD><TT>link-local</TT></TD>
        <TD><TT>fe80::&lt;NutDef.Link1_addr&gt;</TT></TD>
    </TR>
    <TR>
        <TD><TT>ether</TT></TD>
        <TD><TT>&lt;NutDef.Link1_addr&gt;</TT></TD>
    </TR>
    <TR>
        <TD ROWSPAN="3"><TT>R1 (Link1)</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:101:200:ff:fe00:a1a1</TT></TD>
        <TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
    </TR>
    <TR>
        <TD><TT>link-local</TT></TD>
        <TD><TT>fe80::200:ff:fe00:a1a1</TT></TD>
    </TR>
    <TR>
        <TD><TT>ether</TT></TD>
        <TD><TT>00:00:00:00:a1:a1</TT></TD>
    </TR>
    <TR>
        <TD><TT>R1X</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:1101:200:ff:fe00:a1a1</TT></TD>
        <TD><TT>&nbsp;</TT></TD>
    </TR>
    <TR>
        <TD><TT>MN0</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:100:200:ff:fe00:1</TT></TD>
        <TD><TT>home address</TT></TD>
    </TR>
    <TR>
        <TD><TT>MN1X</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:1101:200:ff:fe00:1</TT></TD>
        <TD><TT>care-of address</TT></TD>
    </TR>
    <TR>
        <TD><TT>MN1Y</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:2101:200:ff:fe00:1</TT></TD>
        <TD><TT>care-of address</TT></TD>
    </TR>
    <TR>
        <TD><TT>CN1X</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:1101:&lt;TnDef.Link1_addr&gt;</TT></TD>
        <TD><TT>correspondent node</TT></TD>
    </TR>
    <TR>
        <TD><TT>CN1Y</TT></TD>
        <TD><TT>global</TT></TD>
        <TD><TT>3ffe:501:ffff:2101:&lt;TnDef.Link1_addr&gt;</TT></TD>
        <TD><TT>correspondent node</TT></TD>
    </TR>
</TABLE>
</BLOCKQUOTE>
</BLOCKQUOTE>

=end html

=head1 SETUP

=begin html
<BLOCKQUOTE>
o <U><B><FONT SIZE="+1">Common Setup-1</FONT></B></U>
<UL>
    <LI>Reboot RUT
    <LI>Assign the global addresses
    <BLOCKQUOTE>
        <TABLE BORDER>
            <TR><TH>interface</TH><TH>address</TH><TH>type</TH><TH>note</TH></TR>
            <TR><TD ROWSPAN="2">&lt;NutDef.Link0_device&gt;</TD><TD>3ffe:501:ffff:100:&lt;NutDef.Link0_addr&gt;</TD><TD>unicast</TD><TD>&nbsp;</TD></TR>
            <TR><TD>3ffe:501:ffff:100:fdff:ffff:ffff:fffe</TD><TD>anycast</TD><TD>Mobile IPv6 Home-Agents anycast address</TD></TR>
            <TR><TD>&lt;NutDef.Link1_device&gt;</TD><TD>3ffe:501:ffff:101:&lt;NutDef.Link1_addr&gt;</TD><TD>unicast</TD><TD>&nbsp;</TD></TR>
        </TABLE>
    </BLOCKQUOTE>
    <LI>Enable HA function
    <UL>
        <LI>Turn on HA functions
    </UL>
    <LI>Configure routing table of RUT
    <UL>
        <LI>HA has only physical home link
    </UL>
    <BLOCKQUOTE>
        <TABLE BORDER>
            <TR><TH>destination</TH><TH>gateway</TH><TH>interface</TH><TH>preference</TH></TR>
            <TR><TD>::/0(default)</TD><TD>fe80::200:ff:fe00:a0a0</TD><TD>&lt;NutDef.Link0_device&gt;</TD><TD>medium</TD></TR>
        </TABLE>
    </BLOCKQUOTE>
    <UL>
        <LI>HA has physical home link and physical foreign link
    </UL>
    <BLOCKQUOTE>
        <TABLE BORDER>
            <TR><TH>destination</TH><TH>gateway</TH><TH>interface</TH><TH>preference</TH></TR>
            <TR><TD>::/0(default)</TD><TD>fe80::200:ff:fe00:a0a0</TD><TD>&lt;NutDef.Link0_device&gt;</TD><TD>medium</TD></TR>
            <TR><TD>3ffe:501:ffff:1101::/64</TD><TD>fe80::200:ff:fe00:a1a1</TD><TD>&lt;NutDef.Link1_device&gt;</TD><TD>medium</TD></TR>
            <TR><TD>3ffe:501:ffff:2101::/64</TD><TD>fe80::200:ff:fe00:a1a1</TD><TD>&lt;NutDef.Link1_device&gt;</TD><TD>medium</TD></TR>
            <TR><TD>3ffe:501:ffff:3101::/64</TD><TD>fe80::200:ff:fe00:a1a1</TD><TD>&lt;NutDef.Link1_device&gt;</TD><TD>medium</TD></TR>
        </TABLE>
    </BLOCKQUOTE>
    <UL>
        <LI>HA has virtual home link and physical foreign link
    </UL>
    <BLOCKQUOTE>
        <TABLE BORDER>
            <TR><TH>destination</TH><TH>gateway</TH><TH>interface</TH><TH>preference</TH></TR>
            <TR><TD>default</TD><TD>fe80::200:ff:fe00:a1a1</TD><TD>&lt;NutDef.Link1_device&gt;</TD><TD>medium</TD></TR>
        </TABLE>
    </BLOCKQUOTE>
    <LI>IPsec configuration
    <UL>
        <LI><A HREF="./SETUP_IPsec_MN0_SA1_SA2.html">ESP transport mode (BU/BA)</A>
        <LI><A HREF="./SETUP_IPsec_MN0_SA3_SA4.html">ESP tunnel mode (HoTI/HoT)</A>
        <LI><A HREF="./SETUP_IPsec_MN0_SA5_SA6.html">ESP transport mode (MPS/MPA)</A>
        <LI><A HREF="./SETUP_IPsec_MN0_SA7_SA8.html">ESP tunnel mode (Payload Packets)</A>
    </UL>
</UL>
o <U><B><FONT SIZE="+1">Real Home Link</FONT></B></U> (If RUT supports <I><B>Real Home Link</B></I>.)
<UL>
    <LI>Configure RA parameter
    <UL>
        <UL>
            <LI>Set Home Agent Flag to ON
        </UL>
        <LI>Attach Home Agent Information Option
        <UL>
            <LI>Set Home Agent Preference to 10
        </UL>
        <LI>Attach Prefix Information Option
        <UL>
            <LI>Set Router Address Flag to ON
            <LI>Set Prefix field to Home Agent Address
        </UL>
    </UL>
</UL>
</BLOCKQUOTE>

=end html

=head1 INITIALIZATION

=begin html
<BLOCKQUOTE>
o <U><B><FONT SIZE="+1">Real Home Link</FONT></B></U>
<BLOCKQUOTE>
Check Link0 routing table
<BLOCKQUOTE>
<PRE>
  RUT     MN0
   |       |
   |      MN0X
   |       |
   | <---- | Echo Request
   | ----> | Echo Reply
   |       |
   |      MN0Y
   |       |
   | <---- | Echo Request
   | ----> | Echo Reply
   |       |
   V       V
</PRE>
</BLOCKQUOTE>
<P>
<PRE>
1. MN0X sends Echo Request
</PRE>
<PRE>
        IPv6 header
            source              = MN0X (Link0X, global)
            destination         = RUT  (Link0,  global)
        Echo Request
</PRE>
<PRE>
2. MN0X receives Echo Reply
</PRE>
<PRE>
        IPv6 header
            source              = RUT  (Link0,  global)
            destination         = MN0X (Link0X, global)
        Echo Reply
</PRE>
<PRE>
3. MN0Y sends Echo Request
</PRE>
<PRE>
        IPv6 header
            source              = MN0Y (Link0Y, global)
            destination         = RUT  (Link0,  global)
        Echo Request
</PRE>
<PRE>
4. MN0Y receives Echo Reply
</PRE>
<PRE>
        IPv6 header
            source              = RUT  (Link0,  global)
            destination         = MN0Y (Link0Y, global)
        Echo Reply
</PRE>
</BLOCKQUOTE>
<P>
o <U><B><FONT SIZE="+1">Virtual Home Link</FONT></B></U>
<BLOCKQUOTE>
Check Link1 routing table
<BLOCKQUOTE>
<PRE>
  RUT     MN0
   |       |
   |      MN1X
   |       |
   | <---- | Echo Request
   | ----> | Echo Reply
   |       |
   |      MN1Y
   |       |
   | <---- | Echo Request
   | ----> | Echo Reply
   |       |
   V       V
</PRE>
</BLOCKQUOTE>
<P>
<PRE>
1. MN1X sends Echo Request
</PRE>
<PRE>
        IPv6 header
            source              = MN1X (Link1X, global)
            destination         = RUT  (Link0,  global)
        Echo Request
</PRE>
<PRE>
2. MN1X receives Echo Reply
</PRE>
<PRE>
        IPv6 header
            source              = RUT  (Link0,  global)
            destination         = MN1X (Link1X, global)
        Echo Reply
</PRE>
<PRE>
3. MN1Y sends Echo Request
</PRE>
<PRE>
        IPv6 header
            source              = MN1Y (Link1Y, global)
            destination         = RUT  (Link0,  global)
        Echo Request
</PRE>
<PRE>
4. MN1Y receives Echo Reply
</PRE>
<PRE>
        IPv6 header
            source              = RUT  (Link0,  global)
            destination         = MN1Y (Link1Y, global)
        Echo Reply
</PRE>
</BLOCKQUOTE>
</BLOCKQUOTE>

=end html

=head1 TEST PROCEDURE

=begin html
<BLOCKQUOTE>
<BLOCKQUOTE>
<PRE>
  CN0Y    RUT     R0X     MN0
   |       |       |       |
   |       |       |      MN0Y
   |       |       |       |
   |       | <------------ | BU (A=1&H=1) w/ HaO
   |       | ------------> | BA (status=0) w/ RH                      (*1)
   |       |       |       |
   | ------+===========X   | Tunneled Echo Request (dst=home address) (*2)
   |       |       |       |
   |       | <---- |       | Time Exceeded (code=0)
   | <---- |       |       | Destination Unreachable (code=3)         (*3)
   |       |       |       |
   |       |       |       |
   V       V       V       V
</PRE>
</BLOCKQUOTE>
<P>
<PRE>
1. MN0Y sends BU w/ HaO
</PRE>
<PRE>
        IPv6 header
            source              = MN0Y (Link0Y, global)
            destination         = RUT  (Link0,  global)
        DH
          HaO
            address             = MN0  (Link0,  global)
        ESP
            SPI                 = SA1_SPI (SA1 protects BU message)
        BU
            sequence            = 15
            A                   = 1
            H                   = 1
            L                   = 0
            K                   = 0
            lifetime            = 105
          PadN option
            length              = 0
          Alternate CoA option
            address             = MN0Y (Link0Y, global)
</PRE>
<PRE>
2. MN0Y receives BA w/ RH (*1)
</PRE>
<PRE>
    o <U>BA message format #1</U>
</PRE>
<PRE>
        IPv6 header
            source              = RUT  (Link0,  global)
            destination         = MN0Y (Link0Y, global)
        RH
            length              = 2
            type                = 2
            segments left       = 1
            address             = MN0  (Link0,  global)
        ESP
            SPI                 = SA2_SPI (SA2 protects BA message)
        BA
            status              = 0 or 1
            K                   = 0
            sequence            = 15
            lifetime            =< 105
          Binding Refresh Advice option
            interval            =< 105
</PRE>
<PRE>
    o <U>BA message format #2</U>
</PRE>
<PRE>
        IPv6 header
            source              = RUT  (Link0,  global)
            destination         = MN0Y (Link0Y, global)
        RH
            length              = 2
            type                = 2
            segments left       = 1
            address             = MN0  (Link0,  global)
        ESP
            SPI                 = SA2_SPI (SA2 protects BA message)
        BA
            status              = 0 or 1
            K                   = 0
            sequence            = 15
            lifetime            =< 105
          PadN option
            length              = 2
</PRE>
<PRE>
3. CN0Y sends Echo Request
</PRE>
<PRE>
        IPv6 header
            source              = CN0Y (Link0Y, global)
            destination         = MN0  (Link0,  global)
        Echo Request
</PRE>
<PRE>
4. RUT sends Echo Request to MN0Y(tunneled) (*2)
</PRE>
<PRE>
        IPv6 header
            source              = RUT  (Link0,  global)
            destination         = MN0Y (Link0Y, global)
        IPv6 header
            source              = CN0Y (Link0Y, global)
            destination         = MN0  (Link0,  global)
        Echo Request
</PRE>
<PRE>
5. R0X sends Time Exceeded
</PRE>
<PRE>
        IPv6 header
            source              = R0X  (Link0X, global)
            destination         = RUT  (Link0,  global)
        Time Exceeded
            code                = 0 (hop limit exceeded in transit)
            data                =
                IPv6 header
                    source              = RUT  (Link0,  global)
                    destination         = MN0Y (Link0Y, global)
                IPv6 header
                    source              = CN0Y (Link0Y, global)
                    destination         = MN0  (Link0,  global)
                Echo Request
</PRE>
<PRE>
6. CN0Y receives Destination Unreachable (*3)
</PRE>
<PRE>
        IPv6 header
            source              = RUT  (Link0,  global)
            destination         = CN0Y (Link0Y, global)
        Destination Unreachable
            code                = 3 (address unreachable)
            data                =
                IPv6 header
                    source              = CN0Y (Link0Y, global)
                    destination         = MN0  (Link0,  global)
                Echo Request
</PRE>
</BLOCKQUOTE>

=end html

=head1 JUDGEMENT

=begin html
<BLOCKQUOTE>
<PRE>
(*1) PASS: MN0Y receives BA w/ RH
(*2) PASS: RUT sends Echo Request to MN0Y(tunneled)
(*3) PASS: CN0Y receives Destination Unreachable
</PRE>
</BLOCKQUOTE>

=end html

=cut

# =head1 REFERENCE
# 
# =begin html
# <BLOCKQUOTE>
# <PRE>
# RFC 3775 - Mobility Support in IPv6
# </PRE>
# <BLOCKQUOTE>
# <PRE>
# 9.3.4.  Receiving ICMP Error Messages
# </PRE>
# <PRE>
#    When the correspondent node has a Binding Cache entry for a mobile
#    node, all traffic destined to the mobile node goes directly to the
#    current care-of address of the mobile node using a routing header.
#    Any ICMP error message caused by packets on their way to the care-of
#    address will be returned in the normal manner to the correspondent
#    node.
# </PRE>
# <PRE>
#    On the other hand, if the correspondent node has no Binding Cache
#    entry for the mobile node, the packet will be routed through the
#    mobile node's home link.  Any ICMP error message caused by the packet
#    on its way to the mobile node while in the tunnel, will be
#    transmitted to the mobile node's home agent.  <U><B>By the definition of</B></U>
#    <U><B>IPv6 encapsulation [15], the home agent <FONT COLOR="#FF0000">MUST</FONT> relay certain ICMP error</B></U>
#    <U><B>messages back to the original sender of the packet, which in this</B></U>
#    <U><B>case is the correspondent node.</B></U>
# </PRE>
# <PRE>
#    Thus, in all cases, any meaningful ICMP error messages caused by
#    packets from a correspondent node to a mobile node will be returned
#    to the correspondent node.  If the correspondent node receives
#    persistent ICMP Destination Unreachable messages after sending
#    packets to a mobile node based on an entry in its Binding Cache, the
#    correspondent node <FONT COLOR="#FF0000">SHOULD</FONT> delete this Binding Cache entry.  Note that
#    if the mobile node continues to send packets with the Home Address
#    destination option to this correspondent node, they will be dropped
#    due to the lack of a binding.  For this reason it is important that
#    only persistent ICMP messages lead to the deletion of the Binding
#    Cache entry.
# </PRE>
# </BLOCKQUOTE>
# <PRE>
# RFC 2473 - Generic Packet Tunneling in IPv6
# </PRE>
# <BLOCKQUOTE>
# <PRE>
# 8.2 ICMP Messages for IPv6 Original Packets
# </PRE>
# <PRE>
#    The tunnel entry-point node builds the ICMP and IPv6 headers of the
#    ICMP message that is sent to the source of the original packet as
#    follows:
# </PRE>
# <PRE>
#    IPv6 Fields:
# </PRE>
# <PRE>
#    Source Address
# </PRE>
# <PRE>
#                   A valid unicast IPv6 address of the outgoing
#                   interface.
# </PRE>
# <PRE>
#    Destination Address
# </PRE>
# <PRE>
#                   Copied from the Source Address field of the Original
#                   IPv6 header.
# </PRE>
# <PRE>
#    ICMP Fields:
# </PRE>
# <PRE>
#    <U><B>For any of the following tunnel ICMP error messages:</B></U>
# </PRE>
# <PRE>
#      <U><B>"hop limit exceeded"</B></U>
# </PRE>
# <PRE>
#      <U><B>"unreachable node"</B></U>
# </PRE>
# <PRE>
#      <U><B>"parameter problem" - pointing to a valid Tunnel Encapsulation</B></U>
#      <U><B>Limit destination header with the Tun Encap Lim field set to a</B></U>
#      <U><B>value zero:</B></U>
# </PRE>
# <PRE>
#      <U><B>Type           1 - unreachable node</B></U>
# </PRE>
# <PRE>
#      <U><B>Code           3 - address unreachable</B></U>
# </PRE>
# <PRE>
#    For tunnel ICMP error message "packet too big":
# </PRE>
# <PRE>
#      Type           2 - packet too big
# </PRE>
# <PRE>
#      Code           0
# </PRE>
# <PRE>
#      MTU            The MTU field from the tunnel ICMP message minus
#                     the length of the tunnel headers.
# </PRE>
# <PRE>
#    According to the general rules described in 7.1, an ICMP "packet too
#    big" message is sent to the source of the original packet only if the
#    original packet size is larger than the minimum link MTU size
#    required for IPv6 [IPv6-Spec].
# </PRE>
# </BLOCKQUOTE>
# </BLOCKQUOTE>
# 
# =end html
# 

=pod

=head1 REFERENCE

=begin html
<BLOCKQUOTE>
<PRE>
RFC 3775 - Mobility Support in IPv6
See Section 9.3.4.
RFC 2473 - Generic Packet Tunneling in IPv6
See Section 8.2.
</PRE>
</BLOCKQUOTE>

=end html

=cut
