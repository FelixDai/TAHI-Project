#!/usr/bin/perl
#
# Copyright (C) IPv6 Promotion Council,
# NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT),
# Yokogwa Electoric Corporation, YASKAWA INFORMATION SYSTEMS Corporation
# and NTT Advanced Technology Corporation(NTT-AT) All rights reserved.
# 
# Technology Corporation.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#

#--------------------------------------------------------------#
# ENTRANCE
#--------------------------------------------------------------#
# Set the test version used for the display.
BEGIN { $V6evalTool::TestVersion = '$Name: MIPv6_4_0_5 $'; }

# Import the package.
use V6evalTool;
use mip6_mn_config;
use mip6_mn_common;
use mip6_mn_get;
use mip6_mn_send;
use mip6_mn_recv;
use mip6_mn_msg;

#--------------------------------------------------------------#
# INITIALIZATION
#--------------------------------------------------------------#
# Do the test satisfied the condition.
my @options = (
	'TEST_STATE_NORMAL',        'YES',                0,
	'TEST_FUNC_MPD',            'YES',                0,
	'TEST_FUNC_RR',             'YES',                0,
);

# Set the special environment
$MN_CONF{ENV_CN0_SET} = 'YES';

# Initialize the state of TARGET.
Init_MN(@options);

#--------------------------------------------------------------#
# PREPARATION
#--------------------------------------------------------------#
# Prepare other local variables.
my @value;
my $sec;

#--------------------------------------------------------------#
# TEST PROCEDURE
#--------------------------------------------------------------#
#--------------------------------------------------------------#
# NUT moves from Link0 to LinkX.
#--------------------------------------------------------------#
# Receive Binding Update. (NUTX -> HA0)
# Send Binding Acknowledgement. (HA0 -> NUTX)
%packet = vRecv_to_move_from_Link0_to_LinkX_w_all_SA($IF0);
if ($packet{status} != 0) {
	$initcount ++;
	goto TERM;
}

#--------------------------------------------------------------#
vLogHTML_Info("<B>CN0 sends ICMP Echo Request by tunneling.</B>");
#--------------------------------------------------------------#
# Send ICMP Echo Request. (out: HA0 -> NUTX, in: CN0 -> NUT0)
vSend_echorequest($IF0, 'echorequest_cn0ga_nuthga_tnl_ha0_nutx', 0);

# Receive Home Test Init. (out: NUTX -> HA0, in: NUT0 -> CN0)
# Receive Care-of Test Init. (NUTX -> CN0)
# Send Care-of Test. (CN0 -> NUTX)
# Send Home Test. (out: HA0 -> NUTX, in: CN0 -> NUT0)
# Receive Binding Update to CN0. (NUTX -> CN0)
%packet_bu_cn = vRecv_at_LinkX($IF0, $RR_TIME,
	'bu_nutxga_cn0ga_hoa_nuthga',
	'bu_nutxga_cn0ga_hoa_nuthga_coa_nutx');
if ($packet_bu_cn{status} != 0) {
	vLogHTML_Fail("INIT FAIL: CN0 does not receive Binding Update. $RR_TIME [sec]");
	$initcount ++;
	goto TERM;
}

# Send Binding Acknowledgement if necessary. (CN0 -> NUTX)
vSend_ba_cn($IF0, 'ba_cn0ga_nutxga_rh2_nuthga', \%packet_bu_cn);

# check CN-Registration Lifetime
%value_bu_cn = get_value_of_bu_cn(0, \%packet_bu_cn);
if (($MN_CONF{FUNC_DETAIL_MN_BU_TO_CN_REREG} eq 'NO') &&
    (($value_bu_cn{Lifetime} * 4) < ($MAX_NONCE_LIFETIME + $MAX_BINDACK_TIMEOUT))) {
	#--------------------------------------------------------------#
	vLogHTML_Info("<B>This test is skipped, because test is not effective to NUT.</B>");
	#--------------------------------------------------------------#
	$ignorecount ++;
	goto TERM;
}

#--------------------------------------------------------------#
vLogHTML_Info("<B> waits for Nonce expire. $MAX_NONCE_LIFETIME [sec]</B>");
#--------------------------------------------------------------#
$now_time = time;
if ($SEND_PACKET_HOT{sentTime1} > $SEND_PACKET_COT{sentTime1}) {
	$end_time = $SEND_PACKET_HOT{sentTime1} + $MAX_NONCE_LIFETIME;
}
else {
	$end_time = $SEND_PACKET_COT{sentTime1} + $MAX_NONCE_LIFETIME;
}
while ($now_time < $end_time) {

	$sec = $end_time - $now_time;
	%packet = vRecv_at_LinkX($IF0, $sec,
		'bu_nutxga_cn0ga_hoa_nuthga_coa_nuth_del',
		'hoti_nuthga_cn0ga_tnl_nutx_ha0',
		'coti_nutxga_cn0ga');
	$now_time = time;

	if ($packet{recvFrame} eq 'bu_nutxga_cn0ga_hoa_nuthga_coa_nuth_del') {
		%value_bu_cn = get_value_of_bu_cn(0, \%packet);
		if ($value_bu_cn{Lifetime} == 0) {
			#--------------------------------------------------------------#
			vLogHTML_Info("<B>This test is skipped, because test is not effective to NUT.</B>");
			#--------------------------------------------------------------#
			$ignorecount ++;
			goto TERM;
		}
	}
	elsif ($packet{status} == 0) {
		#--------------------------------------------------------------#
		vLogHTML_Info("<B>This test is skipped, because test is not effective to NUT.</B>");
		#--------------------------------------------------------------#
		$ignorecount ++;
		goto TERM;
	}
}

#--------------------------------------------------------------#
vLogHTML_Info("<B>HA0 sends unsolicited Mobile Prefix Advertisement.</B>");
#--------------------------------------------------------------#
# Send Mobile Prefix Advertisement. (HA0 -> NUTX with Type2 Routing Header)
%value_bu_cn = get_value_of_bu_cn(0, \%RECV_PACKET_BU_CN);
$link0_lifetime = int($RECV_PACKET_BU_CN{recvTime1} + $value_bu_cn{Lifetime} * 4 - $now_time);
if ($link0_lifetime > 90) {
	$link0_lifetime = 60;
}
elsif ($link0_lifetime > 60) {
	$link0_lifetime = 30;
}
else {
	#--------------------------------------------------------------#
	vLogHTML_Info("<B>This test is skipped, because test is not effective to NUT.</B>");
	#--------------------------------------------------------------#
	$ignorecount ++;
	goto TERM;
}
$end_time = set_link_lifetime('Link0', $link0_lifetime, $link0_lifetime);
%packet_mpa = vSend_mpa($IF0, 'mpa_ha0ga_nutxga_rh2_nuthga_pfx_ha0', 0);

# Receive Mobile Prefix Solicitation. (NUTX -> HA0 with Home Address Option)
# Send Mobile Prefix Advertisement. (HA0 -> NUTX with Type2 Routing Header)
# Receive Binding Update to HA0. (NUTX -> HA0)
# Send Binding Acknowledgement. (NUTX -> HA0)
$interval = $PREFIX_ADV_TIMEOUT;
$retry = 0;
$now_time = time;
while ($now_time < $end_time) {

	%packet = vRecv_at_LinkX($IF0, $PREFIX_ADV_TIMEOUT,
		'mps_nutxga_ha0ga_hoa_nuthga',
		'bu_nutxga_ha0ga_hoa_nuthga');
	$now_time = time;

	if ($packet{recvFrame} eq 'bu_nutxga_ha0ga_hoa_nuthga') {
		vSend_ba($IF0, 'ba_ha0ga_nutxga_rh2_nuthga', \%packet);
		%packet_bu = %packet;
		last;
	}
	elsif ($packet{recvFrame} eq 'mps_nutxga_ha0ga_hoa_nuthga') {
		#--------------------------------------------------------------#
		vLogHTML_Info("<B>HA0 sends solicited Mobile Prefix Advertisement.</B>");
		#--------------------------------------------------------------#
		%packet_mpa = vSend_mpa($IF0, 'mpa_ha0ga_nutxga_rh2_nuthga_pfx_ha0', \%packet);
		%packet_mps = %packet;
	}
	else {
		# the retransmission of MPA is to 3 times.
		$wk = $now_time - $packet_mpa{sentTime1};
		if ($wk > $interval) {
			if ($retry >= $PREFIX_ADV_RETRIES) {
				last;
			}
			#--------------------------------------------------------------#
			vLogHTML_Warn("<B>HA0 sends unsolicited Mobile Prefix Advertisement again.</B>");
			#--------------------------------------------------------------#
			%packet_pre_mpa = %packet_mpa;
			%packet_mpa = vSend_mpa($IF0, 'mpa_ha0ga_nutxga_rh2_nuthga_pfx_ha0', 0);
			$interval = ($packet_mpa{sentTime1} - $packet_pre_mpa{sentTime1}) * 2;
			$retry ++;
			$warncount ++;
		}
	}
}
if (%packet_mps == 0) {
	vLogHTML_Fail("INIT FAIL: HA0 does not receive Mobile Prefix Solicitation.");
	$initcount ++;
	goto TERM;
}
elsif (%packet_bu == 0) {
	vLogHTML_Fail("INIT FAIL: HA0 does not receive Binding Update.");
	$initcount ++;
	goto TERM;
}

# Receive Home Test Init. (out: NUTX -> HA0, in: NUT0 -> CN0)
# Receive Care-of Test Init. (NUTX -> CN0)
%packet_coti = vRecv_at_LinkX($IF0, $RR_TIME, 'coti_nutxga_cn0ga');

#--------------------------------------------------------------#
# JUDGEMENT
#--------------------------------------------------------------#
if ($packet_coti{status} == 0) {
	vLogHTML_Pass("(*1) PASS: CN0 receives Care-of Test Init.");
}
else {
	vLogHTML_Fail("(*1) FAIL: CN0 does not receive Care-of Test Init.");
	$failcount ++;
}

TERM:
#--------------------------------------------------------------#
# TERMINATION
#--------------------------------------------------------------#
# Terminate the state of TARGET.
Term_MN($IF0, 1);

################################################################
__END__


=head1 NAME

=begin html
  MN-2-1-2-2-017 - Sending CoTI &#40;when the lifetime for a changed prefix decreases&#41;

=end html

=head1 TARGET

=begin html
<PRE>
Host
</PRE>

=end html

=head1 REQUIREMENT of TEST

=begin html
<PRE>
    - Function of Return Routability: YES
    - Function of Mobile Prefix Discovery: YES
                    
</PRE>

=end html

=head1 TOPOLOGY

=begin html
<PRE>
<UL>
<LI><B><FONT SIZE="+1">TOPOLOGY-1 In the case of Real Home Link</FONT></B>
</UL>
                    
                            |
                            R      CN0
                            |       |
                ----+-------+-------+----------------------- LinkZ
                    |
                    R2                            NUTY
                    |                               |
                ----+-------+-----------------------+------- LinkY
                            |
                            R1                    NUTX
                            |                       |
                ----+-------+-----------------------+------- LinkX
                    |
                   HA0                            NUT0
                    |                               |
        ------------+-------------------------------+------- Link0
                    
</PRE>
<BLOCKQUOTE>
<TABLE BORDER>
<TR>
<TD><TT>Link0</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
<TD><TT>home link</TT></TD>
</TR>
<TR>
<TD><TT>LinkX</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkY</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkZ</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HA0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a0a0</TT></TD>
<TD ROWSPAN="3"><TT>home agent</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a0a0</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a0:a0</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R1 (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102:200:ff:fe00:a4a4</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a4a4</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a4:a4</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R2 (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103:200:ff:fe00:a6a6</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a6a6</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a6:a6</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>CN0 (LinkZ)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104:200:ff:fe00:a8a8</TT></TD>
<TD ROWSPAN="3"><TT>correspondent node</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a8a8</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a8:a8</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>NUT0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD ROWSPAN="3"><TT>home address</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>NUTX (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
<TR>
<TD><TT>NUTY (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<PRE>
                    
<UL>
<LI><B><FONT SIZE="+1">TOPOLOGY-1 In the case of Virtual Home Link</FONT></B>
</UL>
                    
                            |
                            R      CN0
                            |       |
                ----+-------+-------+----------------------- LinkZ
                    |
                    R2                            NUTY
                    |                               |
                ----+-------+-----------------------+------- LinkY
                            |
                            R1                    NUTX
                            |                       |
                ----+-------+-----------------------+------- LinkX
                    |
    -------------- HA0 ----------------------------------------------
                    |                             NUT0       virtual home link
                    |                               |
        ------------+-------------------------------+------- Link0
                    
</PRE>
<BLOCKQUOTE>
<TABLE BORDER>
<TR>
<TD><TT>Link0</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
<TD><TT>virtual home link</TT></TD>
</TR>
<TR>
<TD><TT>LinkX</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkY</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkZ</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HA0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a0a0</TT></TD>
<TD ROWSPAN="3"><TT>home agent</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a0a0</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a0:a0</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R1 (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102:200:ff:fe00:a4a4</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a4a4</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a4:a4</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R2 (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103:200:ff:fe00:a6a6</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a6a6</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a6:a6</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>CN0 (LinkZ)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104:200:ff:fe00:a8a8</TT></TD>
<TD ROWSPAN="3"><TT>correspondent node</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a8a8</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a8:a8</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>NUT0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD ROWSPAN="3"><TT>egress interface</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>NUTX (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
<TR>
<TD><TT>NUTY (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>

=end html

=head1 SETUP

=begin html
<PRE>
<LI><B><FONT SIZE="+1">Common Setup-1</FONT></B>
<UL>
<LI>Reboot NUT
<LI>Enable MN function
<UL>
<LI>Turn on MN functions
</UL>
<LI>Initialize IPsec configuration
<LI>Set IPsec configuration
<UL>
<LI>This test requires following configurations.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA1_SA2.html">MN-HA0 SA1/SA2, Transport mode, Binding Update/Binding Acknowledgement</A>
<LI><A HREF="SETUP_IPsec_HA0_SA5_SA6.html">MN-HA0 SA5/SA6, Transport mode, Prefix Discovery</A>
<LI><A HREF="SETUP_IPsec_HA0_SA3_SA4.html">MN-HA0 SA3/SA4, Tunnel mode, Return Routability Signaling</A>
</UL>
<LI>This test also allow to use following configurations.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA7_SA8.html">MN-HA0 SA7/SA8, Tunnel mode, Payload Packets</A>
<LI><A HREF="SETUP_IPsec_CN0_SA.html">MN-CN0, Transport mode, ICMP</A>
</UL>
</UL>
</UL>
</PRE>

=end html

=head1 INITIALIZATION

=begin html
<PRE>
<UL>
<LI><B><FONT SIZE="+1">In the case of Real Home Link</FONT></B>
</UL>
                    
       HA0    NUT0      R1      R2     CN0
        |       |       |       |       |
        | ----> |       |       |       | 1.Router Advertisement
        |       |       |       |       |
        |     NUTX      |       |       |
        |       |       |       |       |
        |       | <---- |       |       | 2.Router Advertisement
        |       |       |       |       |
        | <---- |       |       |       | 3.Neighbor Solicitation (NUD)
        |       |       |       |       | 4.(no reply)
        |       |       |       |       |
        | <---- |       |       |       | 5.Binding Update
        | ----> |       |       |       | 6.Binding Acknowledgement
        |       |       |       |       |
                    
        1. Send Router Advertisement. (HA0 -> HA0_allnode_multi)
        2. Send Router Advertisement. (R1 -> R1_allnode_multi)
        3. Receive Neighbor Solicitation (NUD). (NUT0 -> HA0)
        4. (no reply)
        5. Receive Binding Update to HA0. (NUTX -> HA0)
        6. Send Binding Acknowledgement. (HA0 -> NUTX)
                    
<UL>
<LI><B><FONT SIZE="+1">In the case of Virtual Home Link</FONT></B>
</UL>
                    
       HA0    NUTX      R1      R2     CN0
        |       |       |       |       |
        |       | <---- |       |       | 1.Router Advertisement
        |       |       |       |       |
        | <---- |       |       |       | 2.Binding Update
        | ----> |       |       |       | 3.Binding Acknowledgement
        |       |       |       |       |
                    
        1. Send Router Advertisement. (R1 -> R1_allnode_multi)
        2. Receive Binding Update to HA0. (NUTX -> HA0)
        3. Send Binding Acknowledgement. (HA0 -> NUTX)
                    
</PRE>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
                    
       HA0    NUTX      R1      R2     CN0
        |       |       |       |       |
        | ====> | <-------------------- | 1.ICMP Echo Request
        |       |       |       |       |
        | <==== | --------------------> | 2.Home Test Init
        |       | --------------------> | 3.Care-of Test Init
        |       | <-------------------- | 4.Care-of Test
        | ====> | <-------------------- | 5.Home Test
        |       |       |       |       |
        | <==== | --------------------> | 6.ICMP Echo Reply
        |       | --------------------> | 7.Binding Update
        |       | --------------------> | 8.ICMP Echo Reply
        |       |       |       |       |
        :       :       :       :       : (wait for MAX_NONCE_LIFETIME)
        |       |       |       |       |
        | ----> |       |       |       | 9.Mobile Prefix Advertisement
        | <---- |       |       |       | 10.Mobile Prefix Solicitation
        | ----> |       |       |       | 11.Mobile Prefix Advertisement
        |       |       |       |       |
        | <---- |       |       |       | 12.Binding Update
        | ----> |       |       |       | 13.Binding Acknowledgement
        |       |       |       |       |
        | <==== | --------------------> | 14.Home Test Init
        |       | --------------------> | 15.Care-of Test Init (*1)
        |       |       |       |       |
                    
        1. Send ICMP Echo Request. (out: HA0 -> NUTX, in: CN0 -> NUT0)
        2. Receive Home Test Init. (out: NUTX -> HA0, in: NUT0 -> CN0)
        3. Receive Care-of Test Init. (NUTX -> CN0)
        4. Send Care-of Test. (CN0 -> NUTX)
        5. Send Home Test. (out: HA0 -> NUTX, in: CN0 -> NUT0)
        6. Receive ICMP Echo Reply or [8]. (out: NUTX -> HA0, in: NUT0 -> CN0)
        7. Receive Binding Update to CN0. (NUTX -> CN0)
        8. [6] or Receive ICMP Echo Reply. (NUTX -> CN0 with Home Address Option)
        9. Send Mobile Prefix Advertisement. (HA0 -> NUTX with Type2 Routing Header)
            # The Identifier is unsolicited.
       10. Receive Mobile Prefix Solicitation. (NUTX -> HA0 with Home Address Option)
       11. Send Mobile Prefix Advertisement. (HA0 -> NUTX with Type2 Routing Header)
            # The Identifier is set to the Identifier value from the Mobile Prefix Solicitation [10].
            # The Valid Lifetime and Preferred Lifetime is set to less than Binding Lifetime.
       12. Receive Binding Update to HA0. (NUTX -> HA0)
       13. Send Binding Acknowledgement. (HA0 -> NUTX)
       14. Receive Home Test Init. (out: NUTX -> HA0, in: NUT0 -> CN0)
       15. Receive Care-of Test Init. (NUTX -> CN0)
                    
    Focus Packet Format:
       <A HREF="../images/ICMP_MPA_message_format_from_HA_to_MN_ESP.gif">11. Mobile Prefix Advertisement</A>
       <A HREF="../images/Care-of_Test_Init_message_format_from_MN_to_CN.gif">15. Care-of Test Init</A>
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
 (*1) PASS: CN0 receives Care-of Test Init.
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
RFC3775 Mobility Support in IPv6
    See Section 11.6, 11.7.2, 11.4.2
</PRE>

=end html

