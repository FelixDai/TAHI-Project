#!/usr/bin/perl
#
# Copyright (C) IPv6 Promotion Council,
# NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT),
# Yokogwa Electoric Corporation, YASKAWA INFORMATION SYSTEMS Corporation
# and NTT Advanced Technology Corporation(NTT-AT) All rights reserved.
# 
# Technology Corporation.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#

#--------------------------------------------------------------#
# ENTRANCE
#--------------------------------------------------------------#
# Set the test version used for the display.
BEGIN { $V6evalTool::TestVersion = '$Name: MIPv6_4_0_5 $'; }

# Import the package.
use V6evalTool;
use mip6_mn_config;
use mip6_mn_common;
use mip6_mn_get;
use mip6_mn_send;
use mip6_mn_recv;
use mip6_mn_msg;

#--------------------------------------------------------------#
# INITIALIZATION
#--------------------------------------------------------------#
# Do the test satisfied the condition.
my @options = (
	'TEST_STATE_NORMAL',        'YES',                0,
	'TEST_FUNC_RR',             'YES',                0,
	'TEST_FUNC_RR_AS_CN',       'YES',                0,
);

# Set the special environment
$MN_CONF{ENV_CN0_SET} = 'YES';

# Initialize the state of TARGET.
Init_MN(@options);

#--------------------------------------------------------------#
# PREPARATION
#--------------------------------------------------------------#
# Prepare other local variables.
my @value;
my $sec;
my $RR_TIME2 = 180;

#--------------------------------------------------------------#
# TEST PROCEDURE
#--------------------------------------------------------------#
#--------------------------------------------------------------#
# NUT moves from Link0 to LinkX.
#--------------------------------------------------------------#
#--------------------------------------------------------------#
vLogHTML_Info("<B>1.MN(NUT0) moves from Link0 to LinkX.</B>");
#--------------------------------------------------------------#
# Send Router Advertisement. (HA0 -> HA0_allnode_multi)
# Send Router Advertisement. (R1 -> R1_allnode_multi)
# Receive Neighbor Solicitation (NUD). (NUT0 -> HA0)
# (no reply)
#   Wait during a maximum of 3 seconds(RFC2461).
# Receive Binding Update to HA0. (NUTX -> HA0)
# Send Binding Acknowledgement. (HA0 -> NUTX)
%packet = vRecv_to_move_from_Link0_to_LinkX_w_all_SA($IF0);
if ($packet{status} != 0) {
	$failcount++;
	goto TERM;
}

#--------------------------------------------------------------#
vLogHTML_Info("<B>2.NUT Return Routability and Binding Update to CN0 at LinkX.</B>");
#--------------------------------------------------------------#
# Send ICMP Echo Request. (out: HA0 -> NUTX, in: CN0 -> NUT0)
@value = ('ECHO_PAYLOAD', '{1,2,3,4,5,6,7,8}');
vSend_echorequest($IF0, 'echorequest_cn0ga_nuthga_tnl_ha0_nutx', 0, @value);

# Receive Home Test Init. (out: NUTX -> HA0, in: NUT0 -> CN0)
# Receive Care-of Test Init. (NUTX -> CN0)
# Send Care-of Test. (CN0 -> NUTX)
# Send Home Test. (out: HA0 -> NUTX, in: CN0 -> NUT0)
# Receive ICMP Echo Reply. (out: NUTX -> HA0, in: NUT0 -> CN0)
# Receive Binding Update to CN0. (NUTX -> CN0)
# Receive ICMP Echo Reply. (NUTX -> CN0 with Home Address Option)
%packet_bu_cn = vRecv_at_LinkX($IF0, $RR_TIME,
	'bu_nutxga_cn0ga_hoa_nuthga',
	'bu_nutxga_cn0ga_hoa_nuthga_coa_nutx');
if ($packet_bu_cn{status} != 0) {
	vLogHTML_Fail("FAIL: CN0 does not receive Binding Update. $RR_TIME [sec]");
	$failcount++;
	goto TERM;
}

# Send Binding Acknowledgement. (CN0 -> NUTX)
vSend_ba_cn($IF0, 'ba_cn0ga_nutxga_rh2_nuthga', \%packet_bu_cn);

my %value_bu_cn = get_value_of_bu_cn(0, \%packet_bu_cn);
if ($value_bu_cn{Lifetime} == 0) {
	vLogHTML_Fail("FAIL: CN0 receives Binding Update(lifetime 0).");
	$failcount ++;
	goto TERM;
}

#--------------------------------------------------------------#
vLogHTML_Info("<B>CN0 sends ICMP Echo Request with Type2 Routing Header.</B>");
#--------------------------------------------------------------#
# Send ICMP Echo Request. (CN0 -> NUTX with Type2 Routing Header)
@value = ('ECHO_PAYLOAD', '{1,2,3,4,5,6,7,8}');
vSend_echorequest($IF0, 'echorequest_cn0ga_nutxga_rh2_nuthga', 0, @value);

# Receive ICMP Echo Reply. (NUTX -> CN0 with Home Address Option)
%packet_echoreply = vRecv_at_LinkX($IF0, $ECHO_TIME, 'echoreply_nutxga_cn0ga_hoa_nuthga');
if ($packet_echoreply{status} != 0) {
	vLogHTML_Fail("FAIL: CN0 does not receive ICMP Echo Reply with Home Address Option. $ECHO_TIME [sec]");
	$failcount ++;
	goto TERM;
}

#--------------------------------------------------------------#
vLogHTML_Info("<B>3.CN0 moves from LinkZ to LinkY.</B>");
#--------------------------------------------------------------#
# The following packet does not reach a target.
# It is the contents of a simulation inside a tester.
#
# interval
vRecv_at_LinkX($IF0, $MinDelayBetweenRAs);

#--------------------------------------------------------------#
vLogHTML_Info("<B>4.CN0Y Return Routability and Binding Update to NUTX at LinkY.</B>");
#--------------------------------------------------------------#
# Send Home Test Init. (out: HA0 -> NUTX, in: CN0 -> NUT0)
# Send Care-of Test Init. (out: HA0 -> NUTX, in: CN0Y -> NUT0)
# Receive Care-of Test. (out: NUTX -> HA0, in: NUT0 -> CN0Y)
# Receive Home Test. (out: NUTX -> HA0, in: NUT0 -> CN0)
# Send Binding Update. (out: HA0 -> NUTX, in: CN0Y -> NUT0)
#   The Acknowledge(A) bit is set to ON.
%packet_bu_cn = CorrespondentRegistration_to_mn_at_LinkX($IF0, $RR_TIME2, $MAX_RR_BINDING_LIFETIME, 0);
if ($packet_bu_cn{status} != 0) {
	vLogHTML_Fail("FAIL: CN0Y does not receive Home Test or Care-of Test.");
	$failcount++;
	goto TERM;
}

# Receive Binding Acknowledgement. (out: NUTX->HA0, in: NUT0->CN0Y)
%packet_ba_to_cn = vRecv_at_LinkX($IF0, $RR_TIME, 'ba_nuthga_cn0yga_rh2_cn0ga_tnl_nutx_ha0');
if ($packet_ba_to_cn{status} != 0) {
	vLogHTML_Fail("FAIL: CN0Y does not receive Binding Acknowledgement by tunneling. $RR_TIME [sec]");
	$failcount++;
	goto TERM;
}

#--------------------------------------------------------------#
vLogHTML_Info("<B>CN0 sends ICMP Echo Request with Type2 Routing Header and Home Address Option.</B>");
#--------------------------------------------------------------#
# Send ICMP Echo Request. (CN0Y -> NUTX with Type2 Routing Header and Home Address Option)
@value = ('ECHO_PAYLOAD', '{1,2,3,4,5,6,7,8}');
vSend_echorequest($IF0, 'echorequest_cn0yga_nutxga_rh2_nuthga_hoa_cn0ga', 0, @value);

# Receive ICMP Echo Reply. (NUTX -> CN0Y with Type2 Routing Header and Home Address Option)
%packet_echoreply = vRecv_at_LinkX($IF0, $ECHO_TIME, 'echoreply_nutxga_cn0yga_rh2_cn0ga_hoa_nuthga');
if ($packet_echoreply{status} != 0) {
	vLogHTML_Fail("FAIL: CN0Y does not receive ICMP Echo Reply with Type2 Routing Header and Home Address Option.");
	$failcount ++;
	goto TERM;
}

#--------------------------------------------------------------#
# NUT moves from LinkX to LinkY.
#--------------------------------------------------------------#
#--------------------------------------------------------------#
vLogHTML_Info("<B>5.NUTX(NUT0) moves from LinkX to LinkY.</B>");
#--------------------------------------------------------------#
# Send Router Advertisement. (R1 -> R1_allnode_multi)
# Send Router Advertisement. (R2 -> R2_allnode_multi)
# Receive Neighbor Solicitation (NUD). (NUTX -> R1)
# (no reply)
#   Wait during a maximum of 3 seconds(RFC2461).
# Receive Binding Update to HA0. (NUTY -> HA0)
# Send Binding Acknowledgement. (HA0 -> NUTY)
%packet = vRecv_to_move_from_LinkX_to_LinkY($IF0);
if ($packet{status} != 0) {
	$failcount ++;
	goto TERM;
}

#--------------------------------------------------------------#
vLogHTML_Info("<B>6.NUT Return Routability and Binding Update to CN0Y at LinkY.</B>");
#--------------------------------------------------------------#
# Send ICMP Echo Request. (out: HA0 -> NUTY, in: CN0Y -> NUT0 with Home Address Option)
@value = ('ECHO_PAYLOAD', '{1,2,3,4,5,6,7,8}');
vSend_echorequest($IF0, 'echorequest_cn0yga_nuthga_hoa_cn0ga_tnl_ha0_nuty', 0, @value);

# Receive Home Test Init. (out: NUTY -> HA0, in: NUT0 -> CN0)
# Receive Care-of Test Init. (NUTY -> CN0)
# Send Care-of Test. (CN0 -> NUTY)
# Send Home Test. (out: HA0 -> NUTY, in: CN0 -> NUT0)
# Receive ICMP Echo Reply. (out: NUTY -> HA0, in: NUT0 -> CN0Y with Type2 Routing Header)
# Receive Binding Update to CN0. (NUTY -> CN0)
# Receive ICMP Echo Reply. (NUTY -> CN0Y with Type2 Routing Header and Home Address Option)
%packet_bu_cn = vRecv_at_LinkY($IF0, $RR_TIME,
	'bu_nutyga_cn0ga_hoa_nuthga',
	'bu_nutyga_cn0ga_hoa_nuthga_coa_nuty');
if ($packet_bu_cn{status} != 0) {
	vLogHTML_Fail("FAIL: CN0Y does not receive Re-Binding Update. $RR_TIME [sec]");
	$failcount++;
	goto TERM;
}

# Send Binding Acknowledgement. (CN0 -> NUTX)
vSend_ba_cn($IF0, 'ba_cn0ga_nutyga_rh2_nuthga', \%packet_bu_cn);

my %value_bu_cn = get_value_of_bu_cn(0, \%packet_bu_cn);
if ($value_bu_cn{Lifetime} == 0) {
	vLogHTML_Fail("FAIL: CN0Y receives Binding Update(lifetime 0).");
	$failcount ++;
	goto TERM;
}

#--------------------------------------------------------------#
vLogHTML_Info("<B>CN0 sends ICMP Echo Request with Type2 Routing Header and Home Address Option.</B>");
#--------------------------------------------------------------#
# Send ICMP Echo Request. (CN0Y -> NUTY with Type2 Routing Header and Home Address Option)
@value = ('ECHO_PAYLOAD', '{1,2,3,4,5,6,7,8}');
vSend_echorequest($IF0, 'echorequest_cn0yga_nutyga_rh2_nuthga_hoa_cn0ga', 0, @value);

# Receive ICMP Echo Reply. (NUTY -> CN0Y with Type2 Routing Header and Home Address Option)
%packet_echoreply = vRecv_at_LinkY($IF0, $ECHO_TIME, 'echoreply_nutyga_cn0yga_rh2_cn0ga_hoa_nuthga');
if ($packet_echoreply{status} != 0) {
	vLogHTML_Fail("FAIL: CN0Y does not receive ICMP Echo Reply with Type2 Routing Header and Home Address Option.");
	$failcount ++;
	goto TERM;
}

#--------------------------------------------------------------#
vLogHTML_Info("<B>7.CN0Y Return Routability and Binding Update to NUTY at LinkY.</B>");
#--------------------------------------------------------------#
# Send Home Test Init. (out: HA0 -> NUTY, in: CN0 -> NUT0)
# Send Care-of Test Init. (out: HA0 -> NUTY, in: CN0Y -> NUT0)
# Receive Care-of Test. (out: NUTY -> HA0, in: NUT0 -> CN0Y)
# Receive Home Test. (out: NUTY -> HA0, in: NUT0 -> CN0)
# Send Binding Update. (out: HA0 -> NUTY, in: CN0Y -> NUT0)
#   The Acknowledge(A) bit is set to ON.
%packet_bu_cn = CorrespondentRegistration_to_mn_at_LinkY($IF0, $RR_TIME2, $MAX_RR_BINDING_LIFETIME, 0);
if ($packet_bu_cn{status} != 0) {
	vLogHTML_Fail("FAIL: CN0Y does not receive Home Test or Care-of Test.");
	$failcount++;
	goto TERM;
}

# Receive Binding Acknowledgement. (out: NUTY -> HA0, in: NUT0 -> CN0Y)
#   Type2 Routing Header is included.
%packet_ba_to_cn = vRecv_at_LinkY($IF0, $RR_TIME, 'ba_nuthga_cn0yga_rh2_cn0ga_tnl_nuty_ha0');
if ($packet_ba_to_cn{status} != 0) {
	vLogHTML_Fail("FAIL: CN0Y does not receive Binding Acknowledgement by tunneling. $RR_TIME [sec]");
	$failcount++;
	goto TERM;
}

#--------------------------------------------------------------#
vLogHTML_Info("<B>CN0 sends ICMP Echo Request with Type2 Routing Header and Home Address Option.</B>");
#--------------------------------------------------------------#
# Send ICMP Echo Request. (CN0Y -> NUTY with Type2 Routing Header and Home Address Option)
@value = ('ECHO_PAYLOAD', '{1,2,3,4,5,6,7,8}');
vSend_echorequest($IF0, 'echorequest_cn0yga_nutyga_rh2_nuthga_hoa_cn0ga', 0, @value);

# Receive ICMP Echo Reply. (NUTY -> CN0Y with Type2 Routing Header and Home Address Option)
%packet_echoreply = vRecv_at_LinkY($IF0, $ECHO_TIME, 'echoreply_nutyga_cn0yga_rh2_cn0ga_hoa_nuthga');
if ($packet_echoreply{status} != 0) {
	vLogHTML_Fail("FAIL: CN0Y does not receive ICMP Echo Reply with Type2 Routing Header and Home Address Option.");
	$failcount ++;
	goto TERM;
}

#--------------------------------------------------------------#
# NUT moves from LinkY to Link0.
#--------------------------------------------------------------#
#--------------------------------------------------------------#
vLogHTML_Info("<B>8.NUT returns to its Home Link(moves from LinkY to Link0).</B>");
#--------------------------------------------------------------#
# Send Router Advertisement. (R2 -> R2_allnode_multi)
# Send Router Advertisement. (HA0 -> HA0_allnode_multi)
# Receive Neighbor Solicitation (NUD). (NUTY -> R2)
# (no reply)
#   Wait during a maximum of 3 seconds(RFC2461).
# Receive Binding Update to HA0. (NUT0 -> HA0)
# Send Binding Acknowledgement. (HA0 -> NUT0)
# Receive Neighbor Advertisement. (NUT0 -> NUT0_allnode_multi) 
%packet = vRecv_to_move_from_LinkY_to_Link0($IF0);
if ($packet{status} != 0) {
	$failcount ++;
	goto TERM;
}

#--------------------------------------------------------------#
# JUDGEMENT
#--------------------------------------------------------------#
if ($failcount == 0) {
	vLogHTML_Pass("(*1) PASS: Transmission and reception of all messages were completed.");
}

TERM:
#--------------------------------------------------------------#
# TERMINATION
#--------------------------------------------------------------#
# Terminate the state of TARGET.
Term_MN($IF0, 1);

################################################################
__END__


=head1 NAME

=begin html
  MN-0-0-0-3-001 - Mobile Node Operation-3

=end html

=head1 TARGET

=begin html
<PRE>
Host
</PRE>

=end html

=head1 REQUIREMENT of TEST

=begin html
<PRE>
    - Function of Return Routability: YES
    - Function of Mobile to Mobile: YES
                    
</PRE>

=end html

=head1 TOPOLOGY

=begin html
<PRE>
<UL>
<LI><B><FONT SIZE="+1">TOPOLOGY-4 In the case of Real Home Link</FONT></B>
</UL>
                    
                            |
                           HAcn    CN0            NUTZ
                            |       |               |
                ----+-------+-------+---------------+------- LinkZ
                    |
                    R2             CN0Y           NUTY
                    |               |               |
                ----+-------+-------+---------------+------- LinkY
                            |
                            R1     CN0X           NUTX
                            |       |               |
                ----+-------+-------+---------------+------- LinkX
                    |
                   HA0             CN00           NUT0
                    |               |               |
        ------------+---------------+---------------+------- Link0
                    
</PRE>
<BLOCKQUOTE>
<TABLE BORDER>
<TR>
<TD><TT>Link0</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
<TD><TT>home link</TT></TD>
</TR>
<TR>
<TD><TT>LinkX</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkY</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
<TABLE BORDER>
<TR>
<TD><TT>Link0</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
<TD><TT>home link</TT></TD>
</TR>
<TR>
<TD><TT>LinkX</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkY</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkZ</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104::/64</TT></TD>
<TD><TT>CN0 home link</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HA0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a0a0</TT></TD>
<TD ROWSPAN="3"><TT>home agent</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a0a0</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a0:a0</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R1 (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102:200:ff:fe00:a4a4</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a4a4</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a4:a4</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R2 (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103:200:ff:fe00:a6a6</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a6a6</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a6:a6</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>CN0 (LinkZ)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104:200:ff:fe00:a8a8</TT></TD>
<TD ROWSPAN="3"><TT>correspondent node</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a8a8</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a8:a8</TT></TD>
</TR>
<TR>
<TD><TT>CN0Y (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103:200:ff:fe00:a8a8</TT></TD>
<TD><TT>CN0 care-of address</TT></TD>
</TR>
<TR>
<TD><TT>CN0X (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102:200:ff:fe00:a8a8</TT></TD>
<TD><TT>CN0 care-of address</TT></TD>
</TR>
<TR>
<TD><TT>CN00 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a8a8</TT></TD>
<TD><TT>CN0 care-of address</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HAcn (LinkZ)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104:200:ff:fe00:aaaa</TT></TD>
<TD ROWSPAN="3"><TT>CN0 home agent</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:aaaa</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:aa:aa</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>NUT0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD ROWSPAN="3"><TT>home address</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>NUTX (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
<TR>
<TD><TT>NUTY (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
<TR>
<TD><TT>NUTZ (LinkZ)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<PRE>
                    
<UL>
<LI><B><FONT SIZE="+1">TOPOLOGY-4 In the case of Virtual Home Link</FONT></B>
</UL>
                    
                            |
                           HAcn    CN0            NUTZ
                            |       |               |
                ----+-------+-------+---------------+------- LinkZ
                    |
                    R2             CN0Y           NUTY
                    |               |               |
                ----+-------+-------+---------------+------- LinkY
                            |
                            R1     CN0X           NUTX
                            |       |               |
                ----+-------+-------+---------------+------- LinkX
                    |
    -------------- HA0 ----------------------------------------------
                    |              CN00           NUT0       virtual home link
                    |               |               |
        ------------+---------------+---------------+------- Link0
                    
</PRE>
<BLOCKQUOTE>
<TABLE BORDER>
<TR>
<TD><TT>Link0</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
<TD><TT>virtual home link</TT></TD>
</TR>
<TR>
<TD><TT>LinkX</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkY</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkZ</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104::/64</TT></TD>
<TD><TT>CN0 home link</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HA0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a0a0</TT></TD>
<TD ROWSPAN="3"><TT>home agent</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a0a0</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a0:a0</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R1 (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102:200:ff:fe00:a4a4</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a4a4</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a4:a4</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R2 (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103:200:ff:fe00:a6a6</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a6a6</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a6:a6</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>CN0 (LinkZ)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104:200:ff:fe00:a8a8</TT></TD>
<TD ROWSPAN="3"><TT>correspondent node</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a8a8</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a8:a8</TT></TD>
</TR>
<TR>
<TD><TT>CN0Y (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103:200:ff:fe00:a8a8</TT></TD>
<TD><TT>CN0 care-of address</TT></TD>
</TR>
<TR>
<TD><TT>CN0X (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102:200:ff:fe00:a8a8</TT></TD>
<TD><TT>CN0 care-of address</TT></TD>
</TR>
<TR>
<TD><TT>CN00 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a8a8</TT></TD>
<TD><TT>CN0 care-of address</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HAcn (LinkZ)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104:200:ff:fe00:aaaa</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:aaaa</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:aa:aa</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>NUT0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD ROWSPAN="3"><TT>home address</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>NUTX (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
<TR>
<TD><TT>NUTY (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
<TR>
<TD><TT>NUTZ (LinkZ)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>

=end html

=head1 SETUP

=begin html
<PRE>
<LI><B><FONT SIZE="+1">Common Setup-1</FONT></B>
<UL>
<LI>Reboot NUT
<LI>Enable MN function
<UL>
<LI>Turn on MN functions
</UL>
<LI>Initialize IPsec configuration
<LI>Set IPsec configuration
<UL>
<LI>This test requires following configurations.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA1_SA2.html">MN-HA0 SA1/SA2, Transport mode, Binding Update/Binding Acknowledgement</A>
<LI><A HREF="SETUP_IPsec_HA0_SA3_SA4.html">MN-HA0 SA3/SA4, Tunnel mode, Return Routability Signaling</A>
</UL>
<LI>This test requires following configurations, If a related message is used.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA5_SA6.html">MN-HA0 SA5/SA6, Transport mode, Prefix Discovery</A>
</UL>
<LI>This test also allow to use following configurations.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA7_SA8.html">MN-HA0 SA7/SA8, Tunnel mode, Payload Packets</A>
<LI><A HREF="SETUP_IPsec_CN0_SA.html">MN-CN0, Transport mode, ICMP</A>
</UL>
</UL>
</UL>
</PRE>

=end html

=head1 INITIALIZATION

=begin html
<PRE>
<UL>
<LI><B><FONT SIZE="+1">In the case of Real Home Link</FONT></B>
</UL>
                    
       HA0    NUT0      R1      R2     CN0
        |       |       |       |       |
        | ----> |       |       |       | 1.Router Advertisement
        |       |       |       |       |
        |     NUTX      |       |       |
        |       |       |       |       |
        |       | <---- |       |       | 2.Router Advertisement
        |       |       |       |       |
        | <---- |       |       |       | 3.Neighbor Solicitation (NUD)
        |       |       |       |       | 4.(no reply)
        |       |       |       |       |
        | <---- |       |       |       | 5.Binding Update
        | ----> |       |       |       | 6.Binding Acknowledgement
        |       |       |       |       |
                    
        1. Send Router Advertisement. (HA0 -> HA0_allnode_multi)
        2. Send Router Advertisement. (R1 -> R1_allnode_multi)
        3. Receive Neighbor Solicitation (NUD). (NUT0 -> HA0)
        4. (no reply)
        5. Receive Binding Update to HA0. (NUTX -> HA0)
        6. Send Binding Acknowledgement. (HA0 -> NUTX)
                    
<UL>
<LI><B><FONT SIZE="+1">In the case of Virtual Home Link</FONT></B>
</UL>
                    
       HA0    NUTX      R1      R2     CN0
        |       |       |       |       |
        |       | <---- |       |       | 1.Router Advertisement
        |       |       |       |       |
        | <---- |       |       |       | 2.Binding Update
        | ----> |       |       |       | 3.Binding Acknowledgement
        |       |       |       |       |
                    
        1. Send Router Advertisement. (R1 -> R1_allnode_multi)
        2. Receive Binding Update to HA0. (NUTX -> HA0)
        3. Send Binding Acknowledgement. (HA0 -> NUTX)
                    
</PRE>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
                    
 (1) Return Routability and Binding Update to CN0
                    
       HA0    NUTX      R1      R2     CN0     HAcn
        |       |       |       |       |       |
        | ====> | <-------------------- |       | 1.ICMP Echo Request
        |       |       |       |       |       |
        | <==== | --------------------> |       | 2.Home Test Init
        |       | --------------------> |       | 3.Care-of Test Init
        |       | <-------------------- |       | 4.Care-of Test
        | ====> | <-------------------- |       | 5.Home Test
        |       |       |       |       |       |
        | <==== | --------------------> |       | 6.ICMP Echo Reply
        |       | --------------------> |       | 7.Binding Update
        |       | --------------------> |       | 8.ICMP Echo Reply
        |       |       |       |       |       |
        |       | <-------------------- |       | 9.ICMP Echo Request
        |       | --------------------> |       | 10.ICMP Echo Reply
        |       |       |       |       |       |
                    
 (2) CN0 moves from LinkZ to LinkY. 
# The following packet does not reach a target.
# It is the contents of a simulation inside a tester.
#
#      HA0    NUTX      R1      R2     CN0     HAcn
#       |       |       |       |      CN0Y     |
#       |       |       |       |       |       |
#       |       |       |       |       | ----> | 11-1.Binding Update
#       |       |       |       |       | <---- | 11-2.Binding Acknowledgement
#       |       |       |       |       |       |
                    
 (3) Return Routability and Binding Update from CN0Y
                    
       HA0    NUTX      R1      R2     CN0Y    HAcn
        |       |       |       |       |       |
        | ====> | <-------------------- | ====> | 12.Home Test Init
        | ====> | <-------------------- |       | 13.Care-of Test Init
        | <==== | --------------------> |       | 14.Care-of Test
        | <==== | --------------------> | <==== | 15.Home Test
        |       |       |       |       |       |
        | ====> | <-------------------- |       | 16.Binding Update
        | <==== | --------------------> |       | 17.Binding Acknowledgement
        |       |       |       |       |       |
        |       | <-------------------- |       | 18.ICMP Echo Request
        |       | --------------------> |       | 19.ICMP Echo Reply
        |       |       |       |       |       |
                    
 (4) MN(NUT#) moves from LinkX to LinkY.
                    
       HA0    NUTY      R1      R2     CN0Y    HAcn
        |       |       |       |       |       |
        |       | <------------ |       |       | 20.Router Advertisement
        |       |       |       |       |       |
        |       | ----> |       |       |       | 21.Neighbor Solicitation (NUD)
        |       |       |       |       |       | 22.(no reply)
        |       |       |       |       |       |
        | <---- |       |       |       |       | 23.Binding Update
        | ----> |       |       |       |       | 24.Binding Acknowledgement
        |       |       |       |       |       |
                    
 (5) Return Routability and Binding Update to CN0Y
                    
       HA0    NUTY      R1      R2     CN0Y    HAcn
        |       |       |       |       |       |
        | ====> | <-------------------- |       | 25.ICMP Echo Request
        |       |       |       |       |       |
        | <==== | --------------------> | <==== | 26.Home Test Init
        |       | --------------------> | <==== | 27.Care-of Test Init
        |       | <-------------------- | ====> | 28.Care-of Test
        | ====> | <-------------------- | ====> | 29.Home Test
        |       |       |       |       |       |
        | <==== | --------------------> |       | 30.ICMP Echo Reply
        |       | --------------------> | <==== | 31.Binding Update
        |       | --------------------> |       | 32.ICMP Echo Reply
        |       |       |       |       |       |
        |       | <-------------------- |       | 33.ICMP Echo Request
        |       | --------------------> |       | 34.ICMP Echo Reply
        |       |       |       |       |       |
                    
 (6) Return Routability and Binding Update from CN0Y
                    
       HA0    NUTY      R1      R2     CN0Y    HAcn
        |       |       |       |       |       |
        | ====> | <-------------------- | ====> | 35.Home Test Init
        | ====> | <-------------------- |       | 36.Care-of Test Init
        | <==== | --------------------> |       | 37.Care-of Test
        | <==== | --------------------> | <==== | 38.Home Test
        |       |       |       |       |       |
        | ====> | <-------------------- |       | 39.Binding Update
        | <==== | --------------------> |       | 40.Binding Acknowledgement
        |       |       |       |       |       |
        |       | <-------------------- |       | 41.ICMP Echo Request
        |       | --------------------> |       | 42.ICMP Echo Reply
        |       |       |       |       |       |
                    
 (1) Return Routability and Binding Update
        1. Send ICMP Echo Request. (out: HA0 -> NUTX, in: CN0 -> NUT0)
        2. Receive Home Test Init. (out: NUTX -> HA0, in: NUT0 -> CN0)
        3. Receive Care-of Test Init. (NUTX -> CN0)
        4. Send Care-of Test. (CN0 -> NUTX)
        5. Send Home Test. (out: HA0 -> NUTX, in: CN0 -> NUT0)
        6. Receive ICMP Echo Reply or [8]. (out: NUTX -> HA0, in: NUT0 -> CN0)
        7. Receive Binding Update to CN0. (NUTX -> CN0)
        8. [6] or Receive ICMP Echo Reply. (NUTX -> CN0 with Home Address Option)
        9. Send ICMP Echo Request. (CN0 -> NUTX with Type2 Routing Header)
       10. Receive ICMP Echo Reply. (NUTX -> CN0 with Home Address Option)
                    
 (2) CN0 moves from LinkZ to LinkY.
# The following packet does not reach a target.
# It is the contents of a simulation inside a tester.
#
#      11-1. Receive Binding Update to HAcn. (CN0Y -> HAcn)
#      11-2. Send Binding Acknowledgement. (HAcn -> CN0Y)
                    
 (3) Return Routability and Binding Update from CNOY
       12. Send Home Test Init. (out: HA0 -> NUTX, in: CN0 -> NUT0)
       13. Send Care-of Test Init. (out: HA0 -> NUTX, in: CN0Y -> NUT0)
       14. Receive Care-of Test. (out: NUTX -> HA0, in: NUT0 -> CN0Y)
       15. Receive Home Test. (out: NUTX -> HA0, in: NUT0 -> CN0)
       16. Send Binding Update. (out: HA0 -> NUTX, in: CN0Y -> NUT0)
            # The Acknowledge(A) bit is set to ON.
       17. Receive Binding Acknowledgement. (out: NUTX -> HA0, in: NUT0 -> CN0Y)
       18. Send ICMP Echo Request. (CN0Y -> NUTX with Type2 Routing Header and Home Address Option)
       19. Receive ICMP Echo Reply. (NUTX -> CN0Y with Type2 Routing Header and Home Address Option)
                    
 (4) MN(NUT#) moves from LinkX to LinkY.
       20. Send Router Advertisement. (R2 -> R2_allnode_multi)
       21. Receive Neighbor Solicitation (NUD). (NUTX -> R1)
       22. (no reply)
            # Wait during a maximum of 3 seconds(RFC2461).
            # For "a maximum of 3 seconds", the following values of  
            # are considered as reference(RFC2461).
            #    "RetransTimer(1000msec) * MAX_MULTICAST_SOLICIT(3 transmissions)"
       23. Receive Binding Update to HA0. (NUTY -> HA0)
       24. Send Binding Acknowledgement. (HA0 -> NUTY)
                    
 (5) Return Routability and Binding Update
       25. Send ICMP Echo Request. (out: HA0 -> NUTY, in: CN0Y -> NUT0 with Home Address Option)
       26. Receive Home Test Init. (out: NUTY -> HA0, in: NUT0 -> CN0)
       27. Receive Care-of Test Init. (NUTY -> CN0)
       28. Send Care-of Test. (CN0 -> NUTY)
       29. Send Home Test. (out: HA0 -> NUTY, in: CN0 -> NUT0)
       30. Receive ICMP Echo Reply or [32]. (out: NUTY -> HA0, in: NUT0 -> CN0Y with Type2 Routing Header)
       31. Receive Binding Update to CN0. (NUTY -> CN0)
       32. [30] or Receive ICMP Echo Reply. (NUTY -> CN0Y with Type2 Routing Header and Home Address Option)
       33. Send ICMP Echo Request. (CN0Y -> NUTY with Type2 Routing Header and Home Address Option)
       34. Receive ICMP Echo Reply. (NUTY -> CN0Y with Type2 Routing Header and Home Address Option)
                    
 (6) Return Routability and Binding Update from CNOY
       35. Send Home Test Init. (out: HA0 -> NUTY, in: CN0 -> NUT0)
       36. Send Care-of Test Init. (out: HA0 -> NUTY, in: CN0Y -> NUT0)
       37. Receive Care-of Test. (out: NUTY -> HA0, in: NUT0 -> CN0Y)
       38. Receive Home Test. (out: NUTY -> HA0, in: NUT0 -> CN0)
       39. Send Binding Update. (out: HA0 -> NUTY, in: CN0Y -> NUT0)
            # The Acknowledge(A) bit is set to ON.
       40. Receive Binding Acknowledgement. (out: NUTY -> HA0, in: NUT0 -> CN0Y)
       41. Send ICMP Echo Request. (CN0Y -> NUTY with Type2 Routing Header and Home Address Option)
       42. Receive ICMP Echo Reply. (NUTY -> CN0Y with Type2 Routing Header and Home Address Option)
                    
<UL>
<LI><B><FONT SIZE="+1">In the case of Real Home Link</FONT></B>
</UL>
                    
 (7) MN(NUT#) returns to its Home Link(moves from LinkY to Link0).
                    
       HA0    NUT0      R1      R2     CN0Y    HAcn
        |       |       |       |       |       |
        | ----> |       |       |       |       | 43.Router Advertisement
        |       |       |       |       |       |
        |       | ----->|       |       |       | 44.Neighbor Solicitation (NUD)
        |       |       |       |       |       | 45.(no reply:3seconds)
        |       |       |       |       |       |
        | <---- |       |       |       |       | 46.Binding Update
        | ----> |       |       |       |       | 47.Binding Acknowledgement
        |       |       |       |       |       |
        | <---- |       |       |       |       | 48.Neighbor Advertisement
        |       |       |       |       |       |
                    
 (7) MN(NUT#) returns to its Home Link(moves from LinkX to Link0).
       43. Send Router Advertisement. (HA0 -> HA0_allnode_multi)
       44. Receive Neighbor Solicitation (NUD). (NUTX -> R2)
       45. (no reply)
            # Wait during a maximum of 3 seconds(RFC2461).
       46. Receive Binding Update to HA0. (NUT0 -> HA0)
       47. Send Binding Acknowledgement. (HA0 -> NUT0)
       48. Receive Neighbor Advertisement. (NUT0 -> NUT0_allnode_multi) 
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
 (*1) PASS: Transmission and reception of all messages were completed.
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
RFC3775 Mobility Support in IPv6
    See Section 9, 11
</PRE>

=end html

