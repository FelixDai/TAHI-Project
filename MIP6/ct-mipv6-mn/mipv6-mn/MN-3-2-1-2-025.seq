#!/usr/bin/perl
#
# Copyright (C) IPv6 Promotion Council,
# NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT),
# Yokogwa Electoric Corporation, YASKAWA INFORMATION SYSTEMS Corporation
# and NTT Advanced Technology Corporation(NTT-AT) All rights reserved.
# 
# Technology Corporation.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#

#--------------------------------------------------------------#
# ENTRANCE
#--------------------------------------------------------------#
# Set the test version used for the display.
BEGIN { $V6evalTool::TestVersion = '$Name: MIPv6_4_0_5 $'; }

# Import the package.
use V6evalTool;
use mip6_mn_config;
use mip6_mn_common;
use mip6_mn_get;
use mip6_mn_send;
use mip6_mn_recv;
use mip6_mn_msg;

#--------------------------------------------------------------#
# INITIALIZATION
#--------------------------------------------------------------#
# Do the test satisfied the condition.
my @options = (
	'TEST_STATE_ABNORMAL',                    'YES',                0,
	'TEST_FUNC_RR',                           'YES',                0,
	'FUNC_DETAIL_MN_BU_TO_CN_A',              'YES',                0,
	'FUNC_DETAIL_MN_BU_TO_CN_RETRANSMISSION', 'YES',                0,
	'FUNC_DETAIL_MN_BU_TO_CN_RETRANSMISSION', 'NO',                 0,
);

# Set the special environment
$MN_CONF{ENV_CN0_SET} = 'YES';

# Initialize the state of TARGET.
Init_MN(@options);

#--------------------------------------------------------------#
# PREPARATION
#--------------------------------------------------------------#
# Prepare other local variables.
my @value;
my $sec;

#--------------------------------------------------------------#
# TEST PROCEDURE
#--------------------------------------------------------------#
#--------------------------------------------------------------#
# NUT moves from Link0 to LinkX.
#--------------------------------------------------------------#
# Receive Binding Update. (NUTX -> HA0)
# Send Binding Acknowledgement. (HA0 -> NUTX)
%packet = vRecv_to_move_from_Link0_to_LinkX_w_all_SA($IF0);
if ($packet{status} != 0) {
	$initcount ++;
	goto TERM;
}

#--------------------------------------------------------------#
vLogHTML_Info("<B>CN0 sends ICMP Echo Request by tunneling.</B>");
#--------------------------------------------------------------#
# Send ICMP Echo Request. (out: HA0 -> NUTX, in: CN0 -> NUT0)
vSend_echorequest($IF0, 'echorequest_cn0ga_nuthga_tnl_ha0_nutx', 0);

# Receive Home Test Init. (out: NUTX -> HA0, in: NUT0 -> CN0)
# Receive Care-of Test Init. (NUTX -> CN0)
# Send Care-of Test. (CN0 -> NUTX)
# Send Home Test. (out: HA0 -> NUTX, in: CN0 -> NUT0)
# Send Binding Acknowledgement. (CN0 -> NUTX)
#   he Binding Authorization Data mobility option be not the last option
my $num = 0;
$now_time = time;
$end_time = $now_time + $RR_TIME;
while ($now_time < $end_time) {

	$sec = $end_time - $now_time;
	%packet = vRecv_at_LinkX($IF0, $sec,
		'bu_nutxga_cn0ga_hoa_nuthga',
		'bu_nutxga_cn0ga_hoa_nuthga_coa_nutx',
		);
	$now_time = time;

	if (($packet{recvFrame} eq 'bu_nutxga_cn0ga_hoa_nuthga') ||
	    ($packet{recvFrame} eq 'bu_nutxga_cn0ga_hoa_nuthga_coa_nutx')) {
		#--------------------------------------------------------------#
		vLogHTML_Info("<B>CN0 sends Binding Acknowledgement to NUTX, Invalid Authorization Data option.</B>");
		#--------------------------------------------------------------#
		vSend_ba_cn($IF0, 'ba_cn0ga_nutxga_rh2_nuthga_il_loction_auth', \%packet);

		%{"packet_bu_cn_$num"} = %packet;
		$num ++;
	}
}
if ($num == 0) {
	vLogHTML_Fail("INIT FAIL: CN0 does not receive Binding Update.");
	$initcount ++;
	goto TERM;
}

#--------------------------------------------------------------#
vLogHTML_Info("<B>CN0 sends ICMP Echo Request with Type2 Routing Header.</B>");
#--------------------------------------------------------------#
# Send ICMP Echo Request. (out: HA0 -> NUTX, in: CN0 -> NUT0)
$id_no = 101;
@value = ('ECHO_IDENTIFIER', $id_no);
vSend_echorequest($IF0, 'echorequest_cn0ga_nutxga_rh2_nuthga', 0, @value);

# Receive ICMP Echo Reply. (out: NUTX -> HA0, in: NUT0 -> CN0)
$now_time = time;
$end_time = $now_time + $ECHO_TIME;
while ($now_time < $end_time) {

	$sec = $end_time - $now_time;
	%packet = vRecv_at_LinkX($IF0, $sec,
		'bu_nutxga_cn0ga_hoa_nuthga',
		'bu_nutxga_cn0ga_hoa_nuthga_coa_nutx',
		'echoreply_nuthga_cn0ga_tnl_nutx_ha0',
		'echoreply_nutxga_cn0ga_hoa_nuthga'
		);
	$now_time = time;

	if (($packet{recvFrame} eq 'bu_nutxga_cn0ga_hoa_nuthga') ||
	    ($packet{recvFrame} eq 'bu_nutxga_cn0ga_hoa_nuthga_coa_nutx')) {
		#--------------------------------------------------------------#
		vLogHTML_Info("<B>CN0 sends Binding Acknowledgement to NUTX, Invalid Authorization Data option.</B>");
		#--------------------------------------------------------------#
		vSend_ba_cn($IF0, 'ba_cn0ga_nutxga_rh2_nuthga_il_loction_auth', \%packet);

# not get bu_cn receive time
# maybe reset interval timer
	}
	elsif ($packet{recvFrame} eq 'echoreply_nuthga_cn0ga_tnl_nutx_ha0') {
		%value_echo = get_value_of_echoreply(0, \%packet);
		if ($value_echo{'Identifier'} == $id_no) {
			$echo_rev_flag = 1;
			last;
		}
	}
	elsif ($packet{recvFrame} eq 'echoreply_nutxga_cn0ga_hoa_nuthga') {
		%value_echo = get_value_of_echoreply(0, \%packet);
		if ($value_echo{'Identifier'} == $id_no) {
			$echo_opt_flag = 1;
			last;
		}
	}
}

#--------------------------------------------------------------#
# JUDGEMENT
#--------------------------------------------------------------#
# check retrans bu_cn
if ($MN_CONF{'FUNC_DETAIL_MN_BU_TO_CN_RETRANSMISSION'} eq 'YES') {
	if ($num > 1) {
		vLogHTML_Pass("(*1) PASS: CN0 receives the retransmitted Binding Update.");
	}
	else {
		vLogHTML_Fail("(*1) FAIL: CN0 does not receive the retransmitted Binding Update.");
		$failcount ++;
	}
}
else {
	if ($num == 1) {
		vLogHTML_Pass("(*1) PASS: CN0 does not receive the retransmitted Binding Update.");
	}
	else {
		vLogHTML_Fail("(*1) FAIL: CN0 receives the retransmitted Binding Update.");
		$failcount ++;
	}
}

# bu_cn
%value_bu_cn = get_value_of_bu_cn(0, \%packet_bu_cn_0);
$pre_seq = $value_bu_cn{SequenceNumber};
$pre_time = $packet_bu_cn_0{recvTime1};
$pre_interval = $INITIAL_BINDACK_TIMEOUT / 2;
vLogHTML_Info("First Sequence Number = $pre_seq");

for ($no = 1; $no < $num; $no ++) {

	# retrans bu_cn
	%value_bu_cn = get_value_of_bu_cn(0, \%{"packet_bu_cn_$no"});
	$seq = $value_bu_cn{SequenceNumber};
	$time = ${"packet_bu_cn_$no"}{recvTime1};
	$interval = $time - $pre_time;

	# check sequence number
	$rtn = check_modulo($pre_seq, $seq, 16);
	if ($rtn == 1) {
		vLogHTML_Pass("Sequence Number value greater than that used. No = $seq");
	}
	else {
		vLogHTML_Fail("FAIL: Sequence Number value not greater than that used. No = $seq");
		$failcount ++;
	}

	# check interval retransmission timer
	if (check_backoff($interval, $pre_interval) == 0) {
		if ($no == 1) {
			vLogHTML_Pass("The initial retransmission timer is set to INITIAL_BINDACK_TIMEOUT. $interval [sec]");
		}
		else {
			vLogHTML_Pass("Timeout period is doubled upon each retransmission. $interval [sec]");
		}
	}
	else {
		if ($interval >= ($MAX_BINDACK_TIMEOUT - $RETRANS_BINDACK_MARGIN)) {
			vLogHTML_Pass("Timeout period is over MAX_BINDACK_TIMEOUT. $interval [sec]");
		}
		elsif ($no == 1) {
			vLogHTML_Fail("FAIL: The initial retransmission timer is not set to INITIAL_BINDACK_TIMEOUT. $interval [sec]");
			$failcount ++;
		}
		else {
			vLogHTML_Fail("FAIL: Timeout period is not doubled upon each retransmission. $interval [sec]");
			$failcount ++;
		}
	}

	$pre_seq = $seq;
	$pre_time = $time;
	$pre_interval = $interval;
}

# check echo
if ($echo_rev_flag == 1) {
	vLogHTML_Pass("(*2) PASS: CN0 receives ICMP Echo reply by tunneling.");
}
elsif ($echo_opt_flag == 1) {
	vLogHTML_Fail("(*2) FAIL: CN0 receives ICMP Echo reply with Home Address Option.");
	$failcount ++;
}
else {
	vLogHTML_Fail("(*2) FAIL: CN0 does not receives ICMP Echo reply.");
	$failcount ++;
}

TERM:
#--------------------------------------------------------------#
# TERMINATION
#--------------------------------------------------------------#
# Terminate the state of TARGET.
Term_MN($IF0, 1);

################################################################
__END__


=head1 NAME

=begin html
  MN-3-2-1-2-025 - The Binding Authorization Data mobility option be not the last option

=end html

=head1 TARGET

=begin html
<PRE>
Host
</PRE>

=end html

=head1 REQUIREMENT of TEST

=begin html
<PRE>
    - Function of Return Routability: YES
                    
    - NUT sets (A) bit in BU which is transmitted to CN: YES
    - NUT re-transmits BU to CN for valuable BA: YES/NO
                    
</PRE>

=end html

=head1 TOPOLOGY

=begin html
<PRE>
<UL>
<LI><B><FONT SIZE="+1">TOPOLOGY-1 In the case of Real Home Link</FONT></B>
</UL>
                    
                            |
                            R      CN0
                            |       |
                ----+-------+-------+----------------------- LinkZ
                    |
                    R2                            NUTY
                    |                               |
                ----+-------+-----------------------+------- LinkY
                            |
                            R1                    NUTX
                            |                       |
                ----+-------+-----------------------+------- LinkX
                    |
                   HA0                            NUT0
                    |                               |
        ------------+-------------------------------+------- Link0
                    
</PRE>
<BLOCKQUOTE>
<TABLE BORDER>
<TR>
<TD><TT>Link0</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
<TD><TT>home link</TT></TD>
</TR>
<TR>
<TD><TT>LinkX</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkY</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkZ</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HA0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a0a0</TT></TD>
<TD ROWSPAN="3"><TT>home agent</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a0a0</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a0:a0</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R1 (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102:200:ff:fe00:a4a4</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a4a4</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a4:a4</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R2 (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103:200:ff:fe00:a6a6</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a6a6</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a6:a6</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>CN0 (LinkZ)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104:200:ff:fe00:a8a8</TT></TD>
<TD ROWSPAN="3"><TT>correspondent node</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a8a8</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a8:a8</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>NUT0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD ROWSPAN="3"><TT>home address</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>NUTX (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
<TR>
<TD><TT>NUTY (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<PRE>
                    
<UL>
<LI><B><FONT SIZE="+1">TOPOLOGY-1 In the case of Virtual Home Link</FONT></B>
</UL>
                    
                            |
                            R      CN0
                            |       |
                ----+-------+-------+----------------------- LinkZ
                    |
                    R2                            NUTY
                    |                               |
                ----+-------+-----------------------+------- LinkY
                            |
                            R1                    NUTX
                            |                       |
                ----+-------+-----------------------+------- LinkX
                    |
    -------------- HA0 ----------------------------------------------
                    |                             NUT0       virtual home link
                    |                               |
        ------------+-------------------------------+------- Link0
                    
</PRE>
<BLOCKQUOTE>
<TABLE BORDER>
<TR>
<TD><TT>Link0</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
<TD><TT>virtual home link</TT></TD>
</TR>
<TR>
<TD><TT>LinkX</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkY</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkZ</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HA0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a0a0</TT></TD>
<TD ROWSPAN="3"><TT>home agent</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a0a0</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a0:a0</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R1 (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102:200:ff:fe00:a4a4</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a4a4</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a4:a4</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R2 (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103:200:ff:fe00:a6a6</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a6a6</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a6:a6</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>CN0 (LinkZ)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104:200:ff:fe00:a8a8</TT></TD>
<TD ROWSPAN="3"><TT>correspondent node</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a8a8</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a8:a8</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>NUT0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD ROWSPAN="3"><TT>egress interface</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>NUTX (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
<TR>
<TD><TT>NUTY (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>

=end html

=head1 SETUP

=begin html
<PRE>
<LI><B><FONT SIZE="+1">Common Setup-1</FONT></B>
<UL>
<LI>Reboot NUT
<LI>Enable MN function
<UL>
<LI>Turn on MN functions
</UL>
<LI>Initialize IPsec configuration
<LI>Set IPsec configuration
<UL>
<LI>This test requires following configurations.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA1_SA2.html">MN-HA0 SA1/SA2, Transport mode, Binding Update/Binding Acknowledgement</A>
<LI><A HREF="SETUP_IPsec_HA0_SA3_SA4.html">MN-HA0 SA3/SA4, Tunnel mode, Return Routability Signaling</A>
</UL>
<LI>This test requires following configurations, If a related message is used.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA5_SA6.html">MN-HA0 SA5/SA6, Transport mode, Prefix Discovery</A>
</UL>
<LI>This test also allow to use following configurations.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA7_SA8.html">MN-HA0 SA7/SA8, Tunnel mode, Payload Packets</A>
<LI><A HREF="SETUP_IPsec_CN0_SA.html">MN-CN0, Transport mode, ICMP</A>
</UL>
</UL>
</UL>
</PRE>

=end html

=head1 INITIALIZATION

=begin html
<PRE>
<UL>
<LI><B><FONT SIZE="+1">In the case of Real Home Link</FONT></B>
</UL>
                    
       HA0    NUT0      R1      R2     CN0
        |       |       |       |       |
        | ----> |       |       |       | 1.Router Advertisement
        |       |       |       |       |
        |     NUTX      |       |       |
        |       |       |       |       |
        |       | <---- |       |       | 2.Router Advertisement
        |       |       |       |       |
        | <---- |       |       |       | 3.Neighbor Solicitation (NUD)
        |       |       |       |       | 4.(no reply)
        |       |       |       |       |
        | <---- |       |       |       | 5.Binding Update
        | ----> |       |       |       | 6.Binding Acknowledgement
        |       |       |       |       |
                    
        1. Send Router Advertisement. (HA0 -> HA0_allnode_multi)
        2. Send Router Advertisement. (R1 -> R1_allnode_multi)
        3. Receive Neighbor Solicitation (NUD). (NUT0 -> HA0)
        4. (no reply)
        5. Receive Binding Update to HA0. (NUTX -> HA0)
        6. Send Binding Acknowledgement. (HA0 -> NUTX)
                    
<UL>
<LI><B><FONT SIZE="+1">In the case of Virtual Home Link</FONT></B>
</UL>
                    
       HA0    NUTX      R1      R2     CN0
        |       |       |       |       |
        |       | <---- |       |       | 1.Router Advertisement
        |       |       |       |       |
        | <---- |       |       |       | 2.Binding Update
        | ----> |       |       |       | 3.Binding Acknowledgement
        |       |       |       |       |
                    
        1. Send Router Advertisement. (R1 -> R1_allnode_multi)
        2. Receive Binding Update to HA0. (NUTX -> HA0)
        3. Send Binding Acknowledgement. (HA0 -> NUTX)
                    
</PRE>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
                    
       HA0    NUTX      R1      R2     CN0
        |       |       |       |       |
        | ====> | <-------------------- | 1.ICMP Echo Request
        |       |       |       |       |
        | <==== | --------------------> | 2.Home Test Init
        |       | --------------------> | 3.Care-of Test Init
        |       | <-------------------- | 4.Care-of Test
        | ====> | <-------------------- | 5.Home Test
        |       |       |       |       |
        | <==== | --------------------> | 6.ICMP Echo Reply
        |       | --------------------> | 7.Binding Update
        |       | <-------------------- | 8.Binding Acknowledgement
        |       |       |       |       |
        |       | --------------------> | 9.Binding Update (*1)
        |       | <-------------------- | 10.Binding Acknowledgement
        |       |       |       |       |
        |       |       |       |       | :
        |       |       |       |       |
        |       | <-------------------- | 11.ICMP Echo Request
        | <==== | --------------------> | 12.ICMP Echo Reply (*2)
        |       |       |       |       |
                    
        1. Send ICMP Echo Request. (out: HA0 -> NUTX, in: CN0 -> NUT0)
        2. Receive Home Test Init. (out: NUTX -> HA0, in: NUT0 -> CN0)
        3. Receive Care-of Test Init. (NUTX -> CN0)
        4. Send Care-of Test. (CN0 -> NUTX)
        5. Send Home Test. (out: HA0 -> NUTX, in: CN0 -> NUT0)
        6. Receive ICMP Echo Reply. (out: NUTX -> HA0, in: NUT0 -> CN0)
        7. Receive Binding Update to CN0. (NUTX -> CN0)
        8. Send Binding Acknowledgement. (CN0 -> NUTX)
            # The Binding Authorization Data mobility option be not the last option
        9. Receive Binding Update to CN0. (NUTX -> CN0)
       10. Send Binding Acknowledgement. (CN0 -> NUTX)
            # The Binding Authorization Data mobility option be not the last option
       11. Send ICMP Echo Request. (CN0 -> NUTX with Type2 Routing Header)
       12. Receive ICMP Echo Reply. (out: NUTX -> HA0, in: NUT0 -> CN0)
                    
    Focus Packet Format:
        8. Binding Acknowledgement
            IPv6 header
                source          = correspondent node
                destination     = care-of address
            Routing header (type 2)
                home address    = home address
            Mobility header
              Binding Acknowledgement
                status          = 0
              Authorization Data option (<B>illegal location</B>)
              Padding option
                    
        <A HREF="../images/Binding_Update_message_format_from_MN_to_CN.gif">9. Binding Update</A>
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
 The judgment changes by the following settings of "REQUIREMENT of TEST".
                    
   - NUT re-transmits BU to CN for valuable BA: YES
     (*1) PASS: CN0 receives the retransmitted Binding Update.
                Then, check whether this packet fills all of the following,
                - Sequence Number value greater than that used.
                - The initial retransmission timer is set to INITIAL_BINDACK_TIMEOUT.
                - Timeout period is doubled upon each retransmission.
     (*2) PASS: CN0 receives the tunneled ICMP Echo Reply.
                    
   - NUT re-transmits BU to CN for valuable BA: NO
     (*1) PASS: CN0 does not receive the retransmitted Binding Update.
     (*2) PASS: CN0 receives the tunneled ICMP Echo Reply.
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
RFC3775 Mobility Support in IPv6
    See Section 11.7.3
</PRE>

=end html

