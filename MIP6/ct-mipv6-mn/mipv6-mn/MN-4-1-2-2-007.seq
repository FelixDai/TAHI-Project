#!/usr/bin/perl
#
# Copyright (C) IPv6 Promotion Council,
# NIPPON TELEGRAPH AND TELEPHONE CORPORATION (NTT),
# Yokogwa Electoric Corporation, YASKAWA INFORMATION SYSTEMS Corporation
# and NTT Advanced Technology Corporation(NTT-AT) All rights reserved.
# 
# Technology Corporation.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#

#--------------------------------------------------------------#
# ENTRANCE
#--------------------------------------------------------------#
# Set the test version used for the display.
BEGIN { $V6evalTool::TestVersion = '$Name: MIPv6_4_0_5 $'; }

# Import the package.
use V6evalTool;
use mip6_mn_config;
use mip6_mn_common;
use mip6_mn_get;
use mip6_mn_send;
use mip6_mn_recv;
use mip6_mn_msg;

#--------------------------------------------------------------#
# INITIALIZATION
#--------------------------------------------------------------#
# Do the test satisfied the condition.
my @options = (
	'TEST_STATE_NORMAL',        'YES',                0,
	'TEST_FUNC_REAL_HOME_LINK', 'YES',                0,
);

# Set the special environment
$MN_CONF{ENV_CN0_SET} = 'YES';

# Initialize the state of TARGET.
Init_MN(@options);

#--------------------------------------------------------------#
# PREPARATION
#--------------------------------------------------------------#
# Prepare other local variables.
my @value;
my $sec;

my $echoreply_before_flag = 0;
my $echoreply_after_flag = 0;

#--------------------------------------------------------------#
# TEST PROCEDURE
#--------------------------------------------------------------#
#--------------------------------------------------------------#
# NUT starts at Link0.
#--------------------------------------------------------------#
# Send Router Advertisement. (HA0 -> HA0_allnode_multi)
vRecv_at_Link0($IF0, $FIRST_RA_TIME);

#--------------------------------------------------------------#
vLogHTML_Info("<B>CN0 sends ICMP Echo Request.</B>");
#--------------------------------------------------------------#
# Send ICMP Echo Request. (CN0 -> NUT0)
@value = ('ECHO_PAYLOAD', '{1,2,3,4,5,6,7,8}');
vSend_echorequest($IF0, 'echorequest_cn0ga_nut0ga', 0, @value);

# Receive ICMP Echo Reply. (NUT0 -> CN0)
%packet_before_echoreply = vRecv_at_Link0($IF0, $ECHO_TIME, 'echoreply_nut0ga_cn0ga');
if ($packet_before_echoreply{status} == 0) {
	$echoreply_before_flag = 1;
}
else {
	goto JUDGE_1;
}

#--------------------------------------------------------------#
# NUT moves from Link0 to LinkX.
#--------------------------------------------------------------#
%packet = vRecv_to_move_from_Link0_to_LinkX_w_all_SA($IF0);
if ($packet{status} != 0) {
	$initcount ++;
	goto TERM;
}

# interval
vRecv_at_LinkX($IF0, $MinDelayBetweenRAs);

#--------------------------------------------------------------#
# NUT moves from LinkX to Link0.
#--------------------------------------------------------------#
%packet = vRecv_to_move_from_LinkX_to_Link0($IF0);
if ($packet{status} != 0) {
	$initcount ++;
	goto TERM;
}

# get the source address of BU
%value_bu_addr = get_value_of_ipv6(0, \%RECV_PACKET_BU);
$bu_source = $value_bu_addr{SourceAddress};

#--------------------------------------------------------------#
vLogHTML_Info("<B>CN0 sends ICMP Echo Request.</B>");
#--------------------------------------------------------------#
# Send ICMP Echo Request. (CN0 -> NUT0)
@value = ('ECHO_PAYLOAD', '{8,7,6,5,4,3,2,1}');
vSend_echorequest($IF0, 'echorequest_cn0ga_nut0ga', 0, @value);

# Receive ICMP Echo Reply. (NUT0 -> CN0)
%packet_after_echoreply = vRecv_at_Link0($IF0, $ECHO_TIME, 'echoreply_nut0ga_cn0ga');
if ($packet_after_echoreply{status} == 0) {
	$echoreply_after_flag = 1;
}

JUDGE_1:
#--------------------------------------------------------------#
# JUDGEMENT
#--------------------------------------------------------------#
if ($echoreply_before_flag == 1) {
	vLogHTML_Pass("(*1) PASS: CN0 receives ICMP Echo Reply.");
}
else {
	vLogHTML_Fail("(*1) FAIL: CN0 does not receive ICMP Echo Reply. $ECHO_TIME [sec]");
	$failcount ++;
	goto TERM;
}

# It can be said that JUDGEMENT is correct being possible 
# to receive it as the packet definition. 
#
# get values of ICMP Echo Reply.
%value_echoreply1 = get_value_of_ipv6(0, \%packet_before_echoreply);
$echoreply_source1 = $value_echoreply1{SourceAddress};

# Check SourceAddress
if ($echoreply_source1 eq $node_hash{'nut0_ga'}) {
	vLogHTML_Pass("The Source Address is set to Home Address.");
}
else {
	vLogHTML_Fail("FAIL: The Source Address is not set to Home Address.");
	$failcount ++;
}

#  Check the HoA option
if (defined($packet_before_echoreply{'Frame_Ether.Packet_IPv6.Hdr_Destination.Opt_HomeAddress'})) {
	vLogHTML_Fail("FAIL: Home Address destination option is included.");
	$failcount ++;
}
else {
	vLogHTML_Pass("Home Address destination option is not included.");
}

if ($echoreply_after_flag == 1) {
	vLogHTML_Pass("(*2) PASS: CN0 receives ICMP Echo Reply.");
}
else {
	vLogHTML_Fail("(*2) FAIL: CN0 does not receive ICMP Echo Reply.");
	$failcount ++;
	goto TERM;
}

# It can be said that JUDGEMENT is correct being possible 
# to receive it as the packet definition. 
#
# get values of ICMP Echo Reply.
%value_echoreply2 = get_value_of_ipv6(0, \%packet_after_echoreply);
$echoreply_source2 = $value_echoreply2{SourceAddress};

# Check SourceAddress
if ($echoreply_source2 eq $node_hash{'nut0_ga'}) {
	vLogHTML_Pass("The Source Address is set to Home Address.");
}
else {
	vLogHTML_Fail("FAIL: The Source Address is not set to Home Address.");
	$failcount ++;
}

#  Check the HoA option
if (defined($packet_after_echoreply{'Frame_Ether.Packet_IPv6.Hdr_Destination.Opt_HomeAddress'})) {
	vLogHTML_Fail("FAIL: Home Address destination option is included.");
	$failcount ++;
}
else {
	vLogHTML_Pass("Home Address destination option is not included.");
}

TERM:
#--------------------------------------------------------------#
# TERMINATION
#--------------------------------------------------------------#
# Terminate the state of TARGET.
Term_MN($IF0, 1);

################################################################
__END__


=head1 NAME

=begin html
  MN-4-1-2-2-007 - Receiving the packets while it is at home-link

=end html

=head1 TARGET

=begin html
<PRE>
Host
</PRE>

=end html

=head1 REQUIREMENT of TEST

=begin html
<PRE>
    - Function of Real Home Link: YES
                    
</PRE>

=end html

=head1 TOPOLOGY

=begin html
<PRE>
<UL>
<LI><B><FONT SIZE="+1">TOPOLOGY-1 In the case of Real Home Link</FONT></B>
</UL>
                    
                            |
                            R      CN0
                            |       |
                ----+-------+-------+----------------------- LinkZ
                    |
                    R2                            NUTY
                    |                               |
                ----+-------+-----------------------+------- LinkY
                            |
                            R1                    NUTX
                            |                       |
                ----+-------+-----------------------+------- LinkX
                    |
                   HA0                            NUT0
                    |                               |
        ------------+-------------------------------+------- Link0
                    
</PRE>
<BLOCKQUOTE>
<TABLE BORDER>
<TR>
<TD><TT>Link0</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
<TD><TT>home link</TT></TD>
</TR>
<TR>
<TD><TT>LinkX</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkY</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD><TT>LinkZ</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104::/64</TT></TD>
<TD><TT>foreign link</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>HA0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100:200:ff:fe00:a0a0</TT></TD>
<TD ROWSPAN="3"><TT>home agent</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a0a0</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a0:a0</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R1 (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102:200:ff:fe00:a4a4</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a4a4</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a4:a4</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>R2 (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103:200:ff:fe00:a6a6</TT></TD>
<TD ROWSPAN="3"><TT>&nbsp;</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a6a6</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a6:a6</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>CN0 (LinkZ)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:104:200:ff:fe00:a8a8</TT></TD>
<TD ROWSPAN="3"><TT>correspondent node</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::200:ff:fe00:a8a8</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>00:00:00:00:a8:a8</TT></TD>
</TR>
<TR>
<TD ROWSPAN="3"><TT>NUT0 (Link0)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:100::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD ROWSPAN="3"><TT>home address</TT></TD>
</TR>
<TR>
<TD><TT>link-local</TT></TD>
<TD><TT>fe80::&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>ether</TT></TD>
<TD><TT>&lt;NutDef.Link0_addr&gt;</TT></TD>
</TR>
<TR>
<TD><TT>NUTX (LinkX)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:102::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
<TR>
<TD><TT>NUTY (LinkY)</TT></TD>
<TD><TT>global</TT></TD>
<TD><TT>3ffe:501:ffff:103::&lt;NutDef.Link0_addr&gt;</TT></TD>
<TD><TT>care-of address</TT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>

=end html

=head1 SETUP

=begin html
<PRE>
<LI><B><FONT SIZE="+1">Common Setup-1</FONT></B>
<UL>
<LI>Reboot NUT
<LI>Enable MN function
<UL>
<LI>Turn on MN functions
</UL>
<LI>Initialize IPsec configuration
<LI>Set IPsec configuration
<UL>
<LI>This test requires following configurations.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA1_SA2.html">MN-HA0 SA1/SA2, Transport mode, Binding Update/Binding Acknowledgement</A>
</UL>
<LI>This test requires following configurations, If a related message is used.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA3_SA4.html">MN-HA0 SA3/SA4, Tunnel mode, Return Routability Signaling</A>
<LI><A HREF="SETUP_IPsec_HA0_SA5_SA6.html">MN-HA0 SA5/SA6, Transport mode, Prefix Discovery</A>
</UL>
<LI>This test also allow to use following configurations.
<UL>
<LI><A HREF="SETUP_IPsec_HA0_SA7_SA8.html">MN-HA0 SA7/SA8, Tunnel mode, Payload Packets</A>
<LI><A HREF="SETUP_IPsec_CN0_SA.html">MN-CN0, Transport mode, ICMP</A>
</UL>
</UL>
</UL>
</PRE>

=end html

=head1 INITIALIZATION

=begin html
<PRE>
    - none
                    
</PRE>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
                    
       HA0    NUT0      R1      R2     CN0
        |       |       |       |       |
        | ----> |       |       |       | 1.Router Advertisement
        |       |       |       |       |
        |       | <-------------------- | 2.ICMP Echo Request
        |       | --------------------> | 3.ICMP Echo Reply (*1)
        |       |       |       |       |
        |     NUTX      |       |       |
        |       |       |       |       |
        |       | <---- |       |       | 4.Router Advertisement
        |       |       |       |       |
        | <---- |       |       |       | 5.Neighbor Solicitation (NUD)
        |       |       |       |       | 6.(no reply)
        |       |       |       |       |
        | <---- |       |       |       | 7.Binding Update
        | ----> |       |       |       | 8.Binding Acknowledgement
        |       |       |       |       |
        |     NUT0      |       |       |
        |       |       |       |       |
        | ----> |       |       |       | 9.Router Advertisement
        |       |       |       |       |
        |       | ----> |       |       | 10.Neighbor Solicitation (NUD)
        |       |       |       |       | 11.(no reply)
        |       |       |       |       |
        | <---- |       |       |       | 12.Binding Update
        | ----> |       |       |       | 13.Binding Acknowledgement
        |       |       |       |       |
        | <---- |       |       |       | 14.Neighbor Advertisement
        |       |       |       |       |
        |       | <-------------------- | 15.ICMP Echo Request
        |       | --------------------> | 16.ICMP Echo Reply (*2)
        |       |       |       |       |
                    
        1. Send Router Advertisement. (HA0 -> HA0_allnode_multi)
        2. Send ICMP Echo Request. (CN0 -> NUT0)
            # The Destination Address is set to Home address.
        3. Receive ICMP Echo Reply. (NUT0 -> CN0)
        4. Send Router Advertisement. (R1 -> R1_allnode_multi)
        5. Receive Neighbor Solicitation (NUD). (NUT0 -> HA0)
        6. (no reply)
            # Wait during a maximum of 3 seconds(RFC2461).
        7. Receive Binding Update to HA0. (NUTX -> HA0)
        8. Send Binding Acknowledgement. (HA0 -> NUTX)
        9. Send Router Advertisement. (HA0 -> HA0_allnode_multi)
       10. Receive Neighbor Solicitation (NUD). (NUTX -> R1)
       11. (no reply)
            # Wait during a maximum of 3 seconds(RFC2461).
       12. Receive Binding Update to HA0. (NUT0 -> HA0)
       13. Send Binding Acknowledgement. (HA0 -> NUT0)
       14. Receive Neighbor Advertisement. (NUT0 -> NUT0_allnode_multi) 
       15. Send ICMP Echo Request. (CN0 -> NUT0)
            # The Destination Address is set to Home Address.
       16. Receive ICMP Echo Reply. (NUT0 -> CN0)
                    
    Focus Packet Format:
        2. ICMP Echo Request
       15. ICMP Echo Request
            IPv6 header
                source          = correspondent node
                destination     = home address
            ICMPv6 header
              Echo Request
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
 (*1) PASS: CN0 receives ICMP Echo Reply.
            Then, check whether this packet fills all of the following.
             - The Source Address is set to Home Address.
             - Home Address destination option is not included.
                    
 (*2) PASS: CN0 receives ICMP Echo Reply.
            Then, check whether this packet fills all of the following.
             - The Source Address is set to Home Address.
             - Home Address destination option is not included.
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
RFC3775 Mobility Support in IPv6
    See Section 11.3.1, 11.5.4
</PRE>

=end html

