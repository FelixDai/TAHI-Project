#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/rfc3633/S_RFC3633_ReplyReceiptInvalidRenewMsg_11_3_3_D.seq,v 1.3 2011/04/11 01:38:55 miyata Exp $
#
########################################################################

BEGIN { $V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Server_pktdesc;

my $type=$V6evalTool::NutDef{Type};
if($type ne 'router') {
	vLogHTML('<FONT COLOR="#FF0000">This test does not support Host!</FONT>');
	exit $V6evalTool::exitRouterOnly;
}

dhcpExitNS if(ChkFuncSupport('PREFIX_DELEGATION'));

#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";
#initial NUT config parameters,
my %NUT_Delegating_Config = (
       'if_nut0'=> "$V6evalTool::NutDef{Link0_device}",
#      'if_nut1' => "$V6evalTool::NutDef{Link1_device}",
#      'if_add0' => "$NUTRELAY1_LINK0_GLOBAL_UCAST",
#      'if_add1' => "$NUTRELAY1_LINK1_GLOBAL_UCAST",
#      'if_length0' => "64",
#      'if_length1' => "64",
#      'if_type0'=> "unicast",
#      'if_type1'=> "unicast",
       'init_opcode' => "vRemote(\"dhcp6s.rmt\", \"start\",\"link0=$V6evalTool::NutDef{Link0_device}\",\"startaddr=3ffe:501:ffff:100::10\",\"endaddr=3ffe:501:ffff:100::11\",\"delegateprefix=2001:db8:ffff::\",\"delegateprefix_range=48\",\"delegateprefixlength=48\",\"preferredlifetime=10000\", \"validlifetime=20000\", \"renewtime=50\",\"rebindtime=80\")");

my ($time1, $time2) = (50, 80);

dhcpDelegatingInit(\%NUT_Delegating_Config);

vClear($IF0);
#--------------------------------------------------------------#
# Main Procedure
#--------------------------------------------------------------#
vLogHTML('<B>==== Receipt of Renew Messages  ====</B><BR>');

# send DHCPv6 Solicit Message
$CID_OPTION = "opt_CID_LLT_client1";
$IA_PD_OPTION = "opt_IA_PD";
$ElapsedTime_OPTION = "opt_ElapsedTime";

my ($ret1, %sol1) = send_solicit($IF0, "solicit_client1_to_alldhcp", "");
if (0 != $ret1){
        dhcpExitFail();
}


# wait for DHCPv6 Advertise Message
my ($ret2, %adv2) = wait_for_advertise($IF0, 5);
if (0 != $ret2) {
	dhcpExitFail();
}


vClear($IF0);
# send DHCPv6 Request Message
$SID_OPTION = "opt_SID_ANY";
$IA_PD_OPTION = "opt_IA_PD_Prefix2";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret3, %req3) = send_request($IF0, "request_client1_to_alldhcp", \%adv2, "");

# wait for DHCPv6 Reply Message
my ($ret4, %rep4) = wait_for_reply($IF0, 5);
if (0 != $ret4) {
	dhcpExitFail();
}


vSleep($time1);
vClear($IF0);
# send DHCPv6 Renew Message
$SID_OPTION = "opt_SID_ANY";
$IA_PD_OPTION = "opt_IA_PD_Prefix_woStatus";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret5, %renew5) = send_renew($IF0, "renew_client1_to_alldhcp_Notbind", \%rep4, "");
if (0 != $ret5) {
	dhcpExitFail();
}

# wait for DHCPv6 Reply Message
my ($ret6, %rep6) = wait_for_reply($IF0, 5);
if (0 != $ret6) {
	dhcpExitFail();
}

# check statuscode "NoBinding"
my $statuscode = "Opt_DHCPv6_StatusCode.StatusCode";
if(0 != (check_statuscode(\%rep6, "Opt_DHCPv6_IA_PD.Opt_DHCPv6_StatusCode.StatusCode", $STATUS_CODE_NOBINDING))){
         vLogHTML('<FONT COLOR="#FF0000">STATUSCODE is not matched.</FONT><BR>')
;
         dhcpExitFail();
}

# A Server and Client Identifier option (containing DUID)
if (0 != options_exist(\%rep6,($CMP_CID|$CMP_SID))){
        dhcpExitError("Can not find necessary(SID) option! ");
}

# A Client identifier option set to the same as Solicit message's Client identifier option
if(0 != compare_id(\%renew5, \%rep6, $CMP_CID)){
        dhcpExitFail();
}


# check IA prefix
if (1 != parse_IAPrefix_option(\%rep6)){
        dhcpExitError("<B>IA_Prefix Option exists!</B>");
}

#-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>The Message exchange is correct</FONT></B><BR>");
#-------------------------------------------------------------------

vClear($IF0);
vStop($IF0);
dhcpExitPass();
#NOTREACHED

########################################################################
__END__

=head1 NAME

  S_RFC3633_ReplyReceiptInvalidRenewMsg_11_3_3_D.seq - Reply with the IA (No prefix & w/ Status Code NoBiding)

=head1 TARGET

  Server

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3633_ReplyReceiptInvalidRenewMsg_11_3_3_D.seq">S_RFC3633_ReplyReceiptInvalidRenewMsg_11_3_3_D.seq </A>[-tooloption ...] 
 -pkt <A HREF="./S_RFC3633_ReplyReceiptInvalidRenewMsg_11_3_3_D.def">S_RFC3633_ReplyReceiptInvalidRenewMsg_11_3_3_D.def </A>
 -tooloption: v6eval tool option
See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A>
 </PRE>

=head1 INITIALIZATION

=begin html
  <UL>
  <LI><STRONG>Network Topology</STRONG></LI>
  </UL>
  <PRE>
          TN(Client1)  
             |
Link0 -------+-----------+--------------- 3ffe:501:ffff:100::/64
                         |
                       NUT(Server1)
  </PRE>
  <UL>
  <LI><STRONG>Verification Points</STRONG></LI>
<PRE>
	If the delegating router cannot find a binding
        for the requesting router's IA_PD the delegating
        router returns the IA_PD containing no prefixes
        with a Status Code option set to NoBinding in the
        Reply message.
</PRE>
	<UL>
<PRE>
Reply Message
	<LI>msg-type</LI>
	<B>REPLY(7)</B>
	<LI><B>Don't include Status Code option(w/Success(0))</B></LI>
	<LI>IA_PD option</LI>
	<UL><LI><B>contain no IA_PD prefix option</B></LI>
	<LI><B>contain Status Code option(w/ NoBinding(3))</B></LI>
	</UL>
</PRE>
  </UL>
      <LI><STRONG>Configuration</STRONG></LI>
  <UL>
	<BLOCKQUOTE>
	<TABLE BORDER>
	<TR>
	<TD><TT>Device Name</TT></TD>
	<TD><TT>Device Type</TT></TD>
	<TD><TT>I/F</TT></TD>
	<TD><TT>Assigned Prefix</TT></TD>
	<TD><TT>Link Local Addr</TT></TD>
	<TD><TT>MAC Addr</TT></TD>
	</TR>
	<TR>
	<TD><TT>Server1</TT></TD>
	<TD><TT>NUT</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>NUT's Linklocal address</TT></TD>
	<TD><TT>NUT's MAC address</TT></TD>
	</TR>
	<TR>
	<TD><TT>Client1</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a2a2</TT></TD>
	<TD><TT>00:00:00:00:a2:a2</TT></TD>
	</TABLE>
	</BLOCKQUOTE>
	</UL>
	<UL>
	</PRE>
	<LI>Server setup</LI>
	The server <B>cannot find a client entry </B>for the IA_PD of the Renew message
	</PRE>
	</UL>
</UL>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
       NUT     TN
        |       | 
        |       | initialize NUT (as a DHCPv6 Server)
        |       | 
        | <---- | Solicit
        | ----> | Advertise
        | <---- | Request
        | ----> | Reply
        |       | 
        |       | 
        |       | 
        | <---- | Renew (Different IA_PD ID number)
        | ----> | <B>Reply<B>(*1)
        |       |
</PRE>

=end html

=head1 JUDGEMENT

<PRE>
(*1) PASS:  NUT send Reply message with IA_PD option(w/o IA_PD prefix w/ Status Code NoBinding).
            And it don not include a "Success" status code option.
</PRE>

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
   see also RFC3633
   12.2.  Delegating Router behavior
   see also RFC3315
   18 DHCP Client-Initiated Configuration Exchange
   18.2.3. Receipt of Renew Messages
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut

