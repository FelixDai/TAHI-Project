#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/rfc3633/S_RFC3633_IFID_Format_11_1_11.seq,v 1.2 2009/12/03 06:03:41 akisada Exp $
#
########################################################################

BEGIN { $V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Server_pktdesc;

my $type=$V6evalTool::NutDef{Type};
if($type ne 'router') {
	vLogHTML('<FONT COLOR="#FF0000">This test does not support Host!</FONT>');
	exit $V6evalTool::exitRouterOnly;
}

dhcpExitNS if(ChkFuncSupport('PREFIX_DELEGATION'));

#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";

#initial NUT config parameters,
my %NUT_Delegating_Config = (
#my %NUT_Server_Config = (
       'if_nut0'=> "$V6evalTool::NutDef{Link0_device}",
#      'if_nut1' => "$V6evalTool::NutDef{Link1_device}",
#      'if_add0' => "$NUTRELAY1_LINK0_GLOBAL_UCAST",
#      'if_add1' => "$NUTRELAY1_LINK1_GLOBAL_UCAST",
#      'if_length0' => "64",
#      'if_length1' => "64",
#      'if_type0'=> "unicast",
#      'if_type1'=> "unicast",
       'init_opcode' => "vRemote(\"dhcp6s.rmt\", \"start\",\"link0=$V6evalTool::NutDef{Link0_device}\",\"startaddr=3ffe:501:ffff:100::10\",\"endaddr=3ffe:501:ffff:100::11\",\"delegateprefix=2001:db8:ffff::\",\"delegateprefix_range=48\",\"delegateprefixlength=48\",\"renewtime=50\",\"rebindtime=80\")");

dhcpDelegatingInit(\%NUT_Delegating_Config);
#dhcpSvrInit(\%NUT_Server_Config);

vClear($IF0);
#--------------------------------------------------------------#
# Main Procedure
#--------------------------------------------------------------#
vLogHTML('<B>==== Creation and Transmission of Relay Reply Messages #1  ====</B><BR>');

# send DHCPv6 Relay Forward Message(Solicit)

$CID_OPTION = "opt_CID_LLT_client3";
$IA_PD_OPTION = "opt_IA_PD";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my($ret1, %rfsol1) = send_relay_forward($IF0, "relayforward_solicit_client1_to_alldhcp_interfaceid");
 if (0 != $ret1){
 	dhcpExitFail();
 }

# wait for DHCPv6 Relay Reply Message(Advertise)
my ($ret2, %rradv2) =  wait_for_relay_reply_advertise2($IF0, 5,undef);
if (0 != $ret2){
	dhcpExitFail();
}

if (0 != options_exist(\%rradv2, $CMP_IID)){
 	dhcpExitError("<B>Do not include Interface-ID options!</B>");
}

my $option_length = $rradv2{"Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_RelayReply.Opt_DHCPv6_IID.Length"};

if($option_length == 0){
	vLogHTML('<FONT COLOR="#FF0000">IID option length is zero.</FONT><BR>');
	dhcpExitFail;
}
#Compare the interface-id option
my $cmpresult = compare_options(\%rradv2,\%rfsol1,$CMP_IID);
if(0 != $cmpresult){
	dhcpExitError("The interface-id option between Relay-forward & Relay-reply isn't same");
}

#-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>The Format of Interface ID is correct</FONT></B><BR>");
#-------------------------------------------------------------------



vClear($IF0);
vStop($IF0);
dhcpExitPass;



#NOTREACHED

########################################################################
__END__

=head1 NAME

  S_RFC3633_IFID_Format_11_1_11.seq - Checking Interface-Id Option

=head1 TARGET

  Server

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3633_IFID_Format_11_1_11.seq">S_RFC3633_IFID_Format_11_1_11.seq </A>[-tooloption ...]
 -pkt <A HREF="./S_RFC3633_IFID_Format_11_1_11.def">S_RFC3633_IFID_Format_11_1_11.def </A>
 -tooloption: v6eval tool option
See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A>
 </PRE>

=head1 INITIALIZATION

=begin html
  <UL>
  <LI><STRONG>Network Topology</STRONG></LI>
  </UL>
  <PRE>
          TN(Relay agent1)  
             |
Link0 -------+-----------+--------------- 3ffe:501:ffff:100::/64
                         |
                       NUT(Server1)
  </PRE>
  <UL>
      <LI><STRONG>Verification Points</STRONG></LI><P>
          <PRE>
          <UL>
Interface-ID Option format  The format of the Interface ID option is:<BR>
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |      OPTION_INTERFACE_ID      |         option-len            |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    .                                                               .
    .                         interface-id                          .
    .                                                               .
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
<BR>
Relay-reply Message Format
      <LI>msg-type</LI>
          <B>RELAY-REPL(13)</B>
      <LI>Interface-Id option</LI>
	  <B>Same as the RELAY-FORW Message</B>
          </UL>
<UL>Interface-Id option's format
<LI>option-code</LI>
<B>OPTION_INTERFACE_ID (18)</B>
<LI>option-len</LI>
<B>Length of interface-id field.</B>
<LI>interface-id</LI>
An opaque value of arbitrary length generated
by the relay agent to identify one of the
relay agent's interfaces.
</PRE>
  </UL>
  <UL>
      <LI><STRONG>Configuration</STRONG></LI>
  </UL>
	<BLOCKQUOTE>
	<TABLE BORDER>
	<TR>
	<TD><TT>Device Name</TT></TD>
	<TD><TT>Device Type</TT></TD>
	<TD><TT>I/F</TT></TD>
	<TD><TT>Assigned Prefix</TT></TD>
	<TD><TT>Link Local Addr</TT></TD>
	<TD><TT>MAC Addr</TT></TD>
	</TR>
	<TR>
	<TD><TT>Server1</TT></TD>
	<TD><TT>NUT</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>NUT's Linklocal address</TT></TD>
	<TD><TT>NUT's MAC address</TT></TD>
	</TR>
	<TR>
	<TD><TT>Relay agent 1</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a2a2</TT></TD>
	<TD><TT>00:00:00:00:a2:a2</TT></TD>
	</TR>
	</TABLE>
	</BLOCKQUOTE>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
       NUT     TN
        |       | 
        |       | initialize NUT (as a DHCPv6 Server)
        |       | 
        | <---- | Relay-forward(Solicit)
        | ----> | Relay-reply(Advertise) (*1)
        |       | 
</PRE>

=end html

=head1 JUDGEMENT

<PRE>
(*1)PASS: The Interface-Id fomat in Relay-reply message is correct 
          and the Relay-reply should include the Advertise message.
</PRE>

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
   see also RFC3315
   22.18. Interface-Id Option
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut
<PRE>
 
