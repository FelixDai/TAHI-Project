#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/rfc3633/S_RFC3633_LayeredRelayForwardMsg_11_3_6_B.seq,v 1.2 2009/12/03 06:03:41 akisada Exp $
#
########################################################################

BEGIN { $V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Server_pktdesc;

my $type=$V6evalTool::NutDef{Type};
if($type ne 'router') {
	vLogHTML('<FONT COLOR="#FF0000">This test does not support Host!</FONT>');
	exit $V6evalTool::exitRouterOnly;
}

dhcpExitNS if(ChkFuncSupport('PREFIX_DELEGATION'));

#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";

#initial NUT config parameters,
my %NUT_Delegating_Config = (
       'if_nut0'=> "$V6evalTool::NutDef{Link0_device}",
#      'if_nut1' => "$V6evalTool::NutDef{Link1_device}",
#      'if_add0' => "$NUTRELAY1_LINK0_GLOBAL_UCAST",
#      'if_add1' => "$NUTRELAY1_LINK1_GLOBAL_UCAST",
#      'if_length0' => "64",
#      'if_length1' => "64",
#      'if_type0'=> "unicast",
#      'if_type1'=> "unicast",
       'init_opcode' => "vRemote(\"dhcp6s.rmt\", \"start\",\"link0=$V6evalTool::NutDef{Link0_device}\",\"startaddr=3ffe:501:ffff:100::10\",\"endaddr=3ffe:501:ffff:100::11\",\"delegateprefix=2001:db8:ffff::\",\"delegateprefix_range=48\",\"delegateprefixlength=48\",\"preferredlifetime=10000\", \"validlifetime=20000\", \"renewtime=50\",\"rebindtime=80\",\"valduid=$DUID_CLIENT4\")");

dhcpDelegatingInit(\%NUT_Delegating_Config);

vClear($IF0);
#--------------------------------------------------------------#
# Main Procedure
#--------------------------------------------------------------#

# send DHCPv6 Relay Forward Message from TN5(Solicit)

$CID_OPTION = "opt_CID_LLT_client4";
$IA_PD_OPTION = "opt_IA_PD";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my($ret1, %rfsol1) = send_relay_forward($IF0, "relayforward_solicit_client4_to_relay2_to_relay1_alldhcp_2");
 if (0 != $ret1){
 	dhcpExitFail();
 }

# wait for DHCPv6 Relay Reply Message(Advertise)
my ($ret2, %rradv2) =  wait_for_relay_reply_relay2($IF0, 5,undef);
if (0 != $ret2){
	dhcpExitFail();
}

# check unicast address
if ( $rradv2{"Frame_Ether.Packet_IPv6.Hdr_IPv6.DestinationAddress"} != $rfsol1{"Frame_Ether.Packet_IPv6.Hdr_IPv6.SourceAddress"}) {
	dhcpExitError("DHCPv6 Server not send Advertise message via unicast.")
}

vClear($IF0);
# send DHCPv6 Relay Forward Message from TN7(Request)

$CID_OPTION = "opt_CID_LLT_client4";
$SID_OPTION = "opt_SID_ANY";
$IA_PD_OPTION = "opt_IA_PD";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret3, %rfreq3) = send_layered_relay_forward_request($IF0, "relayforward_request_client4_to_relay2_to_relay1_alldhcp_2", \%rradv2, "");
 if (0 != $ret3){
        dhcpExitFail();
 }

# wait for DHCPv6 Relay Reply Message(Reply)
my ($ret4, %rrrep4) =  wait_for_relay_reply_relay2($IF0, 5, undef);
if (0 != $ret4){
        dhcpExitFail();
}


# check unicast address
if ( $rrrep4{"Frame_Ether.Packet_IPv6.Hdr_IPv6.DestinationAddress"} != $rfreq3{"Frame_Ether.Packet_IPv6.Hdr_IPv6.SourceAddress"}) {
	dhcpExitError("DHCPv6 Server not send Reply message via unicast.")
}


##-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>Messages Exchange is correct</FONT></B><BR>");
##-------------------------------------------------------------------

vClear($IF0);
vStop($IF0);
dhcpExitPass;



#NOTREACHED

########################################################################
__END__

=head1 NAME

  S_RFC3633_LayeredRelayForwardMsg_11_3_6_B.seq - Relay-reply message between multiple relay agents

=head1 TARGET

  Server

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3633_LayeredRelayForwardMsg_11_3_6_B.seq">S_RFC3633_LayeredRelayForwardMsg_11_3_6_B.seq </A>[-tooloption ...]
 -pkt <A HREF="./S_RFC3633_LayeredRelayForwardMsg_11_3_6_B.def">S_RFC3633_LayeredRelayForwardMsg_11_3_6_B.def </A>
 -tooloption: v6eval tool option
See Also <A HREF="./DHCPv6.def"> DHCPv6.def </A>
 </PRE>

=head1 INITIALIZATION

=begin html
  <UL>
  <LI><STRONG>Network Topology</STRONG></LI>
  </UL>
  <PRE>
                         TN(Requesting Router1)
                              |
Link2 -------------+----------+---------------------3ffe:501:ffff:102::/64
                   |                       
                   |                       
             TN(Relay2)
                   |                       
                   |                       
Link1 -------------+-----------------------+-------- 3ffe:501:ffff:101::/64
                                           |
                                           |
                                     TN(Relay1)
                                           |
                                           |
Link0 ------------------------+------------+-------- 3ffe:501:ffff:100::/64
                              |
                           NUT(DelegatingRouter1)
  </PRE>
  <UL>
      <LI><STRONG>Verification Points</STRONG></LI>
	<UL>
        <PRE>Relay-reply Message 
	<LI>msg-type</LI>
        <B>RELAY-REPLY</B>
        <LI>hop-count</LI>
        <B>1</B>
        <LI>link-address</LI>
        <B>0</B>       
        <LI>peer-address</LI>
        <B>3ffe:501:ffff:101::xxxx</B>       
        <LI>Relay Message option</LI>
        <UL>
	<LI>msg-type</LI>
        <B>RELAY-REPLY</B>
        <LI>hop-count</LI>
        <B>0</B>
        <LI>link-address</LI>
        <B>3ffe:501:ffff:102::xxxx</B>       
        <LI>peer-address</LI>
        <B>fe80::200:ff:fe00:b4b4</B>       
        <LI>Relay Message option</LI>
        <B>Advertise Message</B>
        </UL>
        </PRE>
  </UL>
      <LI><STRONG>Configuration</STRONG></LI>
  <UL>
	<BLOCKQUOTE>
	<TABLE BORDER>
	<TR>
	<TD><TT>Device Name</TT></TD>
	<TD><TT>Device Type</TT></TD>
	<TD><TT>I/F</TT></TD>
	<TD><TT>Assigned Prefix</TT></TD>
	<TD><TT>Link Local Addr</TT></TD>
	<TD><TT>MAC Addr</TT></TD>
	</TR>
	<TR>
	<TD><TT>DelegatingRouter1</TT></TD>
	<TD><TT>NUT</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>NUT's Linklocal address</TT></TD>
	<TD><TT>NUT's MAC address</TT></TD>
	</TR>
	<TR>
	<TD><TT>RequestingRouter1</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:b4b4</TT></TD>
	<TD><TT>00:00:00:00:b4:b4</TT></TD>
	</TR>
	<TR>
	<TD><TT>Relay1(Link0)</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a4a4</TT></TD>
	<TD><TT>00:00:00:00:a4:a4</TT></TD>
	</TR>
	<TR>
	<TD><TT>Relay1(Link1)</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link1</TT></TD>
	<TD><TT>3ffe:501:ffff:101::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a5a5</TT></TD>
	<TD><TT>00:00:00:00:a5:a5</TT></TD>
	</TR>
	<TR>
	<TD><TT>Relay2(Link1)</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link1</TT></TD>
	<TD><TT>3ffe:501:ffff:101::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:b8b8</TT></TD>
	<TD><TT>00:00:00:00:b8:b8</TT></TD>
	</TR>
	<TR>
	<TD><TT>Relay2(Link2)</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link2</TT></TD>
	<TD><TT>3ffe:501:ffff:102::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a8a8</TT></TD>
	<TD><TT>00:00:00:00:a8:a8</TT></TD>
	</TR>
	</TABLE>
	</BLOCKQUOTE>
	</UL>
</UL>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
  TN(RequestingRouter1)TN(Relay2) TN(Relay1) NUT(DelegatingRouter1)
      |                 |           |              |
      | --------------> |           |              |Solicit
      |                 | --------> |              |Relay-forward(Solicit)
      |                 |           |  ----------> |Relay-forward(Solicit)
      |                 |           |  <---------  |Relay-reply(Advertise)  (*1)
      |                 |           |              |

</PRE>

=end html

=head1 JUDGEMENT

<PRE>
(*1)PASS: NUT will send the correctly Relay-reply message.
</PRE>

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
  see also RFC3315
  20.3. Construction of  Relay-reply Messages
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut
 
