#!/usr/bin/perl
#
#Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
#Yokogawa Electric Corporation.
#All rights reserved.
#
#Redistribution and use of this software in source and binary
#forms, with or without modification, are permitted provided that
#the following conditions and disclaimer are agreed and accepted
#by the user:
#
#1. Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
#
#2. Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in
#   the documentation and/or other materials provided with
#   the distribution.
#
#3. Neither the names of the copyrighters, the name of the project
#   which is related to this software (hereinafter referred to as
#   "project") nor the names of the contributors may be used to
#   endorse or promote products derived from this software without
#   specific prior written permission.
#
#4. No merchantable use may be permitted without prior written
#   notification to the copyrighters.
#
#5. The copyrighters, the project and the contributors may prohibit
#   the use of this software at any time.
#
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
#CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
#BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
#COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
#INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
#(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
#SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
#STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
#IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#POSSIBILITY OF SUCH DAMAGE.
#
#$Id: C_RFC3315_15_3_DiscInvalidAdvWErrCltIdOpt.seq,v 1.4 2009/12/03 06:03:13 akisada Exp $
###############################################################################
BEGIN{
	$V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}
use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Client_pktdesc;

my $type	= $V6evalTool::NutDef{'Type'};
if($type ne 'host') {
	vLogHTML('<FONT COLOR="#FF0000">This test supports only Host</FONT>');
	exit($V6evalTool::exitHostOnly);
}

dhcpExitNS if(ChkFuncSupport('ADDRASSIGN'));

#--------------------------------------------------------------#
# Initialization variables
#--------------------------------------------------------------#
my $IF0_NUT = $V6evalTool::NutDef{"Link0_device"};
my $IF0 = "Link0";
vCapture($IF0);
#--------------------------------------------------------------#
# Initialize DHCPv6 Client
#--------------------------------------------------------------#
my $ret = initial_ra_w_ping($IF0,'ra_server2_to_all');
if($ret == 0){
	vLogHTML('<FONT COLOR="#FF0000">Global Address of NUT is assigned by RA!</FONT><BR>');
	dhcpExitFail;
}

$ret = vRemote("dhcp6c.rmt", "start", "iana", "iaid=111111", "link0=$IF0_NUT");
if($ret != 0) {
	vLogHTML('<FONT COLOR="#FF0000">Cannot Initialize DHCPv6 Client program.</FONT><BR>');
	dhcpExitFail;
};
#--------------------------------------------------------------#
#1.  Wait until Solicit arrives 
#--------------------------------------------------------------#
my ($retsol1,%sol1) = wait_for_solicit($IF0,30) ;
if($retsol1 != 0){
	dhcpExitFail;
}
#vClear($IF0);
#--------------------------------------------------------------#
# 2. send Advertise message  with duid different from client
#--------------------------------------------------------------#
$SID_OPTION = "opt_SID_LLT_server1";
$IA_NA_OPTION = "opt_IA_NA_Addr_woStatus";
my $cppstr = "-DNUT_DUID_TIME=200 -DNUT_DUID_EN_ENNUM=00000000 -DNUT_DUID_MAC_ADDR=0000000000000000";
my ($retadv, %adv) = send_advertise($IF0, "advertise_server1_to_nut", \%sol1, $cppstr);
if($retadv != 0){
	dhcpExitFail;
}
vClear($IF0);
#--------------------------------------------------------------#
#3.  Wait until Request arrives 
#--------------------------------------------------------------#
my ($retreq,%req) = wait_for_request($IF0,5);
if($retreq == 0){
	dhcpExitFail;
}
#--------------------------------------------------------------#
#3.  Wait until Retransmitted Solicit arrives 
#--------------------------------------------------------------#
my ($retsol2,%sol2) = wait_for_solicit($IF0,30) ;
if($retsol2 != 0){
	dhcpExitFail;
}
$ret = compare_message(\%sol1, \%sol2);
if($ret !=0){
	vLogHTML("<B> Message have been changed!</B><BR>");
	dhcpExitFail;
}
vClear($IF0);
vStop($IF0);
dhcpExitPass;
###############################################################################
__END__

=head1 NAME 

  C_RFC3315_15_3_DiscInvalidAdvWErrCltIdOpt.seq - Check when receiving Advertise with error Client identifier option

=head1 TARGET

  Client

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./C_RFC3315_15_3_DiscInvalidAdvWErrCltIdOpt.seq"> C_RFC3315_15_3_DiscInvalidAdvWErrCltIdOpt.seq</A> [-tooloption...] <BR>  -pkt  <A HREF="./C_RFC3315_15_3_DiscInvalidAdvWErrCltIdOpt.def"> C_RFC3315_15_3_DiscInvalidAdvWErrCltIdOpt.def</A> <BR>  -tooloption : v6eval tool option
<BR>
  See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A> 
</PRE>

=end html

=head1 INITIALIZATION

=begin html
  <ul>
  <li><STRONG>Network Topology</STRONG></li> 
   <PRE>
          NUT(Client)
          |           
          |                        
Link0   --+--------+------------------------ 3ffe:501:ffff:100::/64
                   |
                   |          
                   TN(Server) 
   </PRE>
  </ul>
  <ul>  
  <li><STRONG>Verification Points</STRONG></li><br>
   <PRE>
   Clients MUST discard any received Advertise messages within which 
   the contents of the Client Identifier option does not match the
   client's DUID.
   </PRE>
  </ul>
  <ul>     
  <li><STRONG>Configurations</STRONG></li><br>
   <BR>
    <TABLE BORDER="1">
    <TR>
    <TD><TT>Device Name</TT></TD>
    <TD><TT>Device Type</TT></TD>
    <TD><TT>Interface</TT></TD>
    <TD><TT>Assigned Prefix</TT></TD>
    <TD><TT>Link Local Addr</TT></TD>
    <TD><TT>MAC Addr</TT></TD>
    </TR>
    <TR>
    <TD><TT>Client</TT></TD>
    <TD><TT>NUT</TT></TD>
    <TD><TT>Link0</TT></TD>
    <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
    <TD><TT>NUT's Linklocal address</TT></TD>
    <TD><TT>NUT's MAC address</TT></TD>
    </TR>
    <TR>
    <TD><TT>Server</TT></TD>
    <TD><TT>TN</TT></TD>
    <TD><TT>Link0</TT></TD>
    <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
    <TD><TT>fe80::200:ff:fe00:a1a1</TT></TD>
    <TD><TT>00:00:00:00:a1:a1</TT></TD>
    </TR>
    </TABLE>
  </ul>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
<BR>
       NUT      TN
        |       | 
        |       |Initialize NUT(as a DHCPv6 client)
        | ----> |<B>Solicit</B> 
        | <---- |<B>Advertise</B> w/Client Id Option with DUID which not matching the client`s DUID
        | ----> |<B>Solicit</B> (3*)
        |       |

</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
<BR>  
  (3*)PASS: NUT transmits Solicit message. 
</PRE>

=end html

=head1 TERMINATION

=begin html
<PRE>
  N/A
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
  Also see RFC3315
<BR>
  15.3. Advertise Message
<BR>
</PRE>

=end html

=head1 SEE ALSO

=begin html
<PRE>
<BR>
  perldoc  V6evalTool
<BR>
</PRE>

=end html

