#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/rfc3315/S_RFC3315_5.1_InvalidUDPPorts.seq,v 1.6 2009/12/03 06:03:17 akisada Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Server_pktdesc;

my $type	= $V6evalTool::NutDef{'Type'};
if($type ne 'host') {
	vLogHTML('<FONT COLOR="#FF0000">This test supports only Host</FONT>');
	exit($V6evalTool::exitHostOnly);
}

dhcpExitNS if(ChkFuncSupport('ADDRASSIGN'));

#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";
#initial NUT config parameters,
my %NUT_Server_Config = (
	'if_nut0'=> "$V6evalTool::NutDef{Link0_device}",
	'init_opcode' => "vRemote(\"dhcp6s.rmt\", \"start\",\"link0=$V6evalTool::NutDef{Link0_device}\",\"startaddr=3ffe:501:ffff:100::10\",\"endaddr=3ffe:501:ffff:100::11\")"
);

dhcpSvrInit(\%NUT_Server_Config);
vClear($IF0);

#--------------------------------------------------------------#
# 1. send solicit message
#--------------------------------------------------------------#
$CID_OPTION = "opt_CID_LLT_client1";
$IA_NA_OPTION = "opt_IA_NA";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret1, %sol1) = send_solicit($IF0, "solicit_client1_to_alldhcp_invalidUDP", undef);
dhcpExitFail() if (0 != $ret1);
my $dstport = get_udp_destport(\%sol1);
vLogHTML("<B>Solicit message's destination port is $dstport.</B><BR>");

#--------------------------------------------------------------#
# 2. wait for any message
#--------------------------------------------------------------#
my ($ret2, %frame2) = wait_for_dhcp6frame($IF0, 5, "nut_to_dhcp_any");
if (0 == $ret2) {
	dhcpExitError("NUT returns unexpected message.<BR>");
}

#my %reterr = vRecvPacket($IF0, 10, 0, 0, "dst_unreach");
#if ($reterr{status} != 0) {
#     vLogHTML('<FONT COLOR="#FF0000">TN can not receive ICMPv6 error message from NUT</FONT><BR>');
#     dhcpExitFail;
#}
#elsif ($reterr{recvFrame} eq 'dst_unreach') {
#     vLogHTML("<B>TN can receive ICMPv6 error message from NUT  </B><BR>");
#     vLog("OK");
#}

#-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>The process of receipt invalid message is correct.</FONT></B><BR>");
#-------------------------------------------------------------------
vClear($IF0);
vStop($IF0);
dhcpExitPass();
#NOTREACHED

########################################################################
__END__

=head1 NAME

  S_RFC3315_5.1_InvalidUDPPorts.seq - Implementation of DHCP constants: Invalid UDP port

=head1 TARGET

  Server

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3315_5.1_InvalidUDPPorts.seq">S_RFC3315_5.1_InvalidUDPPorts.seq </A>[-tooloption ...]
 -pkt <A HREF="./S_RFC3315_5.1_InvalidUDPPorts.def">S_RFC3315_5.1_InvalidUDPPorts.def </A> 
 -tooloption: v6eval tool option
See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A>
 </PRE>

=head1 INITIALIZATION

=begin html
  <UL>
  <LI><STRONG>Network Topology</STRONG></LI>
  </UL>
  <PRE>
          TN(Client1)  
             |
Link0 -------+-----------+--------------- 3ffe:501:ffff:100::/64
                         |
                       NUT(Server1)
  </PRE>
  <UL>
      <LI><STRONG>Verification Points</STRONG></LI><P>
          <UL>
          <PRE>
   Clients and servers exchange DHCP messages using UDP. Clients listen
   for DHCP messages on UDP port 546.  Servers and relay agents listen
   for DHCP messages on UDP port 547.
          </UL>
  </UL>

=head1 TEST PROCEDURE

=begin html
<PRE>
       NUT      TN
        |       | 
        |       | initialize NUT (as a DHCPv6 Server)
        |       | 
        | <---- | Solicit UDP destination port 33536
        | --->X |<B>No DHCPv6 Message</B> (2*)        
        |       | 
</PRE>

=head1 JUDGEMENT

<PRE>
  (2*)PASS: NUT should not send any DHCPv6 messages.
</PRE>

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
see also RFC3315
5.2. UDP Ports
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut

