#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/rfc3315/S_RFC3315_7_Relay-replyMsgFormat.seq,v 1.4 2009/12/03 06:03:17 akisada Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Server_pktdesc;

my $type	= $V6evalTool::NutDef{'Type'};
if($type ne 'host') {
	vLogHTML('<FONT COLOR="#FF0000">This test supports only Host</FONT>');
	exit($V6evalTool::exitHostOnly);
}

dhcpExitNS if(ChkFuncSupport('ADDRASSIGN'));

my $strIndexBase = "Frame_Ether.Packet_IPv6.Upp_UDP";

#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";
#initial NUT config parameters,
my %NUT_Server_Config = (
	'if_nut0'=> "$V6evalTool::NutDef{Link0_device}",
	'init_opcode' => "vRemote(\"dhcp6s.rmt\", \"start\",\"link0=$V6evalTool::NutDef{Link0_device}\",\"startaddr=3ffe:501:ffff:101::10\",\"endaddr=3ffe:501:ffff:101::11\",\"valduid=$DUID_CLIENT\")"
);
dhcpSvrInit(\%NUT_Server_Config);

vClear($IF0);

#--------------------------------------------------------------#
# Main Procedure
#--------------------------------------------------------------#
# set Options
$CID_OPTION = "opt_CID_LLT_client1";
$IA_NA_OPTION = "opt_IA_NA";
$ElapsedTime_OPTION = "opt_ElapsedTime";
# send DHCPv6 Relay Forward Message(Solicit)
my($ret1, %rfsol1) = send_relay_forward($IF0, "relayforward_solicit_client1_to_alldhcp");
 if (0 != $ret1){
 	dhcpExitFail();
 }

# wait for DHCPv6 Relay Reply Message(Advertise)
my ($ret2, %rradv2) =  wait_for_relay_reply_advertise($IF0, 5,"relay_reply_nut_relay");
if (0 != $ret2){
	dhcpExitFail();
}
if ($rfsol1{"$strIndexBase.Udp_DHCPv6_RelayForward.HopCount"} !=
    $rradv2{"$strIndexBase.Udp_DHCPv6_RelayReply.HopCount"}){
	dhcpExitError("The HopCount isn\'t same between Relay Forward Msg & Relay Reply Msg<BR>");
}else{
	my $msg = "<b><font color='blue'>HopCount matched.</font></b>:";
	$msg .= $rfsol1{"$strIndexBase.Udp_DHCPv6_RelayForward.HopCount"};
	$msg .= " == ";
	$msg .= $rradv2{"$strIndexBase.Udp_DHCPv6_RelayReply.HopCount"};
	$msg .= "<br>";
	vLogHTML($msg);
}

if ($rfsol1{"$strIndexBase.Udp_DHCPv6_RelayForward.LinkAddr"} !=
    $rradv2{"$strIndexBase.Udp_DHCPv6_RelayReply.LinkAddr"}){
	dhcpExitError("The LinkAddr isn\'t same between Relay Forward Msg & Relay Reply Msg<BR>");
}else{
	my $msg = "<b><font color='blue'>LinkAddr matched.</font></b>:";
	$msg .= $rfsol1{"$strIndexBase.Udp_DHCPv6_RelayForward.LinkAddr"};
	$msg .= " == ";
	$msg .= $rradv2{"$strIndexBase.Udp_DHCPv6_RelayReply.LinkAddr"};
	$msg .= "<br>";
	vLogHTML($msg);
}

if ($rfsol1{"$strIndexBase.Udp_DHCPv6_RelayForward.PeerAddr"} !=
    $rradv2{"$strIndexBase.Udp_DHCPv6_RelayReply.PeerAddr"}){
	dhcpExitError("The PeerAddr isn\'t same between Relay Forward Msg & Relay Reply Msg<BR>");
}else{
	my $msg = "<b><font color='blue'>PeerAddr matched.</font></b>:";
	$msg .= $rfsol1{"$strIndexBase.Udp_DHCPv6_RelayForward.PeerAddr"};
	$msg .= " == ";
	$msg .= $rradv2{"$strIndexBase.Udp_DHCPv6_RelayReply.PeerAddr"};
	$msg .= "<br>";
	vLogHTML($msg);
}
# check options in Advertise Message
dhcpExitFail() if (0 != options_exist(\%rradv2, ($CMP_RELAYMSG)));
#-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>The Format of Relay-reply Message is correct</FONT></B><BR>");
#-------------------------------------------------------------------

vClear($IF0);
vStop($IF0);
dhcpExitPass();

#NOTREACHED

########################################################################
__END__

=head1 NAME

  S_RFC3315_7_Relay-replyMsgFormat.seq - Check Server's Relay-reply Message Format

=head1 TARGET

  Server

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3315_7_Relay-replyMsgFormat.seq">S_RFC3315_7_Relay-replyMsgFormat.seq </A>[-tooloption ...]
 -pkt <A HREF="./S_RFC3315_7_Relay-replyMsgFormat.def">S_RFC3315_7_Relay-replyMsgFormat.def </A> 
 -tooloption: v6eval tool option
See Also <A HREF="./DHCPv6.def"> DHCPv6.def </A>
 </PRE>

=end html

=head1 INITIALIZATION

=begin html
  <UL>
  <LI><STRONG>Network Topology</STRONG></LI>
  </UL>
 <PRE>
          TN(Client)
             |
Link1 -------+-------------+---------------- 3ffe:501:ffff:101::/64
                           |
                         TN(Relay1)
                           |
Link0 ---------------------+----------+----- 3ffe:501:ffff:100::/64
                                      |
                                 NUT(Server1)
  </PRE>
  <UL>
      <LI><STRONG>Verification Points</STRONG></LI><P>
          <UL>
          <PRE>Relay-reply Message Format
      <LI>msg-type</LI>
          <B>RELAY-REPL(13)</B>
      <LI>hop-count</LI>
          <B>Copied from the Relay-forward message</B>
      <LI>link-address</LI>
          <B>Copied from the Relay-forward message</B>
      <LI>peer-address</LI>
          <B>Copied from the Relay-forward message</B>
      <LI>options</LI>
          <B>Relay Message option</B>
          </UL>
          </PRE>
  </UL>
  <UL>
      <LI><STRONG>Configuration</STRONG></LI>
  </UL>
	<BLOCKQUOTE>
	<TABLE BORDER>
	<TR>
	<TD><TT>Device Name</TT></TD>
	<TD><TT>Device Type</TT></TD>
	<TD><TT>I/F</TT></TD>
	<TD><TT>Assigned Prefix</TT></TD>
	<TD><TT>Link Local Addr</TT></TD>
	<TD><TT>MAC Addr</TT></TD>
	</TR>
	<TR>
	<TD><TT>Server1</TT></TD>
	<TD><TT>NUT</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>NUT's Linklocal address</TT></TD>
	<TD><TT>NUT's MAC address</TT></TD>
	</TR>
	<TR>
	<TD><TT>Relay1(Link0)</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a4a4</TT></TD>
	<TD><TT>00:00:00:00:a4:a4</TT></TD>
	</TR>
	<TR>
	<TD><TT>Relay1(Link1)</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link1</TT></TD>
	<TD><TT>3ffe:501:ffff:101::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a5a5</TT></TD>
	<TD><TT>00:00:00:00:a5:a5</TT></TD>
	</TR>
	</TABLE>
	</BLOCKQUOTE>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
	       NUT     TN
	        |       |
	        |       |        initialize NUT (as a DHCPv6 Server)
	        |       |        
	        | <---- |        Relay Forward(Solicit)
	        | ----> |        Relay Reply(Advertise)  (*1)
</PRE>

=end html

=head1 JUDGEMENT

 The server's Relay-reply message(*1 )'s Format must be base on description 
 of RFC(see above Verification Points).

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
  see also RFC3315
  7. Relay Agent/Server Message Formats
  20.3. Construction of Relay-reply Messages
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut
