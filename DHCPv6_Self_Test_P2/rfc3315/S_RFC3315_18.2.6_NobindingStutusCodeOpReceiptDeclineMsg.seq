#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/rfc3315/S_RFC3315_18.2.6_NobindingStutusCodeOpReceiptDeclineMsg.seq,v 1.5 2009/12/03 06:03:17 akisada Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Server_pktdesc;

my $type	= $V6evalTool::NutDef{'Type'};
if($type ne 'host') {
	vLogHTML('<FONT COLOR="#FF0000">This test supports only Host</FONT>');
	exit($V6evalTool::exitHostOnly);
}

dhcpExitNS if(ChkFuncSupport('ADDRASSIGN'));

#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";
#initial NUT config parameters,
my %NUT_Server_Config = (
	'if_nut0'=> "$V6evalTool::NutDef{Link0_device}",
	'init_opcode' => "vRemote(\"dhcp6s.rmt\", \"start\",\"link0=$V6evalTool::NutDef{Link0_device}\",\"startaddr=3ffe:501:ffff:100::10\",\"endaddr=3ffe:501:ffff:100::11\")"
);

dhcpSvrInit(\%NUT_Server_Config);
vClear($IF0);
#--------------------------------------------------------------#
# Main Procedure
#--------------------------------------------------------------#
vLogHTML('<B>==== Receipt of Decline Messages (w/o IA option) ====</B><BR>');




# 1. send DHCPv6 Solicit Message
$CID_OPTION = "opt_CID_LLT_client1";
$IA_NA_OPTION = "opt_IA_NA";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret1, %sol1) = send_solicit($IF0, "solicit_client1_to_alldhcp", "");
if (0 != $ret1){
	dhcpExitFail();
}




# 2. wait for DHCPv6 Advertise Message
my ($ret2, %adv2) = wait_for_advertise($IF0, 5);
 if (0 != $ret2){
 	dhcpExitFail();
 }

# check options in Advertise Message
 if (0 != options_exist(\%adv2, ($CMP_CID|$CMP_SID))){
 	dhcpExitError("<B>Do not include necessary options!</B>");
}

# compare Options
if (0 != compare_options(\%sol1, \%adv2, ($CMP_CID|$CMP_TRANS_ID))){
	dhcpExitError("<B>Option Error</B>");
}

# 3. send DHCPv6 Request Message
$CID_OPTION = "opt_CID_LLT_client1";
$IA_NA_OPTION = "opt_IA_NA";
$SID_OPTION = "opt_SID_ANY";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret3, %req3) = send_request($IF0, "request_client1_to_alldhcp", \%adv2, "");
 if (0 != $ret3) {
	dhcpExitFail() 
}

# 4.wait for DHCPv6 Reply Message
my ($ret4, %rep4) = wait_for_reply($IF0, 5);
 if (0 != $ret4){
	dhcpExitFail();
}

# check options in Reply Message
 if (0 != options_exist(\%rep4, ($CMP_IA_NA|$CMP_CID|$CMP_SID))){
	 dhcpExitError("<B>Do not include necessary options!</B>");
 }

# compare Client ID Options
 if (0 != compare_options(\%req3, \%rep4, $CMP_CID)){
	 dhcpExitError("<B>The client ID option in Reply Msg is error!</B>");
}

 if (0 != compare_options(\%req3, \%rep4, $CMP_TRANS_ID)){
	 dhcpExitError("<B>The transaction ID in Reply Msg is error!</B>");
}

# send DHCPv6 Decline Message
$CID_OPTION = "opt_CID_LLT_client1";
$SID_OPTION = "opt_SID_ANY";
$IA_NA_OPTION = "opt_IA_NA_Decline_Nobinding1";
$IA_NA_OPTION1 = "opt_IA_NA_Decline_Nobinding2";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret5, %rel5) = send_decline($IF0, "decline_client1_to_alldhcp", \%rep4,"");
dhcpExitFail if (0 != $ret5);

# wait for DHCPv6 Reply Message
my ($ret6, %rep6) = wait_for_reply($IF0, 5);
if (0 != $ret6){
	dhcpExitFail();
}

# check Options
if (0 != options_exist(\%rep6, ($CMP_SID|$CMP_CID))){
	dhcpExitError("<B>Do not include necessary options!</B>");
}

# compare CID
if (0 != compare_options(\%rel5, \%rep6, ($CMP_CID|$CMP_TRANS_ID|$CMP_SID))){
	dhcpExitFail();
}

# check existence of IA_NA option
dhcpExitError("<B>NUT does not include IA_NA option!</B>") if options_exist(\%rep6,$CMP_IA_NA);

#----
# check existence of IA_Address option
dhcpExitError("<B>NUT includes invalid IA_Address option in the 1st IA_NA option!</B>")
	unless option_exist(\%rep6,"Opt_DHCPv6_IA_NA.Opt_DHCPv6_IA_Address");

# check existence and location of Status code option
dhcpExitError("<B>NUT does not include Status Code option in the 1st IA_NA option.</B>")
	if option_exist(\%rep6,"Opt_DHCPv6_IA_NA.Opt_DHCPv6_StatusCode");

# check the value of status code
# NoBinding(3)
my $result = check_statuscode(\%rep6,"Opt_DHCPv6_IA_NA.Opt_DHCPv6_StatusCode.StatusCode",$STATUS_CODE_NOBINDING);
dhcpExitError("<B>NUT does not include valid NoBinding Status code in the 1st IA_NA option!</B><BR>") if ($result);

#----
# check existence of IA_Address option
dhcpExitError("<B>NUT includes invalid IA_Address option in the 2nd IA_NA option!</B>")
	unless option_exist(\%rep6,"Opt_DHCPv6_IA_NA2.Opt_DHCPv6_IA_Address");

# check existence and location of Status code option
dhcpExitError("<B>NUT does not include Status Code option in the 2nd IA_NA option.</B>")
	if option_exist(\%rep6,"Opt_DHCPv6_IA_NA2.Opt_DHCPv6_StatusCode");

# check the value of status code
# NoBinding(3)
my $result = check_statuscode(\%rep6,"Opt_DHCPv6_IA_NA2.Opt_DHCPv6_StatusCode.StatusCode",$STATUS_CODE_NOBINDING);
dhcpExitError("<B>NUT does not include valid NoBinding Status code in the 2nd IA_NA option!</B><BR>") if ($result);

#----
# check the Status Code option "Success" in the main part.
#unless (options_exist(\%rep6,$CMP_STATUS_CODE)){
#	my $result = check_statuscode(\%rep6,"Opt_DHCPv6_StatusCode.StatusCode",$STATUS_CODE_SUCCESS);
#	dhcpExitError("<B>The returned status code is not Success.</B>") if($result);
#}

#-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>The Message exchange is correct</FONT></B><BR>");
#-------------------------------------------------------------------

vClear($IF0);
vStop($IF0);
dhcpExitPass(); 
#NOTREACHED

########################################################################
__END__

=head1 NAME

  S_RFC3315_18.2.6_NobindingStutusCodeOpReceiptDeclineMsg.seq - Reply when receipt Decline message

=head1 TARGET

  Server

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3315_18.2.6_NobindingStutusCodeOpReceiptDeclineMsg.seq">S_RFC3315_18.2.6_NobindingStutusCodeOpReceiptDeclineMsg.seq </A>[-tooloption ...] 
 -pkt <A HREF="./S_RFC3315_18.2.6_NobindingStutusCodeOpReceiptDeclineMsg.def">S_RFC3315_18.2.6_NobindingStutusCodeOpReceiptDeclineMsg.def </A> 
 -tooloption: v6eval tool option
See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A>
 </PRE>

=head1 INITIALIZATION

=begin html
  <UL>
  <LI><STRONG>Network Topology</STRONG></LI>
  </UL>
  <PRE>
          TN(Client1)  
             |
Link0 -------+-----------+--------------- 3ffe:501:ffff:100::/64
                         |
                       NUT(Server1)
  </PRE>
  <UL>
      <LI><STRONG>Verification Points</STRONG></LI>
<PRE>
For each IA in the Decline message for which the server has no binding information, the
server adds an IA option using the IAID from the Decline message and includes
<B>a Status Code option with the value NoBinding in the IA option. </B>
<B>No other options are included in the IA option.</B>
And the Reply message need include a status code option with status value <B>Success</B>.
</PRE>
  <UL>
  <PRE>
Reply Message
	<LI>msg-type</LI>
	<B>REPLY(7)</B>
	<LI>Status Code option</LI>
	<B>value=Success(0)</B>	
	<LI>IA_NA option 1</LI>
	<UL>
	<LI>IAID </LI>
	<B>Same as the Decline message</B>
	<LI>Status Code option</LI>
	<B>value=NoBinding(3)</B>
	</UL>
	<LI>IA_NA option 2</LI>
	<UL>
	<LI>IAID </LI>
	<B>Same as the Release message</B>
	<LI>Status Code option</LI>
	<B>value=NoBinding(3)</B>
	</UL>
  </PRE>
  </UL>
      <LI><STRONG>Configuration</STRONG></LI>
  <UL>
	<BLOCKQUOTE>
	<TABLE BORDER>
	<TR>
	<TD><TT>Device Name</TT></TD>
	<TD><TT>Device Type</TT></TD>
	<TD><TT>I/F</TT></TD>
	<TD><TT>Assigned Prefix</TT></TD>
	<TD><TT>Link Local Addr</TT></TD>
	<TD><TT>MAC Addr</TT></TD>
	<TD><TT>IA_NA option 1</TT></TD>
	<TD><TT>IA_NA option 2</TT></TD>
	</TR>
	<TR>
	<TD><TT>Server1</TT></TD>
	<TD><TT>NUT</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>NUT's Linklocal address</TT></TD>
	<TD><TT>NUT's MAC address</TT></TD>
	<TD><TT>Yes</TT></TD>
	<TD><TT>Yes</TT></TD>
	</TR>
	<TR>
	<TD><TT>Client1</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a2a2</TT></TD>
	<TD><TT>00:00:00:00:a2:a2</TT></TD>
	<TD><TT>Yes</TT></TD>
	<TD><TT>Yes</TT></TD>
	</TABLE>
	</BLOCKQUOTE>
	</UL>
</UL>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
       NUT     TN
        |       | 
        |       | initialize NUT (as a DHCPv6 Server)
        |       | 
        | <---- | Solicit
        | ----> | Advertise
        | <---- | Request
        | ----> | Reply
        |       | 
        |       | 
        |       | 
        | <---- | Decline (w/  IA_NA option 1, IA_NA option2) (No binding information)
        | ----> | Reply	(*1)(w/  IA_NA option 1, IA_NA option2)
        |       |
</PRE>

=end html

=head1 JUDGEMENT

<PRE>
(*1) PASS:  NUT send Reply message(IA_NA options include Status Code option,value = NoBinding(3)).
            And it include a "Success" status code option.
</PRE>

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
   see also RFC3315
   18 DHCP Client-Initiated Configuration Exchange
   18.2.7. Receipt of Decline Messages
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut


