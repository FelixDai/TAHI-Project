#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/rfc3315/S_RFC3315_17.2.2_Creation-TransmissionOfAdvertiseMsgWithaIAOP.seq,v 1.4 2009/12/03 06:03:16 akisada Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Server_pktdesc;

my $type	= $V6evalTool::NutDef{'Type'};
if($type ne 'host') {
	vLogHTML('<FONT COLOR="#FF0000">This test supports only Host</FONT>');
	exit($V6evalTool::exitHostOnly);
}

dhcpExitNS if(ChkFuncSupport('ADDRASSIGN'));

#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";
#initial NUT config parameters,
my %NUT_Server_Config = (
	'if_nut0'=> "$V6evalTool::NutDef{Link0_device}",
	'init_opcode' => "vRemote(\"dhcp6s.rmt\", \"start\",\"link0=$V6evalTool::NutDef{Link0_device}\",\"startaddr=3ffe:501:ffff:100::10\",\"endaddr=3ffe:501:ffff:100::11\")"
);

dhcpSvrInit(\%NUT_Server_Config);
vClear($IF0);
#############################IA_NA#########################################

# send DHCPv6 Solicit Message
$CID_OPTION = "opt_CID_LLT_client1";
$IA_NA_OPTION = "opt_IA_NA";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret1, %sol1) = send_solicit($IF0, "solicit_client1_to_alldhcp", "");
dhcpExitFail() if (0 != $ret1);

# wait for DHCPv6 Advertise Message
my ($ret2, %adv2) = wait_for_advertise($IF0, 5);
dhcpExitFail() if (0 != $ret2);

# check options in Advertise Message
 if (0 != options_exist(\%adv2, ($CMP_CID|$CMP_SID|$CMP_IA_NA))){
	dhcpExitError("Required option does not exist");
}
# compare CID
dhcpExitFail() if (0 != compare_options(\%sol1, \%adv2, ($CMP_CID|$CMP_TRANS_ID)));

# check unicast address
if ( $adv2{"Frame_Ether.Packet_IPv6.Hdr_IPv6.DestinationAddress"} != $sol1{"Frame_Ether.Packet_IPv6.Hdr_IPv6.SourceAddress"}) {
	dhcpExitError("DHCPv6 Server not send Advertise message via unicast.")
}
#--------------------------------------------------------------#
# check IAID in IA_NA option
#--------------------------------------------------------------#
my $option_base = "Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Advertise.Opt_DHCPv6_IA_NA";
my $option_iaid = $option_base."."."Identifier";
if ( $adv2{"Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Advertise.Opt_DHCPv6_IA_NA.Identifier"} != $sol1{"Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Solicit.Opt_DHCPv6_IA_NA.Identifier"}) {
	dhcpExitError("<B>IAID does not match.</B>")
}
#--------------------------------------------------------------#
# check IA Address option
#--------------------------------------------------------------#
dhcpExitError("<B>NUT does not include IA_Address option!</B>") 
	if(option_exist(\%adv2,"Opt_DHCPv6_IA_NA.Opt_DHCPv6_IA_Address"));

my $option_base = "Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Advertise.Opt_DHCPv6_IA_NA.Opt_DHCPv6_IA_Address";
my $option_code = $option_base."."."Code";
my $option_len = $option_base."."."Length";
my $option_addr = $option_base."."."Address";
my $option_plife = $option_base."."."PreferredLifetime";
my $option_vlife = $option_base."."."ValidLifetime";


if(defined $adv2{$option_base}){
	vLogHTML("<B> IA address option Code = $adv2{$option_code} <B><BR>");
	vLogHTML("<B> IA address option Length = $adv2{$option_len} <B><BR>");
	vLogHTML("<B> IA address option Address = $adv2{$option_addr} <B><BR>");
	vLogHTML("<B> IA address option preferredLifetime = $adv2{$option_plife} <B><BR>");
	vLogHTML("<B> IA address option ValidLifetime = $adv2{$option_vlife} <B><BR>");
}
else{
	vLogHTML("<B> NO IA address option <B><BR>");
	dhcpExitFail;
}
#-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>The Messages Exchange is correct</FONT></B><BR>");
#-------------------------------------------------------------------

vClear($IF0);
vStop($IF0);
dhcpExitPass();
#NOTREACHED

########################################################################
__END__

=head1 NAME

  S_RFC3315_17.2.2_Creation-TransmissionOfAdvertiseMsgWithaIAOP.seq - Respond to the Solicit Message(w/ IA_NA option)

=head1 TARGET

  Server

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3315_17.2.2_Creation-TransmissionOfAdvertiseMsgWithaIAOP.seq">S_RFC3315_17.2.2_Creation-TransmissionOfAdvertiseMsgWithaIAOP.seq </A>[-tooloption ...]
 -pkt <A HREF="./S_RFC3315_17.2.2_Creation-TransmissionOfAdvertiseMsgWithaIAOP.def">S_RFC3315_17.2.2_Creation-TransmissionOfAdvertiseMsgWithaIAOP.def </A>
 -tooloption: v6eval tool option
See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A>
 </PRE>

=head1 INITIALIZATION

=begin html
  <ul>
  <li><STRONG>Network Topology</STRONG></li>
  </ul>
  <PRE>
          TN(Client1)  
             |
Link0 -------+----------+-------------- 3ffe:501:ffff:100::/64
                        |
                       NUT(Server1)
  </PRE>
  <ul>
      <li><STRONG>Verification Points</STRONG></li>
	<ul>
	<PRE>
Advertise Message
	<li>msg-type</li>
	<b>ADVERTISE(2)</b>
	<li>transaction-id</li>
        Same as the Solicit Message
	<li>Server Identifier option</li>
	Any
	<li>Client Identifier option</li>
	Same as the Solicit Message
	<li>IA_NA option</li>
<UL>
<LI>option-code</LI>
<B>OPTION_IA_NA (3)</B>
<LI>option-len</LI>
<B>12 + length of IA_NA-options field</B>
<LI>IAID</LI>
<B>Same as Solisit message</B>
<LI>T1</LI>
<B>number</B>
<LI>T2</LI>
<B>number</B>
<LI>IA_NA-options</LI>
<B>IA Address option</B>
</UL>
	</ul>
	</PRE>
  </ul>
  <ul>
      <li><STRONG>Configuration</STRONG></li>
	<BLOCKQUOTE>
	<TABLE BORDER>
	<TR>
	<TD><TT>Device Name</TT></TD>
	<TD><TT>Device Type</TT></TD>
	<TD><TT>I/F</TT></TD>
	<TD><TT>Assigned Prefix</TT></TD>
	<TD><TT>Link Local Addr</TT></TD>
	<TD><TT>MAC Addr</TT></TD>
	</TR>
	<TR>
	<TD><TT>Server1</TT></TD>
	<TD><TT>NUT</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>NUT's Linklocal address</TT></TD>
	<TD><TT>NUT's MAC address</TT></TD>
	</TR>
	<TR>
	<TD><TT>Client1</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a2a2</TT></TD>
	<TD><TT>00:00:00:00:a2:a2</TT></TD>
	</TR>
	</TABLE>
	</BLOCKQUOTE>
</ul>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
       NUT     TN
        |       | 
        |       | initialize NUT (as a DHCPv6 Server)
        |       | 
        | <---- | Solicit   (w/ IA_NA option)
        | ----> | Advertise (w/ IA_NA option)(*1)
        |       | 
</PRE>

=end html

=head1 JUDGEMENT

<PRE>
The Solicit message must exchanged correctly.
(*1) PASS:The Advertise message must include IA_NA option.
</PRE>

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
   see also RFC3315
   17.2.2.  Creation and Transmission of Advertise Messages 
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut

