#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/rfc3315/S_RFC3315_20.3_Relay-replyThSameRelayAgent.seq,v 1.2 2009/12/03 06:03:17 akisada Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Server_pktdesc;

my $type	= $V6evalTool::NutDef{'Type'};
if($type ne 'host') {
	vLogHTML('<FONT COLOR="#FF0000">This test supports only Host</FONT>');
	exit($V6evalTool::exitHostOnly);
}

dhcpExitNS if(ChkFuncSupport('ADDRASSIGN'));

#Prompt Strings define
my $strErrDest = 'NG: The Destination address of Relay-reply Message is not correctly!';

#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";
#initial NUT config parameters,
my %NUT_Server_Config = (
	'if_nut0'=> "$V6evalTool::NutDef{Link0_device}",
	'init_opcode' => "vRemote(\"dhcp6s.rmt\", \"start\",\"link0=$V6evalTool::NutDef{Link0_device}\",\"startaddr=3ffe:501:ffff:101::10\",\"endaddr=3ffe:501:ffff:101::11\",\"valduid=$DUID_CLIENT\")"
);

dhcpSvrInit(\%NUT_Server_Config);
vClear($IF0);
#--------------------------------------------------------------#
# Main Procedure
#--------------------------------------------------------------#
vLogHTML('<B>==== Relay Relay-reply Message from the same relay agent  ====</B><BR>');
#--------------------------------------------------------------#

# set Options
$CID_OPTION = "opt_CID_LLT_client1";
$IA_NA_OPTION = "opt_IA_NA";
$ElapsedTime_OPTION = "opt_ElapsedTime";
# send DHCPv6 Relay Forward Message(Solicit) (Relay1-->NUT)
my($ret1, %rfsol1) = send_relay_forward($IF0, "relayforward_solicit_client1_to_alldhcp_relay1");
 if (0 != $ret1){
 	dhcpExitFail();
 }

# wait for DHCPv6 Relay Reply Message(Advertise) for Relay 1
my ($ret2, %rradv2) =  wait_for_relay_reply_advertise($IF0, 5,undef);
if (0 != $ret2){
	dhcpExitError("Can not receive the Relay-reply Message(Advertise)");
}

 # check Destination (eq  Relay 1)
if( $rradv2{'Frame_Ether.Packet_IPv6.DestinationAddress'} ne $rfsol1{'Frame_Ether.Packet_IPv6.SourceAddress'}){
	dhcpExitError("$strErrDest");
}


$CID_OPTION = "opt_CID_LLT_client1";
$IA_NA_OPTION = "opt_IA_NA";
# send DHCPv6 Relay Forward Message(Solicit) (Relay2-->NUT)
my($ret3, %rfsol3) = send_relay_forward($IF0, "relayforward_solicit_client1_to_alldhcp_relay2");
 if (0 != $ret3){
 	dhcpExitFail();
 }

# wait for DHCPv6 Relay Reply Message(Advertise) for Relay 2
my ($ret4, %rradv4) =  wait_for_relay_reply_advertise($IF0, 5,"relay_reply_nut_relay2_0"); 
if (0 != $ret4){
	dhcpExitError("Can not receive the Relay-reply Message(Advertise)");
}

# check Destination (eq  Relay 2)
if( $rradv4{'Frame_Ether.Packet_IPv6.DestinationAddress'} ne $rfsol3{'Frame_Ether.Packet_IPv6.SourceAddress'}){
	dhcpExitError("$strErrDest");
}

#-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>The Message exchange is correct</FONT></B><BR>");
#-------------------------------------------------------------------

vClear($IF0);
vStop($IF0);
dhcpExitPass(); 
#NOTREACHED
########################################################################
__END__

=head1 NAME

  S_RFC3315_20.3_Relay-replyThSameRelayAgent.seq - Relay relay-reply message from same relay agent

=head1 TARGET

  Server

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3315_20.3_Relay-replyThSameRelayAgent.seq">S_RFC3315_20.3_Relay-replyThSameRelayAgent.seq </A>[-tooloption ...]
 -pkt <A HREF="./S_RFC3315_20.3_Relay-replyThSameRelayAgent.def">S_RFC3315_20.3_Relay-replyThSameRelayAgent.def </A>
 -tooloption: v6eval tool option
 See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A>
 </PRE>

=head1 INITIALIZATION

=begin html
  <UL>
  <LI><STRONG>Network Topology</STRONG></LI>
  </UL>
 <PRE>
                          TN(Client1)
                              |
Link1 -------------+----------+------------+--------3ffe:501:ffff:101::/64
                   |                       |
                   |                       |
                   |                       |
             TN(Relay1)                 TN(Relay2)
                   |                       |
                   |                       |
Link0 -------------+----------+------------+-------- 3ffe:501:ffff:100::/64
                              |
                           NUT(Server1)
  </PRE>
  <UL>
      <LI><STRONG>Verification Points</STRONG><p>
          <UL>
          <PRE>
NUT's Message 
The Relay-reply message will be relayed  through <B>the same relay agent(TN) </B>
that received the message from the client.
          </PRE>
          </UL>
  </UL>
  <UL>
      <LI><STRONG>Configuration</STRONG></LI>
	<BLOCKQUOTE>
	<TABLE BORDER>
	<TR>
	<TD><TT>Device Name</TT></TD>
	<TD><TT>Device Type</TT></TD>
	<TD><TT>I/F</TT></TD>
	<TD><TT>Assigned Prefix</TT></TD>
	<TD><TT>Link Local Addr</TT></TD>
	<TD><TT>MAC Addr</TT></TD>
	</TR>
	<TR>
	<TD><TT>Server1</TT></TD>
	<TD><TT>NUT</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>NUT's Linklocal address</TT></TD>
	<TD><TT>NUT's MAC address</TT></TD>
	</TR>
	<TR>
	<TD><TT>Client1</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:101::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a2a2</TT></TD>
	<TD><TT>00:00:00:00:a2:a2</TT></TD>
	</TR>
	<TR>
	<TD><TT>Relay1(Link0)</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a4a4</TT></TD>
	<TD><TT>00:00:00:00:a4:a4</TT></TD>
	</TR>
	<TR>
	<TD><TT>Relay2(Link0)</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a7a7</TT></TD>
	<TD><TT>00:00:00:00:a7:a7</TT></TD>
	</TR>
	</TABLE>
	</BLOCKQUOTE>
  </UL>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
	    TN(Client1) TN(Relay1) NUT(Server1)
	        |       |         |
	        | ----> |         |Solicit
	        |       | ----->  |Relay-forward(Solicit)
	        |       | <----   |Relay-reply(Advertise)  (*1)
	        | <---- |         |Advertise
	        |       |         |
					wait for 5s<BR>
	    TN(Client1) TN(Relay2)NUT(Server1)
	        |       |         |
	        | ----> |         |Solicit
	        |       | ----->  |Relay-forward(Solicit)
	        |       | <----   |Relay-reply(Advertise)  (*2)
	        | <---- |         |Advertise
	        |       |         |
</PRE>

=end html

=head1 JUDGEMENT

<PRE>
(*1)(*2)PASS: NUT should send the Relay-reply message to the Relay agent
              has sent the Relay-forward message.
</PRE>	    

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
  see also RFC3315
  20.3. Construction of  Relay-reply Messages
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut
