#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/rfc3315/S_RFC3315_18.2.3_ReplyLifetime0ReceiptRenewMsg.seq,v 1.4 2009/12/03 06:03:17 akisada Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Server_pktdesc;

my $type	= $V6evalTool::NutDef{'Type'};
if($type ne 'host') {
	vLogHTML('<FONT COLOR="#FF0000">This test supports only Host</FONT>');
	exit($V6evalTool::exitHostOnly);
}

dhcpExitNS if(ChkFuncSupport('ADDRASSIGN'));

#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";
#initial NUT config parameters,
my %NUT_Server_Config = (
	'if_nut0'=> "$V6evalTool::NutDef{Link0_device}",
	'init_opcode' => "vRemote(\"dhcp6s.rmt\", \"start\",\"link0=$V6evalTool::NutDef{Link0_device}\",\"startaddr=3ffe:501:ffff:100::10\",\"endaddr=3ffe:501:ffff:100::11\")"
);

dhcpSvrInit(\%NUT_Server_Config);
vClear($IF0);
#--------------------------------------------------------------#
# Main Procedure
#--------------------------------------------------------------#
vLogHTML('<B>==== Receipt of Renew Messages  ====</B><BR>');




# 1 send DHCPv6 Solicit Message
$CID_OPTION = "opt_CID_LLT_client1";
$IA_NA_OPTION = "opt_IA_NA";
$ElapsedTime_OPTION = "opt_ElapsedTime";
send_solicit($IF0, "solicit_client1_to_alldhcp", "");




# 2 wait for DHCPv6 Advertise Message
my ($ret1, %adv1) = wait_for_advertise($IF0, 5);
if (0 != $ret1) {
	dhcpExitFail();
}

# 3 send DHCPv6 Request Message
$SID_OPTION = "opt_SID_ANY";
$IA_NA_OPTION = "opt_IA_NA";
$ElapsedTime_OPTION = "opt_ElapsedTime";
send_request($IF0, "request_client1_to_alldhcp", \%adv1, "");

# 4 wait for DHCPv6 Reply Message
my ($ret2, %rep2) = wait_for_reply($IF0, 5);
if (0 != $ret2) {
	dhcpExitFail();
}

# 5 send DHCPv6 Renew Message
$SID_OPTION = "opt_SID_ANY";
$ElapsedTime_OPTION = "opt_ElapsedTime";
$IA_NA_OPTION = "opt_IA_NA_Addr_woStatus";

# different IA_NA number
 my ($ret3, %renew3) = send_renew($IF0, "renew_client1_to_alldhcp_notAppro", \%rep2, "");
if (0 != $ret3) {
	dhcpExitFail();
}


# 6 wait for DHCPv6 Reply Message
my ($ret4, %rep4) = wait_for_reply($IF0, 5);
if (0 != $ret4) {
	dhcpExitFail();
}

# check Options
if (0 != options_exist(\%rep4, ($CMP_CID|$CMP_SID|$CMP_IA_NA))){
	dhcpExitError("<B>Option check is failed.</B></BR>");
}

# compare CID
if (0 != compare_options(\%renew3, \%rep4, ($CMP_CID|$CMP_TRANS_ID|$CMP_SID))){
	dhcpExitError("<B>ID check is failed.</B><BR>");
}

#check the lifetime in IA_Address

my $NotonlinkAdd = $renew3{"Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Renew.Opt_DHCPv6_IA_NA.Opt_DHCPv6_IA_Address.Address"};

#get the lifetime of special address in the IA_Address option / IA_NA(TA) option
my $Count_IA_Add = $rep4{"Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Reply.Opt_DHCPv6_IA_NA.Opt_DHCPv6_IA_Address#"};
my $Base = "Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Reply.Opt_DHCPv6_IA_NA.Opt_DHCPv6_IA_Address";
my $Index_IA_Add = undef;



for (my $i=1;$Count_IA_Add>= $i;$i++){
	
	if(1< $i){
		$Base.= "$i";
	}
	
	if($NotonlinkAdd eq $rep4{"$Base.Address"}){
		$Index_IA_Add = $Base;
		last;
	}
}

if (!defined($Index_IA_Add)){
	dhcpExitError("The reply message don\'t include address sent by Renew message");
}

my $ret_lifetime1 = $rep4{"$Index_IA_Add".".PreferredLifetime"};
my $ret_lifetime2 = $rep4{"$Index_IA_Add".".ValidLifetime"};

vLogHTML("The Preferred Lifetime is $ret_lifetime1, the Valid Lifetime is $ret_lifetime2<BR>");

if (0 != ($ret_lifetime1 ||$ret_lifetime2)){
	return dhcpExitError("The lifetime isn\'t 0");
}

#-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>The Message exchange is correct</FONT></B><BR>");
#-------------------------------------------------------------------

vClear($IF0);
vStop($IF0);
dhcpExitPass();
#NOTREACHED

########################################################################
__END__

=head1 NAME

  S_RFC3315_18.2.3_ReplyLifetime0ReceiptRenewMsg.seq - Reply with lifetimes of 0

=head1 TARGET

  Server

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3315_18.2.3_ReplyLifetime0ReceiptRenewMsg.seq">S_RFC3315_18.2.3_ReplyLifetime0ReceiptRenewMsg.seq </A>[-tooloption ...]
 -pkt <A HREF="./S_RFC3315_18.2.3_ReplyLifetime0ReceiptRenewMsg.def">S_RFC3315_18.2.3_ReplyLifetime0ReceiptRenewMsg.def </A>
 -tooloption: v6eval tool option
See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A>
 </PRE>

=head1 INITIALIZATION

=begin html
  <UL>
  <LI><STRONG>Network Topology</STRONG></LI>
  </UL>
  <PRE>
          TN(Client1)  
             |
Link0 -------+-----------+--------------- 3ffe:501:ffff:100::/64
                         |
                       NUT(Server1)
  </PRE>
  <UL>
      <LI><STRONG>Verification Points</STRONG></LI>
<PRE>
If the server finds that any of the addresses are not appropriate for
the link to which the client is attached, the server returns the
address to the client with lifetimes of 0.
</PRE>
	<UL>
<PRE>
Reply Message
	<LI>msg-type</LI>
	<B>REPLY(7)</B>
	<LI>IA_NA option</LI>
	<UL><LI><B>contain IA address option(lifetimes = 0)</B></LI>
	</UL>
</PRE>
  </UL>
      <LI><STRONG>Configuration</STRONG></LI>
  <UL>
	<BLOCKQUOTE>
	<TABLE BORDER>
	<TR>
	<TD><TT>Device Name</TT></TD>
	<TD><TT>Device Type</TT></TD>
	<TD><TT>I/F</TT></TD>
	<TD><TT>Assigned Prefix</TT></TD>
	<TD><TT>Link Local Addr</TT></TD>
	<TD><TT>MAC Addr</TT></TD>
	</TR>
	<TR>
	<TD><TT>Server1</TT></TD>
	<TD><TT>NUT</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>NUT's Linklocal address</TT></TD>
	<TD><TT>NUT's MAC address</TT></TD>
	</TR>
	<TR>
	<TD><TT>Client1</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a2a2</TT></TD>
	<TD><TT>00:00:00:00:a2:a2</TT></TD>
	</TABLE>
	</BLOCKQUOTE>
	</UL>
	<UL>
	<PRE>
	<LI>Renew Message</LI>
	<B>Any</B> of the addresses in Renew message are <B>not appropriate for the link</B>
	</PRE>
	</UL>
</UL>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
       NUT     TN
        |       | 
        |       | initialize NUT (as a DHCPv6 Server)
        |       | 
        | <---- | Solicit
        | ----> | Advertise
        | <---- | Request
        | ----> | Reply
        |       | 
        |       | 
        |       | 
        | <---- | Renew (Same ID, invalid address)
        | ----> | Reply	(*1)
        |       |
</PRE>

=end html

=head1 JUDGEMENT

<PRE>
(*1) PASS:  NUT send Reply message with IA_NA option(w/ IA_Address lifetime=0).
</PRE>

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
   see also RFC3315
   18 DHCP Client-Initiated Configuration Exchange
   18.2.3. Receipt of Renew Messages
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut
