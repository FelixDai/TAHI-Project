#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/rfc3633_rfc3646/S_RFC3646_ORO_DNSserver_DomainSearchList_14_1_3_B.seq,v 1.2 2009/12/03 06:03:44 akisada Exp $
#
########################################################################

BEGIN { $V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Server_pktdesc;

my $type=$V6evalTool::NutDef{Type};
if($type ne 'router') {
	vLogHTML('<FONT COLOR="#FF0000">This test does not support Host!</FONT>');
	exit $V6evalTool::exitRouterOnly;
}

dhcpExitNS if(ChkFuncSupport('PREFIX_DELEGATION'));
dhcpExitNS if(ChkFuncSupport('DNS'));

#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";
#initial NUT config parameters,
my %NUT_Delegating_Config = (
       'if_nut0'=> "$V6evalTool::NutDef{Link0_device}",
#      'if_nut1' => "$V6evalTool::NutDef{Link1_device}",
#      'if_add0' => "$NUTRELAY1_LINK0_GLOBAL_UCAST",
#      'if_add1' => "$NUTRELAY1_LINK1_GLOBAL_UCAST",
#      'if_length0' => "64",
#      'if_length1' => "64",
#      'if_type0'=> "unicast",
#      'if_type1'=> "unicast",
       'init_opcode' => "vRemote(\"dhcp6s.rmt\", \"start\", \"start\",\"dns=\'3ffe:501:ffff:100:200:ff:fe00:3f3e\'\", \"domainlist=\'test.example.com\'\", \"link0=$V6evalTool::NutDef{Link0_device}\",\"startaddr=3ffe:501:ffff:100::10\",\"endaddr=3ffe:501:ffff:100::11\",\"delegateprefix=3ffe:501:ffff::\",\"delegateprefix_range=48\",\"delegateprefixlength=48\",\"renewtime=50\",\"rebindtime=80\")");

dhcpDelegatingInit(\%NUT_Delegating_Config);

vClear($IF0);

# 1 send Solicit
$CID_OPTION = "opt_CID_LLT_client1";
$IA_PD_OPTION = "opt_IA_PD";
$ElapsedTime_OPTION = "opt_ElapsedTime";
$OptionRequest_OPTION = "opt_ORO_dns_servers_domainlists";
my ($ret1, %sol1) = send_solicit($IF0, "solicit_client1_to_alldhcp", "");
if (0 != $ret1){
	dhcpExitFail();
}


# 2. wait for DHCPv6 Advertise Message
my ($ret2, %adv2) = wait_for_advertise($IF0, 5);
if (0 != $ret2){
 	dhcpExitFail();
}

if (0 != options_exist(\%adv2, ($CMP_DNS_SVR))){
	dhcpExitError("<B>Do not include necessary options!</B>");
}

if (0 != options_exist(\%adv2, ($CMP_DNS_LST))){
	dhcpExitError("<B>Include unnecessary options!</B>");
}

#-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>DNS Recursive Name Server option and Domain Search List option are returned</FONT></B><BR>");
#-------------------------------------------------------------------

vClear($IF0);
vStop($IF0);
dhcpExitPass();
 
#NOTREACHED

########################################################################
__END__

=head1 NAME

  S_RFC3646_ORO_DNSserver_DomainSearchList_14_1_3_B.seq - Returning of DNS Recursive Name Server option and Domain Search List Option

=head1 TARGET

  Server

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3646_ORO_DNSserver_DomainSearchList_14_1_3_B.seq">S_RFC3646_ORO_DNSserver_DomainSearchList_14_1_3_B.seq </A>[-tooloption ...]
 -pkt <A HREF="./S_RFC3646_ORO_DNSserver_DomainSearchList_14_1_3_B.def">S_RFC3646_ORO_DNSserver_DomainSearchList_14_1_3_B.def </A>
 -tooloption: v6eval tool option
See Also <A HREF="./DHCPv6.def"> DHCPv6.def </A>
 </PRE>

=head1 INITIALIZATION

=begin html
  <UL>
  <LI><STRONG>Network Topology</STRONG></LI>
  </UL>
  <PRE>
          TN(Client1)  
             |
Link0 -------+-----------+--------------- 3ffe:501:ffff:100::/64
                         |
                       NUT(Server1)
  </PRE>
  <UL>
      <LI><STRONG>Verification Points</STRONG></LI>
  <UL>
      <PRE>
   If the client included an Option Request
   option in its message, the server includes options in the Reply
   message containing configuration parameters for all of the options
   identified in the Option Request option that the server has been
   configured to return to the client.
      </PRE>
  </UL>
  </UL>
  <UL>
      <LI><STRONG>Configuration</STRONG></LI>
      <UL>
      <PRE>
      NTU configured to send Advertise message with DNS Recursive Name Server option and Domain Search List option <p>
      TN send Request message with Option Request option
      <LI>option-code</LI>
      <B>OPTION_ORO(6)</B>
      <LI>request-option-code</LI>
      <B>OPTION_DNS_SERVERS (23)</B>
      <B>OPTION_DOMAIN_LIST (24)</B>
      </PRE>
      </UL>
	<BLOCKQUOTE>
	<TABLE BORDER>
	<TR>
	<TD><TT>Device Name</TT></TD>
	<TD><TT>Device Type</TT></TD>
	<TD><TT>I/F</TT></TD>
	<TD><TT>Assigned Prefix</TT></TD>
	<TD><TT>Link Local Addr</TT></TD>
	<TD><TT>MAC Addr</TT></TD>
	</TR>
	<TR>
	<TD><TT>Server1</TT></TD>
	<TD><TT>NUT</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>NUT's Linklocal address</TT></TD>
	<TD><TT>NUT's MAC address</TT></TD>
	</TR>
	<TR>
	<TD><TT>Client1</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a2a2</TT></TD>
	<TD><TT>00:00:00:00:a2:a2</TT></TD>
	</TABLE>
	</BLOCKQUOTE>
	</UL>
</UL>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
       NUT     TN
        |       | 
        |       | initialize NUT (as a DHCPv6 Server)
        |       | 
        | <---- | Solicit       (w/ Option Request option(23,24))
        | ----> | Advertise     (*1)
        |       | 
</PRE>

=end html

=head1 JUDGEMENT

<PRE>
(*1)PASS:  NUT sends Advertise message with DNS Recursive Name Server option and Domain Search List option.
</PRE>

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
   see also RFC3315
   18.2. Server Behavior
   see also RFC3646
   3. DNS Recursive Name Server option
   4. Domain Search List option
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut
 
