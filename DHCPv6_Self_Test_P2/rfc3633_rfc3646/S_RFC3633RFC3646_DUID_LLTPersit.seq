#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/rfc3633_rfc3646/S_RFC3633RFC3646_DUID_LLTPersit.seq,v 1.1 2011/04/11 01:38:56 miyata Exp $
#
########################################################################

BEGIN { $V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}

use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Server_pktdesc;

my $type=$V6evalTool::NutDef{Type};
if($type ne 'router') {
	vLogHTML('<FONT COLOR="#FF0000">This test does not support Host!</FONT>');
	exit $V6evalTool::exitRouterOnly;
}

dhcpExitNS if(ChkFuncSupport('PREFIX_DELEGATION'));
dhcpExitNS if(ChkFuncSupport('DUID_LLT'));
dhcpExitNS if(ChkFuncSupport('DNS'));

#--------------------------------------------------------------#
# Initialization
#--------------------------------------------------------------#

vLogHTML('<B>==== NUT Initialization ====</B><BR>');
my $IF0 = "Link0";

#initial NUT config parameters,
my %NUT_Delegating_Config = (
       'if_nut0'=> "$V6evalTool::NutDef{Link0_device}",
#      'if_nut1' => "$V6evalTool::NutDef{Link1_device}",
#      'if_add0' => "$NUTRELAY1_LINK0_GLOBAL_UCAST",
#      'if_add1' => "$NUTRELAY1_LINK1_GLOBAL_UCAST",
#      'if_length0' => "64",
#      'if_length1' => "64",
#      'if_type0'=> "unicast",
#      'if_type1'=> "unicast",
       'init_opcode' => "vRemote(\"dhcp6s.rmt\", \"start\",\"link0=$V6evalTool::NutDef{Link0_device}\",\"startaddr=3ffe:501:ffff:100::10\",\"endaddr=3ffe:501:ffff:100::11\",\"delegateprefix=2001:db8:ffff::\",\"delegateprefix_range=48\",\"delegateprefixlength=48\",\"renewtime=50\",\"rebindtime=80\",\"duid=DUID_LLT\")");

dhcpDelegatingInit(\%NUT_Delegating_Config);
vClear($IF0);
#--------------------------------------------------------------#
# Main Procedure
#--------------------------------------------------------------#
vLogHTML('<B>==== Solicit Reply Message Exchange  ====</B><BR>');

# send DHCPv6 Solicit Message
$CID_OPTION = "opt_CID_LLT_client1";
$IA_PD_OPTION = "opt_IA_PD";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret1, %sol1) = send_solicit($IF0, "solicit_client1_to_alldhcp", "");
if (0 != $ret1){
	dhcpExitFail()
}


# wait for DHCPv6 Advertise Message
my ($ret2, %adv2) = wait_for_advertise($IF0, 5);
if (0 != $ret2) {
	vLogHTML("NUT did not send Advertise Message.<BR>");
	dhcpExitFail();
}

#Check if the IA_PD,IA_Prefix options exist 
if (0 != options_exist(\%adv2,$CMP_SID)){
	dhcpExitError("Can not find the necessary option! ");
}

# Check the format of SID option
my $length = $adv2{"Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Advertise.Opt_DHCPv6_SID.Length"};
vLogHTML("<B> Length of DUID is $length </B><BR>");
if($length == 0){
	vLogHTML('<FONT COLOR="#FF0000">DUID is not set.</FONT><BR>');
	dhcpExitFail;
}

# Check the DUID in the message
if ( 0 != check_DUID(\%adv2,$CMP_SID,1)){
	dhcpExitFail("The type of DUID is not DUID-LLT");
}

#Restart system
vLogHTML("Target: Reboot<BR>");
if ( 0 != vRemote('reboot.rmt','')) {
    dhcpExitFail();
}
sleep(5);

vLogHTML('<B>==== NUT Initialization ====</B><BR>');

dhcpDelegatingInit(\%NUT_Delegating_Config);
vClear($IF0);

# send DHCPv6 Solicit Message
$CID_OPTION = "opt_CID_LLT_client1";
$IA_PD_OPTION = "opt_IA_PD";
$ElapsedTime_OPTION = "opt_ElapsedTime";
my ($ret3, %sol3) = send_solicit($IF0, "solicit_client1_to_alldhcp", "");
if (0 != $ret3){
        dhcpExitFail()
}


# wait for DHCPv6 Advertise Message
my ($ret4, %adv4) = wait_for_advertise($IF0, 5);
if (0 != $ret4) {
        vLogHTML("NUT did not send Advertise Message.<BR>");
        dhcpExitFail();
}

# Compare the DUID values in 2 results
if ( 0 != compare_options(\%adv2,\%adv4,$CMP_SID)){
	dhcpExitFail("The DUID value is not consistent");
}

#-------------------------------------------------------------------
vLogHTML("<B><FONT COLOR=#006666>The consistency of DUID-LLT is correct</FONT></B><BR>");
#-------------------------------------------------------------------


vClear($IF0);
vStop($IF0);
dhcpExitPass;



#NOTREACHED

########################################################################
__END__

=head1 NAME

  S_RFC3633RFC3646_DUID_LLTPersit.seq - The consistency of DUID-LLT

=head1 TARGET

  Server

=head1 SYNOPSIS

=begin html
 <PRE>
 <A HREF="./S_RFC3633RFC3646_DUID_LLTPersit.seq">S_RFC3633RFC3646_DUID_LLTPersit.seq </A>[-tooloption ...]
 -pkt <A HREF="./S_RFC3633RFC3646_DUID_LLTPersit.def">S_RFC3633RFC3646_DUID_LLTPersit.def </A>
 -tooloption: v6eval tool option
 </PRE>

=head1 INITIALIZATION

=begin html
  <UL>
  <LI><STRONG>Network Topology</STRONG></LI>
  </UL>
  <PRE>
          TN(Client1)  
             |
Link0 -------+-----------+--------------- 3ffe:501:ffff:100::/64
                         |
                       NUT(Server1)
  </PRE>
  <UL>
      <LI><STRONG>Verification Points</STRONG></LI><P>
          <UL>
          <PRE>DUID Format in the Server ID option<BR>
   The following diagram illustrates the format of a DUID-LLT:
     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |               1               |    hardware type (16 bits)    |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    |                        time (32 bits)                         |
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    .                                                               .
    .             link-layer address (variable length)              .
    .                                                               .
    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      <LI>DUID type</LI>
          <B>1</B>
      <LI>hardware type</LI>
          <B>Hardware type of DUID is IANA-assgined value in RFC826</B>
      <LI>time</LI>
          <B>time value of DUID</B>
      <LI>link-layer address</LI>
          <B>link-layer address of DUID</B>
          </PRE>
          </UL>
	  <UL>
	  <PRE>After rebooting
	  <LI><B>Keep the DUID value</B></LI>
	  </UL>
      </LI>
  </UL>
  <UL>
      <LI><STRONG>Configuration</STRONG></LI>
	<UL>
	<PRE>
	<B>The type of DUID used by server is DUID_LLT(1).</B>
	</PRE>
	</UL>
	<BLOCKQUOTE>
	<TABLE BORDER>
	<TR>
	<TD><TT>Device Name</TT></TD>
	<TD><TT>Device Type</TT></TD>
	<TD><TT>I/F</TT></TD>
	<TD><TT>Assigned Prefix</TT></TD>
	<TD><TT>Link Local Addr</TT></TD>
	<TD><TT>MAC Addr</TT></TD>
	</TR>
	<TR>
	<TD><TT>Server1</TT></TD>
	<TD><TT>NUT</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>NUT's Linklocal address</TT></TD>
	<TD><TT>NUT's MAC address</TT></TD>
	</TR>
	<TR>
	<TD><TT>Client1</TT></TD>
	<TD><TT>TN</TT></TD>
	<TD><TT>Link0</TT></TD>
	<TD><TT>3ffe:501:ffff:100::/64</TT></TD>
	<TD><TT>fe80::200:ff:fe00:a2a2</TT></TD>
	<TD><TT>00:00:00:00:a2:a2</TT></TD>
	</TR>
	</TABLE>
	</BLOCKQUOTE>
  </UL>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
	       NUT      TN
	        |       | 
	        |       | initialize NUT (as a DHCPv6 Server)
	        |       | 
	        | <---- | Solicit
	        | ----> | Advertise   (*1)
	        |       | 
	         reboot
	        | <---- | Solicit
	        | ----> | Advertise   (*2)
</PRE>

=end html

=head1 JUDGEMENT

<PRE>
 The DUID's  format in the Server's Identifier option of Advertise message
 must be base on description of RFC(see above Verification Points).(*1)
 After restarting the DUID must be keeped. (*2)
</PRE>

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
 see also RFC3315
 9.2 DUID Based on Link-layer Address Plus Time [DUID-LLT]
 22.3. Server Identifier Option
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut
<PRE>


 
