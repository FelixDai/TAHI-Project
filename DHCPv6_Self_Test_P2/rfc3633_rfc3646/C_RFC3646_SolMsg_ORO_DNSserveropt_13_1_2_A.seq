#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: dhcpv6.p2/rfc3633_rfc3646/C_RFC3646_SolMsg_ORO_DNSserveropt_13_1_2_A.seq,v 1.2 2009/12/03 06:03:43 akisada Exp $
#
########################################################################

BEGIN{
	$V6evalTool::TestVersion = '$Name: T_DHCPv6_Self_Test_P2_1_1_4 $';
}
use strict;
use V6evalTool;

use lib '../.';
use DHCPv6_common;
use Client_pktdesc;

my $type=$V6evalTool::NutDef{Type};
if($type ne 'router') {
	vLogHTML('<FONT COLOR="#FF0000">This test does not support Host!</FONT>');
	exit $V6evalTool::exitRouterOnly;
}

dhcpExitNS if(ChkFuncSupport('PREFIX_DELEGATION'));
dhcpExitNS if(ChkFuncSupport('DNS'));

#--------------------------------------------------------------#
# Initialization variables
#--------------------------------------------------------------#
my $IF0_NUT = $V6evalTool::NutDef{"Link0_device"};
my $IF0 = "Link0";
vCapture($IF0);
#--------------------------------------------------------------#
# Initialize DHCPv6 Client
#--------------------------------------------------------------#

my $ret = vRemote("dhcp6c.rmt", "start", "prefix", "pd_iaid", "rd_iaid", "dns", "rentime=50", "rebtime=80", "link0=$IF0_NUT");
if($ret != 0) {
	vLogHTML('<FONT COLOR="#FF0000">Cannot Initialize DHCPv6 Client program.</FONT><BR>');
	dhcpExitFail;
};
#--------------------------------------------------------------#
#1.  Wait until Solicit arrives 
#--------------------------------------------------------------#
# Judge CID, SID option 
my ($retsol,%sol) = wait_for_solicit($IF0,30) ;
if($retsol != 0){
	dhcpExitFail;
}
#vClear($IF0);

#--------------------------------------------------------------#
# Judge
#--------------------------------------------------------------#
$ret = options_exist(\%sol, $CMP_ORO);
if($ret != 0){
	vLogHTML('<FONT COLOR="#FF0000">DHCPv6 Client should send Solicit with ORO(DNS Recursive Name Server option)!</FONT><BR>');
	dhcpExitFail;
}
my $option_base = "Frame_Ether.Packet_IPv6.Upp_UDP.Udp_DHCPv6_Solicit.Opt_DHCPv6_OptionRequest";
my $option_code = $option_base."."."Code";
my $option_len = $option_base."."."Length";
my $optionCode = $option_base."."."OptionCode";


if(defined $sol{$option_base}){
	vLogHTML("<B> ORO Code = $sol{$option_code} <B><BR>");
	vLogHTML("<B> ORO option Length = $sol{$option_len} <B><BR>");
	vLogHTML("<B> ORO option OptionCode = $sol{$optionCode} <B><BR>");
}
else{
	vLogHTML("<B> NO ORO option <B><BR>");
	dhcpExitFail;
}
my $optcode = lookup_OptRequestCode(\%sol,23);
if($optcode != 0){
	vLogHTML('<FONT COLOR="#FF0000">requested-option-code is not DNS Recursive Name Server option! </FONT><BR>');
	dhcpExitFail;
}
#if($sol{$optionCode} != 23){
#	vLogHTML('<FONT COLOR="#FF0000">requested-option-code is not DNS Recursive Name Server option</FONT><BR>');
#	dhcpExitFail;
#}




vClear($IF0);
vStop($IF0);
dhcpExitPass;
###############################################################################
__END__

=head1 NAME 

  C_RFC3646_SolMsg_ORO_DNSserveropt_13_1_2_A.seq - Solicit message format with Option request Option Format(DNS Recursive Name Server option)

=head1 TARGET

  Client

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./C_RFC3646_SolMsg_ORO_DNSserveropt_13_1_2_A.seq"> C_RFC3646_SolMsg_ORO_DNSserveropt_13_1_2_A.seq</A> [-tooloption...] <BR>  -pkt  <A HREF="./C_RFC3646_SolMsg_ORO_DNSserveropt_13_1_2_A.def"> C_RFC3646_SolMsg_ORO_DNSserveropt_13_1_2_A.def</A> <BR>  -tooloption : v6eval tool option
<BR>
  See Also <A HREF="../DHCPv6.def"> DHCPv6.def </A> 
</PRE>

=end html

=head1 INITIALIZATION

=begin html
  <ul>
  <li><STRONG>Network Topology</STRONG></li> 
    <PRE>
          NUT(Client)
          |           
          |                        
Link0   --+--------+------------------------ 3ffe:501:ffff:100::/64
                   |
                   |          
                   TN(Server) 
  </PRE>
  </ul>
  <ul>
  <li><STRONG>Verification Points</STRONG></li><br>
    <PRE>
   The client uses IA_NA options to request the assignment of non-
   temporary addresses and uses IA_TA options to request the assignment
   of temporary addresses.  Either IA_NA or IA_TA options, or a
   combination of both, can be included in DHCP messages.
<BR>
   The client SHOULD include an Option Request option (see section 22.7)
   to indicate the options the client is interested in receiving.  The
   client MAY additionally include instances of those options that are
   identified in the Option Request option, with data values as hints to
   the server about parameter values the client would like to have
   returned.
    </PRE>
  </ul>
  <ul>  
  <li><STRONG>Configurations</STRONG></li><br>
    <BR>
    <TABLE BORDER="1">
    <TR>
    <TD><TT>Device Name</TT></TD>
    <TD><TT>Device Type</TT></TD>
    <TD><TT>Interface</TT></TD>
    <TD><TT>Assigned Prefix</TT></TD>
    <TD><TT>Link Local Addr</TT></TD>
    <TD><TT>MAC Addr</TT></TD>
    </TR>
    <TR>
    <TD><TT>Client</TT></TD>
    <TD><TT>NUT</TT></TD>
    <TD><TT>Link0</TT></TD>
    <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
    <TD><TT>NUT's Linklocal address</TT></TD>
    <TD><TT>NUT's MAC address</TT></TD>
    </TR>
    <TR>
    <TD><TT>Server</TT></TD>
    <TD><TT>TN</TT></TD>
    <TD><TT>Link0</TT></TD>
    <TD><TT>3ffe:501:ffff:100::/64</TT></TD>
    <TD><TT>fe80::200:ff:fe00:a1a1</TT></TD>
    <TD><TT>00:00:00:00:a1:a1</TT></TD>
    </TR>
    </TABLE>
  </ul>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
<BR>
       NUT      TN
        |       | 
        |       |Initialize NUT(as a DHCPv6 Client)
        | ----> |<B>Solicit</B> w IA_NA w/ORO(DNS Recursive Name Server option) (1*)
        |       |
        |       |
<BR>  
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
  (1*)PASS: NUT transmits Solicit message with IA_NA option and ORO(DNS Recursive Name Server option).
</PRE>

=end html

=head1 TERMINATION

=begin html
<PRE>
  N/A
</PRE>

=end html

=head1 REFERENCE

=begin html
<PRE>
  Also see RFC3315 Section 17.1.1
  Also see RFC3646 Section 3
<BR>
</PRE>

=end html

=head1 SEE ALSO

=begin html
<PRE>
<BR>
  perldoc  V6evalTool
<BR>
</PRE>

=end html

