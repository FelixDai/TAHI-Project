#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011
# Yokogawa Electric Corporation, YDC Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: v6eval/bin/remotes/manual/cpe6.rmt,v 1.10 2011/09/02 fang Exp $
#
########################################################################
use V6evalRemote;
use File::Basename;

rArg() || goto error;
$type=rType();


my $basename	= basename($0,'.rmt');
my $prompt	= "$basename> ";

print "\n";

#$type = $V6evalTool::NutDef{Type};
 
if(defined($rOpt_start)){
	
#print "lio_start". "\n"; 
	#print $prompt. "Follow the prompts below to configure your CPE6 Router:\n\n";
	if (defined($rOpt_inforeq)) {
		
		#print $prompt. "CPE6 router should send DHCP6 Information-request Message \n";
		
		#if(defined $rOpt_dns){
		#	print $prompt."Set DNS Recursive Name Server Option\n";
		#}
		#if(defined $rOpt_lst){
		#	print $prompt."Set DNS Search List Option\n";
		#}
		#if(defined $rOpt_sip){
		#	print $prompt."Set SIP Servers IPv6 Address List Option\n";
		#}
	}
	else{
	
		#print $prompt. "CPE6 Router should send DHCPv6 Solicit message \n";
		#if (defined($rOpt_rapidcommit)){
		#	print $prompt. "Set Rapidcommit Option,\n";
		#}
		#if(defined $rOpt_tempaddress){
		#	print $prompt. "Set IA-TA Option,\n";
		#}
		#if(defined $rOpt_unicast){
		#	print $prompt. "Set CPE6 Router to support Unicast Option,\n";
		#}
		#if(defined $rOpt_iana){
		#	print $prompt. "Set CPE6 Router to carry IA-NA Options,\n";
		#}
		#if(defined $rOpt_IA){
		#	print $prompt. "Set CPE6 Router to carry 2 IA-NA Options,\n";
		#}
		#if(defined $rOpt_dns){
		#	print $prompt. "Set CPE6 Router to carry DNS Recursive Name Server Option,\n";
		#}
		#if(defined $rOpt_lst){
		#	print $prompt. "Set CPE6 Router to carry DNS Search List Option,\n";
		#}
		#if(defined $rOpt_Mpd){
		#	print $prompt. "Set CPE6 Router to carry 2 IA_PD options,\n";
		#}
		if(defined $rOpt_prefix){
			#print $prompt. "Set CPE6 Router to carry IA_PD option and IA_PD Prefix option.\n";
			if(defined $rOpt_prefixlen){
				print $prompt. "Including a prefix in the IA_PD and the prefix length is less than 60\n";
			} 
		}
		#if(defined $rOpt_address){
		#	print $prompt. "Set CPE6 Router to carry optional IAAddress Option,\n";
		#	if(defined $rOpt_preferlifetime){
		#		print $prompt. "Set Preferred-life time,\n";
		#	}
		#	if(defined $rOpt_validlifetime){
		#		print $prompt. "Set Valid-life time,\n";
		#	}
		#}
		if(defined $rOpt_reconfigureaccept){
			print $prompt. "Set CPE6 Router to support Accept Reconfigure Option\n";
		}
	}
	
	#if(defined($rOpt_authentication)){
	#	print  $prompt."Set Authentication protocol:";
	#	if($rOpt_authentication eq "delayed"){
	#		print  $prompt."Delayed Authentication Protocol.\n";
	#	}
	#	elsif($rOpt_authentication eq "reconfigure"){
	#		print  $prompt."Reconfigure Key Authentication Protocol.\n";
	#	}
	#	else{
	#		print  $prompt."$rOpt_authentication.\n";
	#	}
	#	print $prompt."Set the Authentication parameter.\n";
	#	print $prompt."\tREALM:  $rOpt_auth_realm\n";
	#	print $prompt."\tKey ID: $rOpt_auth_keyid\n";
	#	print $prompt."\tShared Secret Key: $rOpt_auth_sharedsecretkey\n";
	#}

	#print $prompt."Start NUT (CPE6 Router) manually after pressing enter key\n\n".
	#"Set CPE6 Router to ready status after pressing enter key within 5 seconds.\n";
	print $prompt. "Press ENTER key when CPE Router is in READY state\n";
#	print "lio_stop". "\n"; 
	<STDIN>;
}

if($rOpt_stop){
#	print "lio_start". "\n"; 
	#print $prompt. "Stop the DHCPv6 Client of CPE6 Router! \n".
	#print $prompt. "If NUT has Global address, please remove it. \n".
	#print $prompt. "then press enter key.\a\n";
	print $prompt. "Press ENTER key after DHCPv6 Client is STOPPED\n";
#	print "lio_stop". "\n"; 
	<STDIN>;
}
#if($rOpt_restart){
#	print "lio_start". "\n"; 
#	print $prompt. "Reboot CPE6 Router:\n".
#	"According to RFC3315, you can choose as follows:\n".
#	"   1. NUT reboots. \n".
#	"   2. NUT is physically connected to a wired connection. \n".
#	"   3. NUT returns from sleep mode. \n".
#	"   4. NUT using a wireless technology changes access points. \n".
#	" NUT should send DHCP6 Confirm message.\n".
#	" Note the situation that IA_PD option test is performed. \n".
#	" In that situation, Requesting Router will send Rebind message. \n\n".
#	" then press enter key. \a\n";
#	print "lio_stop". "\n"; 
#	<STDIN>;
#}
#if($rOpt_release){
#	print "lio_start". "\n"; 
#	print $prompt. "Release Address and information:\n".
#	"According to RFC3315, \n".
#	"   NUT sends a DHCP6 Release message to the server\n".
#        "   that assigned addresses to NUT to \n".
#        "   indicate that NUT will no longer use one\n".
#        "   or more of the assigned addresses.\n";
#	#print $prompt. "In order to make NUT sent DHCP6 Release message. \n".
#	" then press enter key. \a\n";
#	print "lio_stop". "\n"; 
#	<STDIN>;
#}
if($rOpt_ifdown){
#	print "lio_start". "\n"; 
	print $prompt. "Bring down NUT WAN interface then press ENTER key\n";
#	print "lio_stop". "\n"; 
	<STDIN>;
}
#if($rOpt_ifup){
#	print "lio_start". "\n"; 
#	print $prompt. "Please up the NUT interface of DHCPv6 Client:\n".
#	" NUT should send DHCP6 Confirm message.\n".
#	" You may use another way to send DHCP6 Confirm message .\n".
#	" then press enter key. \a\n";
#	print "lio_stop". "\n"; 
#	<STDIN>;
#}

if($rOpt_start_nodhcp6){
#	print "lio_start". "\n"; 
	print $prompt. "Press ENTER key when CPE Router is in READY state\n";
#	print "lio_stop". "\n"; 
	<STDIN>;
}

if($rOpt_ping){
#        print "lio_start". "\n"; 
	print $prompt. "Please use Ping6-like program to ping TN2's globall address: 3ffe:501:ffff:3::200\n";
	print $prompt. "According to RFC4294, CPE Router will use the prefer appropriate scope as the source address \n";
	print $prompt. "then press ENTER key\n";
#	print "lio_stop". "\n"; 
	<STDIN>;
}

exit($V6evalRemote::exitPass);

error:
    exit($V6evalRemote::exitFail);

notsupported:
    exit($V6evalRemote::exitNS);

########################################################################
__END__

=head1 NAME

B<cpe6.rmt> - set/start/stop/release cpe6 router

=head1 SYNOPSIS

B<cpe6.rmt> [-commonoption ...] set [rapidcommit|inforeq]
              link0=LINK0_DEV link1=LINK1_DEV
              [timeout=SEC_VALUE]

B<cpe6.rmt> [-commonoption ...] start [rapidcommit|inforeq]
              link0=LINK0_DEV link1=LINK1_DEV
              [timeout=SEC_VALUE]

B<cpe6.rmt> [-commonoption ...] stop
B<cpe6.rmt> [-commonoption ...] release

=head1 DESCRIPTION

B<cpe6.rmt set> sets CPE6 Router's dhcp client parameters.
B<cpe6.rmt start> starts CPE6 Router's dhcp client process associating iapd.
B<cpe6.rmt start rapidcommit> starts CPE6 Router's dhcp client process using rapid commit option.
B<cpe6.rmt start inforeq> starts CPE6 Router's dhcp client process to get configuration parameter.
B<cpe6.rmt stop> stop CPE6 Router's dhcp client process.
B<cpe6.rmt release> release delegated prefix information.

B<timeout>: Default timeout value is five seconds.
B<common options>: Please see ``preldoc V6evalRemote''.
B<link0> and B<link1>: NUT's network i/f names for Link0 and Link1.
B<cpe6.rmt start> can specifies the following DHCP6 parameters whose
values are depend on dhcp6c of kame-freebsd now.

  ---------------+----------------------------------
  left value      right value
  ---------------+----------------------------------
  iaid            0
  slaid           1
  slalen          16
  requestoptions  domain-name-servers
  ---------------+----------------------------------

B<cpe6.rmt stop> stop dhcp daemon of CPE6 Router.
B<timeout>: Default timeout value is five seconds.
B<common options>: Please see ``preldoc V6evalRemote''.

=head1 RETURN VALUES

B<cpe6.rmt> exits with one of the following values:
 0      command completed successfully
 not 0  command failed

=head1 BUGS

B<cpe6.rmt> can run for kame-freebsd only.
Current version of the command needs B<kame-freebsd.rtadvd.tmpl>
on the current directory.

=head1 SEE ALSO

 perldoc V6evalRemote
 dhcp6c.conf(5) for kame-freebsd
 RFC6204.txt

=cut
