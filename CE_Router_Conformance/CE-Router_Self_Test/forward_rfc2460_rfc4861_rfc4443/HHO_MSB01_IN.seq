#!/usr/bin/perl
#
# Copyright (C) 2013
# Chunghwa Telecommunication Labratories (CHT-TL)
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $CHT-TL: HHO_MSB01_IN.seq,v 1.1 2014/07/17 weifen Exp $
#
######################################################################
BEGIN {
	$V6evalTool::TestVersion = '$Name: CE-Router_Self_Test_1_0_5 $';
}

use V6evalTool;
use CommonSPEC;
use lib '../';
use CPE6_config;
use DHCPv6_common;


if ($V6evalTool::NutDef{'Type'} ne 'router') {
    vLogHTML("This test is for the router only<BR>");
    exit($V6evalTool::exitRouterOnly);
}


$pktdesc{'echo_request_ex_link0'}
	= 'Send Echo Request (Unrecognized Option:Type 01) to link0';
$pktdesc{'echo_request_ex_link1'}
	= 'Recv Echo Request (Unrecognized Option:Type 01) from link1';

$endStatus = $V6evalTool::exitPass;

######################################################################

$IF0 = 'Link0';
$IF1 = 'Link1';

vCapture($IF0);
vCapture($IF1);


#----- test
my $ra = $STATEFUL_CLIENT ? 'ra_MsetOset' : 'ra_MclearOset';
my ($ret,$tn2_prefix) = cpe_initialization($ra,$IF0,$IF1,$STATEFUL_CLIENT,0);
if ($ret != 0) {
    vLogHTML('<FONT COLOR="#FF0000">CPE initialization fail!</FONT><BR>');
    dhcpExitFail();
}
if ($tn2_prefix =~ /3ffe:501:ffff/ ) {
    vLogHTML("<B>RA includes the global prefix($tn2_prefix).</B></BR>");
} else {
	vLogHTML('<FONT COLOR="#FF0000">Did not get golbal prefix from RA!</FONT><BR>');
  dhcpExitFail();
}

vClear($IF0);
vClear($IF1);

vCPP("-D\'PREFIX_FROM_PD=\"$tn2_prefix\"\' ");
vSend($IF1, 'echo_request_ex_link0');

# timeout
%ret = vRecv($IF0, 5 ,0 ,0, 'echo_request_ex_link1','ns_nut_lla_to_any_tn1_ga');
if ($ret{'status'} == 0) {
  if ($ret{'recvFrame'} eq 'echo_request_ex_link1') {
    vLogHTML('Received invalid forwarded Echo Request<BR>');
    vLogHTML('<FONT COLOR="#FF0000">NG</FONT><BR>');
    $endStatus = $V6evalTool::exitFail;
  } elsif ($ret{'recvFrame'} eq 'ns_nut_lla_to_any_tn1_ga'){
    vLogHTML('Receive NS from CE-Router.Send NA.<BR>');
    vSend($IF0, 'na_tn1_to_nut');
    %ret1 = vRecv($IF0, 5 ,0 ,0, 'echo_request_ex_link1');
    if ($ret1{'status'} == 0) {
      vLogHTML('Received invalid forwarded Echo Request<BR>');
      vLogHTML('<FONT COLOR="#FF0000">NG</FONT><BR>');
      $endStatus = $V6evalTool::exitFail;
    } else {
	vLogHTML('OK<BR>');
    }
  }
} else {
  vLogHTML('OK<BR>');
}

vStop($IF0);
vStop($IF1);

vRemote('reboot.rmt','');

exit($endStatus);
#----- end test
######################################################################
__END__

=head1 NAME

  Options Processing, Hop-by-Hop Options Header
  Part D: Most Significant Bits 01

=head1 TARGET

  CE-Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./HHO_MSB01_IN.seq">HHO_MSB01_IN.seq</A> [-tooloption ...] -pkt <A HREF="./HHO_MSB01_IN.def">HHO_MSB01_IN.def</A>
    -tooloption : v6eval tool option
</PRE>

=end html

=head1 INITIALIZATION

  Common Test Setup is performed at the beginning of this test part.

=head1 TEST PROCEDURE

Verify that a router properly processes both know and unknown options, and acts in accordance with the highest order two bits of the option.

   TN2                      CE-Router                      TN1
              (Link1)                     (Link0)
    |                           |                           |
    |-------------------------->|                           |
    |       Echo Request        |                           |
    |                           |                           |
    |(<------------------------)|(------------------------>)|
    |        No Packets         |         No Packets        |
    |                           |                           |
    v                           v                           v

  1. TN2 transmits an Echo Request to TN1 with a first hop through the CE-Router,
     the Echo Request that has a Hop-by-Hop Options header with an unknown Option Type of 71.
  2. Observe the packets transmitted by the CE-Router.

  Echo Request Data is:

        IPv6 Header
            Version            = 6
            Traffic Class      = 0
            FlowLabel          = 0
            PayloadLength      = 16
            NextHeader         = 0 (Hop-by-Hop Options Header)
            SourceAddress      = TN2 Global Address (Link1)
            DestinationAddress = TN1 Global Address (Link0)

        Hop-by-Hop Options Header
            NextHeader         = 58 (ICMPv6)
            HeaderExtLength    = 0
            OptionType         = 0x47 (Unrecognized Option, Type 01)
            OptDataLength      = 4
            data               = {0, 0, 0, 0}

        ICMP Echo Request
            Type           = 128 (Echo Request)
            Code           = 0
            Checksum       = (auto)
            Identifier     = 0xffff
            SequenceNumber = 1
            PayloadData    = {1, 2, 3, 4, 5, 6, 7, 8}


=head1 JUDGEMENT

  PASS: The CE-Router must not forward the Echo Request to TN1.
        The Echo Request is discarded.

=head1 CLEANUP

Common Test Cleanup

=cut

# =head1 REFERENCE
# 
# RFC2460
# 
# 4.  IPv6 Extension Headers
# 
#    With one exception, extension headers are not examined or processed
#    by any node along a packet's delivery path, until the packet reaches
#    the node (or each of the set of nodes, in the case of multicast)
#    identified in the Destination Address field of the IPv6 header.
#    There, normal demultiplexing on the Next Header field of the IPv6
#    header invokes the module to process the first extension header, or
#    the upper-layer header if no extension header is present.  The
#    contents and semantics of each extension header determine whether or
#    not to proceed to the next header.  Therefore, extension headers must
#    be processed strictly in the order they appear in the packet; a
#    receiver must not, for example, scan through a packet looking for a
#    particular kind of extension header and process that header prior to
#    processing all preceding ones.
# 
# =begin html
# <PRE>
#    <B>The exception referred to in the preceding paragraph is the Hop-by-
#    Hop Options header, which carries information that must be examined
#    and processed by every node along a packet's delivery path, including
#    the source and destination nodes.  The Hop-by-Hop Options                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     